
GO
PRINT N'Creating [ARTICLE]...';


GO
CREATE SCHEMA [ARTICLE]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [ECOMMERCE]...';


GO
CREATE SCHEMA [ECOMMERCE]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [GALLERY]...';


GO
CREATE SCHEMA [GALLERY]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [SECURITY]...';


GO
CREATE SCHEMA [SECURITY]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [SETUP]...';


GO
CREATE SCHEMA [SETUP]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [ARTICLE].[ARTICLE]...';


GO
CREATE TABLE [ARTICLE].[ARTICLE] (
    [ARTICLE_ID]            INT             IDENTITY (1, 1) NOT NULL,
    [ARTICLE_NAME]          NVARCHAR (500)  NOT NULL,
    [ARTICLE_DESCRIPTION]   NVARCHAR (1000) NOT NULL,
    [ARTICLE_SUMMARY]       NVARCHAR (1000) NOT NULL,
    [ARTICLE_KEYWORDS]      NVARCHAR (1000) NOT NULL,
    [ARTICLE_SEO_NAME]      NVARCHAR (1000) NOT NULL,
    [ARTICLE_DETAILS]       NTEXT           NOT NULL,
    [ARTICLE_URL]           NVARCHAR (1000) NOT NULL,
    [ARTICLE_IMAGE]         NVARCHAR (500)  NOT NULL,
    [ARTICLE_CATEGORY_ID]   INT             NOT NULL,
    [ARTICLE_CREATION_DAY]  INT             NOT NULL,
    [ARTICLE_CREATION_SEC]  INT             NOT NULL,
    [ARTICLE_IS_DELETED]    BIT             NOT NULL,
    [ARTICLE_PORTAL_ID]     INT             NOT NULL,
    [ARTICLE_LANGUAGE_ID]   INT             NOT NULL,
    [ARTICLE_TYPE]          INT             NOT NULL,
    [ARTICLE_ORDER]         INT             NOT NULL,
    [ARTICLE_CREATED_BY]    INT             NOT NULL,
    [ARTICLE_PARENT_OBJ_ID] INT             NOT NULL,
    [ARTICLE_VIEW_COUNT]    INT             NOT NULL
);


GO
PRINT N'Creating PK_ARTICLE...';


GO
ALTER TABLE [ARTICLE].[ARTICLE]
    ADD CONSTRAINT [PK_ARTICLE] PRIMARY KEY CLUSTERED ([ARTICLE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[ATTRIBUTE]...';


GO
CREATE TABLE [ECOMMERCE].[ATTRIBUTE] (
    [ATTRIBUTE_ID]         INT IDENTITY (1, 1) NOT NULL,
    [ATTRIBUTE_GROUP_ID]   INT NOT NULL,
    [ATTRIBUTE_PORTAL_ID]  INT NOT NULL,
    [ATTRIBUTE_IS_DELETED] BIT NOT NULL
);


GO
PRINT N'Creating PK_ATTRIBUTE...';


GO
ALTER TABLE [ECOMMERCE].[ATTRIBUTE]
    ADD CONSTRAINT [PK_ATTRIBUTE] PRIMARY KEY CLUSTERED ([ATTRIBUTE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[CATALOG]...';


GO
CREATE TABLE [ECOMMERCE].[CATALOG] (
    [CATALOG_ID]                INT            IDENTITY (1, 1) NOT NULL,
    [CATALOG_IS_DISPLAYED]      BIT            NOT NULL,
    [CATALOG_IS_GALLERY_ONLY]   BIT            NOT NULL,
    [CATALOG_IMAGE]             NVARCHAR (100) NULL,
    [CATALOG_PARENT_CATALOG_ID] INT            NULL,
    [CATALOG_IS_DELETED]        BIT            NOT NULL,
    [CATALOG_PORTAL_ID]         INT            NOT NULL,
    [CATALOG_ORDER]             INT            NOT NULL,
    [CATALOG_IS_PUBLISHED]      BIT            NOT NULL
);


GO
PRINT N'Creating PK_CATALOG...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG]
    ADD CONSTRAINT [PK_CATALOG] PRIMARY KEY CLUSTERED ([CATALOG_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[CATALOG_IMAGE]...';


GO
CREATE TABLE [ECOMMERCE].[CATALOG_IMAGE] (
    [CATALOG_IMAGE_ID]             INT            IDENTITY (1, 1) NOT NULL,
    [CATALOG_ID]                   INT            NOT NULL,
    [CATALOG_IMAGE_NAME]           NVARCHAR (500) NOT NULL,
    [CATALOG_IMAGE_IS_COVER_IMAGE] BIT            NOT NULL,
    [CATALOG_IMAGE_IS_DELETED]     BIT            NOT NULL
);


GO
PRINT N'Creating PK_CATALOG_IMAGE...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG_IMAGE]
    ADD CONSTRAINT [PK_CATALOG_IMAGE] PRIMARY KEY CLUSTERED ([CATALOG_IMAGE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[COMBINATION_ATTRIBUTE]...';


GO
CREATE TABLE [ECOMMERCE].[COMBINATION_ATTRIBUTE] (
    [COMBINATION_ID] INT NOT NULL,
    [ATTRIBUTE_ID]   INT NOT NULL
);


GO
PRINT N'Creating PK_COMBINATION_ATTRIBUTE...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_ATTRIBUTE]
    ADD CONSTRAINT [PK_COMBINATION_ATTRIBUTE] PRIMARY KEY CLUSTERED ([COMBINATION_ID] ASC, [ATTRIBUTE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[COMBINATION_IMAGE]...';


GO
CREATE TABLE [ECOMMERCE].[COMBINATION_IMAGE] (
    [COMBINATION_IMAGE_ID] INT NOT NULL,
    [COMBINATION_ID]       INT NOT NULL
);


GO
PRINT N'Creating PK_COMBINATION_IMAGE_1...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_IMAGE]
    ADD CONSTRAINT [PK_COMBINATION_IMAGE_1] PRIMARY KEY CLUSTERED ([COMBINATION_IMAGE_ID] ASC, [COMBINATION_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[COMBINATION_PRODUCT]...';


GO
CREATE TABLE [ECOMMERCE].[COMBINATION_PRODUCT] (
    [COMBINATION_ID]                         INT             IDENTITY (1, 1) NOT NULL,
    [COMBINATION_PRODUCT_ID]                 INT             NOT NULL,
    [COMBINATION_PRODUCT_REFERENCE]          NVARCHAR (500)  NOT NULL,
    [COMBINATION_PRODUCT_EAN13]              NVARCHAR (500)  NOT NULL,
    [COMBINATION_PRODUCT_UPC]                NVARCHAR (500)  NOT NULL,
    [COMBINATION_PRODUCT_SUPPLIER_REFERENCE] INT             NOT NULL,
    [COMBINATION_PRODUCT_WHOLESALE_PRICE]    DECIMAL (18, 2) NOT NULL,
    [COMBINATION_PRODUCT_IMPACT_ON_PRICE]    INT             NOT NULL,
    [COMBINATION_PRODUCT_IMPACT_ON_WEIGHT]   INT             NOT NULL,
    [COMBINATION_PRODUCT_INITIAL_STOCK]      INT             NOT NULL,
    [COMBINATION_PRODUCT_MINIMUM_QUANTITY]   INT             NOT NULL,
    [COMBINATION_PRODUCT_IS_DEFAULT]         BIT             NOT NULL,
    [COMBINATION_PRODUCT_COLOR]              NVARCHAR (500)  NOT NULL,
    [COMBINATION_IS_DELETED]                 BIT             NOT NULL
);


GO
PRINT N'Creating PK_PRODUCT_COMBINATION...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_PRODUCT]
    ADD CONSTRAINT [PK_PRODUCT_COMBINATION] PRIMARY KEY CLUSTERED ([COMBINATION_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[ECOMMERCE_LANGUAGE]...';


GO
CREATE TABLE [ECOMMERCE].[ECOMMERCE_LANGUAGE] (
    [ECO_LAN_OBJ_ID]    INT            NOT NULL,
    [ECO_LAN_MODULE_ID] INT            NOT NULL,
    [ECO_LAN_LAN_ID]    INT            NOT NULL,
    [ECO_LAN_NAME]      NVARCHAR (500) NULL,
    [ECO_LAN_DESC]      NVARCHAR (500) NULL,
    [ECO_LAN_KEYWORD]   NVARCHAR (500) NULL,
    [ECO_LAN_NAME2]     NVARCHAR (500) NULL,
    [ECO_LAN_DESC2]     NVARCHAR (500) NULL,
    [ECO_LAN_KEYWORD2]  NVARCHAR (500) NULL,
    [ECO_LAN_DETAILS]   NTEXT          NULL,
    [ECO_LAN_MESSAGE1]  NVARCHAR (500) NULL,
    [ECO_LAN_MESSAGE2]  NVARCHAR (500) NULL,
    [ECO_LAN_MESSAGE3]  NVARCHAR (500) NULL
);


GO
PRINT N'Creating PK_ECOMMERCE_LANGUAGE...';


GO
ALTER TABLE [ECOMMERCE].[ECOMMERCE_LANGUAGE]
    ADD CONSTRAINT [PK_ECOMMERCE_LANGUAGE] PRIMARY KEY CLUSTERED ([ECO_LAN_OBJ_ID] ASC, [ECO_LAN_MODULE_ID] ASC, [ECO_LAN_LAN_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[FEATURE]...';


GO
CREATE TABLE [ECOMMERCE].[FEATURE] (
    [FEATURE_ID]         INT IDENTITY (1, 1) NOT NULL,
    [FEATURE_IS_DELETED] BIT NOT NULL,
    [FEATURE_PORTAL_ID]  INT NOT NULL
);


GO
PRINT N'Creating PK_FEATURE...';


GO
ALTER TABLE [ECOMMERCE].[FEATURE]
    ADD CONSTRAINT [PK_FEATURE] PRIMARY KEY CLUSTERED ([FEATURE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[GROUP]...';


GO
CREATE TABLE [ECOMMERCE].[GROUP] (
    [GROUP_ID]             INT IDENTITY (1, 1) NOT NULL,
    [GROUP_IS_COLOR_GROUP] BIT NOT NULL,
    [GROUP_IS_DELETED]     BIT NOT NULL,
    [GROUP_PORTAL_ID]      INT NOT NULL
);


GO
PRINT N'Creating PK_GROUP...';


GO
ALTER TABLE [ECOMMERCE].[GROUP]
    ADD CONSTRAINT [PK_GROUP] PRIMARY KEY CLUSTERED ([GROUP_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[MANUFACTURARE]...';


GO
CREATE TABLE [ECOMMERCE].[MANUFACTURARE] (
    [MANUFACTURARE_ID]         INT            IDENTITY (1, 1) NOT NULL,
    [MANUFACTURARE_LOGO_IMAGE] NVARCHAR (500) NOT NULL,
    [MANUFACTURARE_IS_ENABLED] BIT            NOT NULL,
    [MANUFACTURARE_IS_DELETED] BIT            NOT NULL,
    [MANUFACTURARE_PORTAL_ID]  INT            NOT NULL
);


GO
PRINT N'Creating PK_MANUFACTURARE...';


GO
ALTER TABLE [ECOMMERCE].[MANUFACTURARE]
    ADD CONSTRAINT [PK_MANUFACTURARE] PRIMARY KEY CLUSTERED ([MANUFACTURARE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[PREFERENCE]...';


GO
CREATE TABLE [ECOMMERCE].[PREFERENCE] (
    [PREFERENCE_ID]         INT            IDENTITY (1, 1) NOT NULL,
    [PREFERENCE_NAME]       NVARCHAR (200) NOT NULL,
    [PREFERENCE_PORTAL_ID]  INT            NOT NULL,
    [PREFERENCE_IS_ENABLED] BIT            NOT NULL
);


GO
PRINT N'Creating PK_PREFERENCE...';


GO
ALTER TABLE [ECOMMERCE].[PREFERENCE]
    ADD CONSTRAINT [PK_PREFERENCE] PRIMARY KEY CLUSTERED ([PREFERENCE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[PRODUCT]...';


GO
CREATE TABLE [ECOMMERCE].[PRODUCT] (
    [PRODUCT_ID]                       INT             IDENTITY (1, 1) NOT NULL,
    [PRODUCT_SUPPLIER_ID]              INT             NULL,
    [PRODUCT_EAN13_OR_JAN]             NVARCHAR (500)  NULL,
    [PRODUCT_UPC]                      NVARCHAR (500)  NULL,
    [PRODUCT_LOCATION]                 NVARCHAR (500)  NULL,
    [PRODUCT_IS_DOWNLODABLE]           BIT             NOT NULL,
    [PRODUCT_DISPLAY_ON_SALE_ICON]     BIT             NOT NULL,
    [PRODUCT_INITIAL_STOCK]            INT             NOT NULL,
    [PRODUCT_MINIMUM_QUANTITY]         INT             NOT NULL,
    [PRODUCT_ADDITIONAL_SHIPPING_COST] DECIMAL (18, 2) NOT NULL,
    [PRODUCT_MANUFACTURER_ID]          INT             NULL,
    [PRODUCT_IS_ENABLED]               BIT             NOT NULL,
    [PRODUCT_IS_DELETED]               BIT             NOT NULL,
    [PRODUCT_PORTAL_ID]                INT             NOT NULL,
    [PRODUCT_TAX_ID]                   INT             NULL
);


GO
PRINT N'Creating PK_PRODUCT...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT]
    ADD CONSTRAINT [PK_PRODUCT] PRIMARY KEY CLUSTERED ([PRODUCT_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[PRODUCT_CATALOG]...';


GO
CREATE TABLE [ECOMMERCE].[PRODUCT_CATALOG] (
    [PRODUCT_ID]    INT NOT NULL,
    [CATALOG_ID]    INT NOT NULL,
    [PRODUCT_ORDER] INT NOT NULL
);


GO
PRINT N'Creating PK_PRODUCT_CATALOG...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_CATALOG]
    ADD CONSTRAINT [PK_PRODUCT_CATALOG] PRIMARY KEY CLUSTERED ([PRODUCT_ID] ASC, [CATALOG_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[PRODUCT_FEATURE]...';


GO
CREATE TABLE [ECOMMERCE].[PRODUCT_FEATURE] (
    [PRODUCT_FEATURE_ID]    INT NOT NULL,
    [PRODUCT_PRODUCT_ID]    INT NOT NULL,
    [PRODUCT_FEATURE_VALUE] INT NOT NULL
);


GO
PRINT N'Creating PK_PRODUCT_FEATURE...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_FEATURE]
    ADD CONSTRAINT [PK_PRODUCT_FEATURE] PRIMARY KEY CLUSTERED ([PRODUCT_FEATURE_ID] ASC, [PRODUCT_PRODUCT_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[PRODUCT_IMAGE]...';


GO
CREATE TABLE [ECOMMERCE].[PRODUCT_IMAGE] (
    [PROD_IMAGE_ID]             INT            IDENTITY (1, 1) NOT NULL,
    [PROD_PRODUCT_ID]           INT            NOT NULL,
    [PROD_IMAGE_NAME]           NVARCHAR (500) NOT NULL,
    [PROD_IMAGE_IS_COVER_IMAGE] BIT            NOT NULL,
    [PROD_IMAGE_IS_DELETED]     BIT            NOT NULL
);


GO
PRINT N'Creating PK_PRODUCT_IMAGE...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_IMAGE]
    ADD CONSTRAINT [PK_PRODUCT_IMAGE] PRIMARY KEY CLUSTERED ([PROD_IMAGE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[PRODUCT_PRICE]...';


GO
CREATE TABLE [ECOMMERCE].[PRODUCT_PRICE] (
    [PRODUCT_PRICE_ID]             INT             NOT NULL,
    [PRODUCT_PRICE_CURRENCY_ID]    INT             NOT NULL,
    [PRODUCT_PRICE_COUNTRY_ID]     INT             NOT NULL,
    [PRODUCT_PRICE_FROM_DAY]       INT             NOT NULL,
    [PRODUCT_PRICE_FROM_SEC]       INT             NOT NULL,
    [PRODUCT_PRICE_TO_DAY]         INT             NOT NULL,
    [PRODUCT_PRICE_TO_SEC]         INT             NOT NULL,
    [PRODUCT_PRICE_START_AT]       INT             NOT NULL,
    [PRODUCT_PRICE_VALUE]          DECIMAL (18, 2) NOT NULL,
    [PRODUCT_PRICE_DISCOUNT_VALUE] DECIMAL (18, 2) NOT NULL,
    [PRODUCT_PRICE_DISCOUNT_TYPE]  INT             NOT NULL,
    [PRODUCT_PRICE_PRODUCT_ID]     INT             NOT NULL,
    [PRODUCT_PRICE_IS_DELETED]     BIT             NOT NULL
);


GO
PRINT N'Creating PK_PRODUCT_PRICE...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_PRICE]
    ADD CONSTRAINT [PK_PRODUCT_PRICE] PRIMARY KEY CLUSTERED ([PRODUCT_PRICE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[SUPPLIER]...';


GO
CREATE TABLE [ECOMMERCE].[SUPPLIER] (
    [SUPPLIER_ID]            INT            IDENTITY (1, 1) NOT NULL,
    [SUPPLIER_LOGO_IMAGE]    NVARCHAR (100) NOT NULL,
    [SUPPLIER_IS_ENABLED]    BIT            NOT NULL,
    [SUPPLIER_PARENT_OBJ_ID] INT            NOT NULL,
    [SUPPLIER_IS_DELETED]    BIT            NOT NULL,
    [SUPPLIER_PORTAL_ID]     INT            NOT NULL
);


GO
PRINT N'Creating PK_SUPPLIER...';


GO
ALTER TABLE [ECOMMERCE].[SUPPLIER]
    ADD CONSTRAINT [PK_SUPPLIER] PRIMARY KEY CLUSTERED ([SUPPLIER_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [ECOMMERCE].[TAX]...';


GO
CREATE TABLE [ECOMMERCE].[TAX] (
    [TAX_ID]         INT            IDENTITY (1, 1) NOT NULL,
    [TAX_RATE]       DECIMAL (9, 2) NOT NULL,
    [TAX_IS_ENABLED] BIT            NOT NULL,
    [TAX_PORTAL_ID]  INT            NOT NULL,
    [TAX_IS_DELETED] BIT            NOT NULL
);


GO
PRINT N'Creating PK_TAX...';


GO
ALTER TABLE [ECOMMERCE].[TAX]
    ADD CONSTRAINT [PK_TAX] PRIMARY KEY CLUSTERED ([TAX_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [GALLERY].[GALLERY]...';


GO
CREATE TABLE [GALLERY].[GALLERY] (
    [GALLERY_ID]            INT             IDENTITY (1, 1) NOT NULL,
    [GALLERY_NAME]          NVARCHAR (500)  NOT NULL,
    [GALLERY_DESCRIPTION]   NVARCHAR (1000) NOT NULL,
    [GALLERY_SUMMARY]       NVARCHAR (1000) NOT NULL,
    [GALLERY_KEYWORDS]      NVARCHAR (1000) NOT NULL,
    [GALLERY_SEO_NAME]      NVARCHAR (1000) NOT NULL,
    [GALLERY_DETAILS]       NTEXT           NOT NULL,
    [GALLERY_URL]           NVARCHAR (1000) NOT NULL,
    [GALLERY_FILE]          NVARCHAR (500)  NOT NULL,
    [GALLERY_CATEGORY_ID]   INT             NOT NULL,
    [GALLERY_CREATION_DAY]  INT             NOT NULL,
    [GALLERY_CREATION_SEC]  INT             NOT NULL,
    [GALLERY_IS_DELETED]    BIT             NOT NULL,
    [GALLERY_PORTAL_ID]     INT             NOT NULL,
    [GALLERY_LANGUAGE_ID]   INT             NOT NULL,
    [GALLERY_TYPE]          INT             NOT NULL,
    [GALLERY_ITEM_TYPE]     INT             NOT NULL,
    [GALLERY_ORDER]         INT             NOT NULL,
    [GALLERY_CREATED_BY]    INT             NOT NULL,
    [GALLERY_PARENT_OBJ_ID] INT             NOT NULL
);


GO
PRINT N'Creating PK_GALLERY...';


GO
ALTER TABLE [GALLERY].[GALLERY]
    ADD CONSTRAINT [PK_GALLERY] PRIMARY KEY CLUSTERED ([GALLERY_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SECURITY].[FORM]...';


GO
CREATE TABLE [SECURITY].[FORM] (
    [FORM_ID]          INT             IDENTITY (1, 1) NOT NULL,
    [FORM_NAME]        NVARCHAR (1024) NOT NULL,
    [FORM_DESCRIPTION] NVARCHAR (1024) NOT NULL,
    [FORM_URL]         NVARCHAR (MAX)  NOT NULL,
    [FORM_CODE]        NVARCHAR (1024) NOT NULL,
    [FORM_MODULE_ID]   INT             NOT NULL,
    [FORM_IS_DELETED]  BIT             NOT NULL
);


GO
PRINT N'Creating PK_FORM...';


GO
ALTER TABLE [SECURITY].[FORM]
    ADD CONSTRAINT [PK_FORM] PRIMARY KEY CLUSTERED ([FORM_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SECURITY].[FORM_ROLE]...';


GO
CREATE TABLE [SECURITY].[FORM_ROLE] (
    [FORM_ROLE_ID]          INT IDENTITY (1, 1) NOT NULL,
    [FORM_ROLE_FORM_ID]     INT NOT NULL,
    [FORM_ROLE_ROLE_ID]     INT NOT NULL,
    [FORM_ROLE_ACCESS_TYPE] INT NOT NULL
);


GO
PRINT N'Creating PK_FORM_ROLE...';


GO
ALTER TABLE [SECURITY].[FORM_ROLE]
    ADD CONSTRAINT [PK_FORM_ROLE] PRIMARY KEY CLUSTERED ([FORM_ROLE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SECURITY].[FORM_ROLE].[IX_FORM_ROLE]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_FORM_ROLE]
    ON [SECURITY].[FORM_ROLE]([FORM_ROLE_FORM_ID] ASC, [FORM_ROLE_ROLE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [SECURITY].[FORM_USER]...';


GO
CREATE TABLE [SECURITY].[FORM_USER] (
    [FORM_USER_ID]          INT IDENTITY (1, 1) NOT NULL,
    [FORM_USER_FORM_ID]     INT NOT NULL,
    [FORM_USER_USER_ID]     INT NOT NULL,
    [FORM_USER_ACCESS_TYPE] INT NOT NULL
);


GO
PRINT N'Creating PK_FORM_USER...';


GO
ALTER TABLE [SECURITY].[FORM_USER]
    ADD CONSTRAINT [PK_FORM_USER] PRIMARY KEY CLUSTERED ([FORM_USER_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SECURITY].[FORM_USER].[IX_FORM_USER]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_FORM_USER]
    ON [SECURITY].[FORM_USER]([FORM_USER_FORM_ID] ASC, [FORM_USER_USER_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF, ONLINE = OFF, MAXDOP = 0)
    ON [PRIMARY];


GO
PRINT N'Creating [SECURITY].[ROLE]...';


GO
CREATE TABLE [SECURITY].[ROLE] (
    [ROLE_ID]          INT             IDENTITY (1, 1) NOT NULL,
    [ROLE_NAME]        NVARCHAR (256)  NOT NULL,
    [ROLE_DESCRIPTION] NVARCHAR (1024) NOT NULL,
    [ROLE_IS_DELETED]  BIT             NOT NULL
);


GO
PRINT N'Creating PK_ROLE...';


GO
ALTER TABLE [SECURITY].[ROLE]
    ADD CONSTRAINT [PK_ROLE] PRIMARY KEY CLUSTERED ([ROLE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SECURITY].[ROLE_USER]...';


GO
CREATE TABLE [SECURITY].[ROLE_USER] (
    [ROLE_USER_ROLE_ID] INT NOT NULL,
    [ROLE_USER_USER_ID] INT NOT NULL
);


GO
PRINT N'Creating PK_ROLE_USER...';


GO
ALTER TABLE [SECURITY].[ROLE_USER]
    ADD CONSTRAINT [PK_ROLE_USER] PRIMARY KEY CLUSTERED ([ROLE_USER_ROLE_ID] ASC, [ROLE_USER_USER_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SECURITY].[USER]...';


GO
CREATE TABLE [SECURITY].[USER] (
    [USER_ID]           INT             IDENTITY (1, 1) NOT NULL,
    [USER_NAME]         NVARCHAR (1000) NOT NULL,
    [USER_EMAIL]        NVARCHAR (1000) NOT NULL,
    [USER_PASSWORD]     NVARCHAR (MAX)  NOT NULL,
    [USER_IS_ACTIVE]    BIT             NOT NULL,
    [USER_CREATION_DAY] INT             NOT NULL,
    [USER_CREATION_SEC] INT             NOT NULL,
    [USER_IS_DELETED]   BIT             NOT NULL
);


GO
PRINT N'Creating PK_USER...';


GO
ALTER TABLE [SECURITY].[USER]
    ADD CONSTRAINT [PK_USER] PRIMARY KEY CLUSTERED ([USER_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[CATEGORY]...';


GO
CREATE TABLE [SETUP].[CATEGORY] (
    [CATEGORY_ID]           INT             IDENTITY (1, 1) NOT NULL,
    [CATEGORY_NAME]         NVARCHAR (500)  NOT NULL,
    [CATEGORY_DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [CATEGORY_MODULE_ID]    INT             NOT NULL,
    [CATEGORY_IS_DELETED]   BIT             NOT NULL,
    [CATEGORY_PORTAL_ID]    INT             NOT NULL,
    [CATEGORY_LANGUAGE_ID]  INT             NOT NULL,
    [CATEGORY_CREATION_DAY] INT             NOT NULL,
    [CATEGORY_CREATION_SEC] INT             NOT NULL,
    [CATEGORY_PARENT_ID]    INT             NOT NULL,
    [CATEGORY_ORDER]        INT             NOT NULL,
    [CATEGORY_CREATED_BY]   INT             NOT NULL,
    [CATEGORY_IMAGE]        NVARCHAR (500)  NOT NULL
);


GO
PRINT N'Creating PK_CATEGORY...';


GO
ALTER TABLE [SETUP].[CATEGORY]
    ADD CONSTRAINT [PK_CATEGORY] PRIMARY KEY CLUSTERED ([CATEGORY_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[CMSCONTROL]...';


GO
CREATE TABLE [SETUP].[CMSCONTROL] (
    [CMSCONTROL_ID]                INT             IDENTITY (1, 1) NOT NULL,
    [CMSCONTROL_NAME]              NVARCHAR (500)  NOT NULL,
    [CMSCONTROL_DESCRIPTION]       NVARCHAR (1000) NOT NULL,
    [CMSCONTROL_USER_CONTROL_PATH] NVARCHAR (1000) NOT NULL,
    [CMSCONTROL_IS_DELETED]        BIT             NOT NULL,
    [CMSCONTROL_CREATION_DAY]      INT             NOT NULL,
    [CMSCONTROL_CREATION_SEC]      INT             NOT NULL,
    [CMSCONTROL_MODULE_ID]         INT             NOT NULL,
    [CMSCONTROL_CREATED_BY]        INT             NOT NULL
);


GO
PRINT N'Creating PK_CMSCONTROL...';


GO
ALTER TABLE [SETUP].[CMSCONTROL]
    ADD CONSTRAINT [PK_CMSCONTROL] PRIMARY KEY CLUSTERED ([CMSCONTROL_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[HTMLBLOCK]...';


GO
CREATE TABLE [SETUP].[HTMLBLOCK] (
    [HTMLBLOCK_ID]           INT            IDENTITY (1, 1) NOT NULL,
    [HTMLBLOCK_NAME]         NVARCHAR (500) NOT NULL,
    [HTMLBLOCK_DETAILS]      NTEXT          NOT NULL,
    [HTMLBLOCK_IS_DELETED]   BIT            NOT NULL,
    [HTMLBLOCK_PORTAL_ID]    INT            NOT NULL,
    [HTMLBLOCK_LANGUAGE_ID]  INT            NOT NULL,
    [HTMLBLOCK_CREATION_DAY] INT            NOT NULL,
    [HTMLBLOCK_CREATION_SEC] INT            NOT NULL,
    [HTMLBLOCK_CREATED_BY]   INT            NOT NULL
);


GO
PRINT N'Creating PK_HTMLBLOCK...';


GO
ALTER TABLE [SETUP].[HTMLBLOCK]
    ADD CONSTRAINT [PK_HTMLBLOCK] PRIMARY KEY CLUSTERED ([HTMLBLOCK_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[LANGUAGE]...';


GO
CREATE TABLE [SETUP].[LANGUAGE] (
    [LANGUAGE_ID]      INT            IDENTITY (1, 1) NOT NULL,
    [LANGUAGE_NAME]    NVARCHAR (100) NOT NULL,
    [LANGUAGE_CULTURE] NVARCHAR (50)  NOT NULL,
    [LANGUAGE_IMAGE]   NVARCHAR (500) NOT NULL
);


GO
PRINT N'Creating PK_LANGUAGE...';


GO
ALTER TABLE [SETUP].[LANGUAGE]
    ADD CONSTRAINT [PK_LANGUAGE] PRIMARY KEY CLUSTERED ([LANGUAGE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[LANGUAGE_URL]...';


GO
CREATE TABLE [SETUP].[LANGUAGE_URL] (
    [LANGUAGE_URL_ID]          INT            IDENTITY (1, 1) NOT NULL,
    [LANGUAGE_URL_LANGUAGE_ID] INT            NOT NULL,
    [LANGUAGE_URL_NAME]        NVARCHAR (500) NOT NULL,
    [LANGUAGE_URL_PORTAL_ID]   INT            NOT NULL
);


GO
PRINT N'Creating PK_LANGUAGE_URL...';


GO
ALTER TABLE [SETUP].[LANGUAGE_URL]
    ADD CONSTRAINT [PK_LANGUAGE_URL] PRIMARY KEY CLUSTERED ([LANGUAGE_URL_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[MENU]...';


GO
CREATE TABLE [SETUP].[MENU] (
    [MENU_ID]            INT             IDENTITY (1, 1) NOT NULL,
    [MENU_NAME]          NVARCHAR (500)  NOT NULL,
    [MENU_DESCRIPTION]   NVARCHAR (1000) NOT NULL,
    [MENU_KEYWORDS]      NVARCHAR (1000) NOT NULL,
    [MENU_SEO_NAME]      NVARCHAR (1000) NOT NULL,
    [MENU_DETAILS]       NTEXT           NOT NULL,
    [MENU_URL]           NVARCHAR (1000) NOT NULL,
    [MENU_IMAGE]         NVARCHAR (500)  NOT NULL,
    [MENU_PAGE_ID]       INT             NOT NULL,
    [MENU_CATEGORY_ID]   INT             NOT NULL,
    [MENU_PARENT_ID]     INT             NOT NULL,
    [MENU_CREATION_DAY]  INT             NOT NULL,
    [MENU_CREATION_SEC]  INT             NOT NULL,
    [MENU_IS_DELETED]    BIT             NOT NULL,
    [MENU_PORTAL_ID]     INT             NOT NULL,
    [MENU_LANGUAGE_ID]   INT             NOT NULL,
    [MENU_TYPE]          INT             NOT NULL,
    [MENU_ORDER]         INT             NOT NULL,
    [MENU_CREATED_BY]    INT             NOT NULL,
    [MENU_PARENT_OBJ_ID] INT             NOT NULL
);


GO
PRINT N'Creating PK_MENU...';


GO
ALTER TABLE [SETUP].[MENU]
    ADD CONSTRAINT [PK_MENU] PRIMARY KEY CLUSTERED ([MENU_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[MODULE]...';


GO
CREATE TABLE [SETUP].[MODULE] (
    [MODULE_ID]           INT             IDENTITY (1, 1) NOT NULL,
    [MODULE_NAME]         NVARCHAR (500)  NOT NULL,
    [MODULE_DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [MODULE_IMAGE]        NVARCHAR (500)  NOT NULL,
    [MODULE_IS_DELETED]   BIT             NOT NULL,
    [MODULE_CREATION_DAY] INT             NOT NULL,
    [MODULE_CREATION_SEC] INT             NOT NULL,
    [MODULE_CREATED_BY]   INT             NOT NULL,
    [MODULE_PARENT_ID]    INT             NOT NULL
);


GO
PRINT N'Creating PK_MODULE...';


GO
ALTER TABLE [SETUP].[MODULE]
    ADD CONSTRAINT [PK_MODULE] PRIMARY KEY CLUSTERED ([MODULE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[PAGE]...';


GO
CREATE TABLE [SETUP].[PAGE] (
    [PAGE_ID]           INT             IDENTITY (1, 1) NOT NULL,
    [PAGE_CREATION_DAY] INT             NOT NULL,
    [PAGE_CREATION_SEC] INT             NOT NULL,
    [PAGE_DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [PAGE_DETAILS]      NTEXT           NOT NULL,
    [PAGE_ICON]         NVARCHAR (500)  NOT NULL,
    [PAGE_IS_DELETED]   BIT             NOT NULL,
    [PAGE_KEYWORDS]     NVARCHAR (1000) NOT NULL,
    [PAGE_LANGUAGE_ID]  INT             NOT NULL,
    [PAGE_NAME]         NVARCHAR (500)  NOT NULL,
    [PAGE_TYPE]         INT             NOT NULL,
    [PAGE_PORTAL_ID]    INT             NOT NULL,
    [PAGE_SEO_NAME]     NVARCHAR (1000) NOT NULL,
    [PAGE_TITLE]        NVARCHAR (500)  NOT NULL,
    [PAGE_TEMPLATE_ID]  INT             NOT NULL,
    [PAGE_CREATED_BY]   INT             NOT NULL
);


GO
PRINT N'Creating PK_PAGE...';


GO
ALTER TABLE [SETUP].[PAGE]
    ADD CONSTRAINT [PK_PAGE] PRIMARY KEY CLUSTERED ([PAGE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[PORTAL_LANGUAGE]...';


GO
CREATE TABLE [SETUP].[PORTAL_LANGUAGE] (
    [PORTAL_ID]   INT NOT NULL,
    [LANGUAGE_ID] INT NOT NULL
);


GO
PRINT N'Creating PK_PORTAL_LANGUAGE...';


GO
ALTER TABLE [SETUP].[PORTAL_LANGUAGE]
    ADD CONSTRAINT [PK_PORTAL_LANGUAGE] PRIMARY KEY CLUSTERED ([PORTAL_ID] ASC, [LANGUAGE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[PUBLISH]...';


GO
CREATE TABLE [SETUP].[PUBLISH] (
    [PUBLISH_ID]          INT IDENTITY (1, 1) NOT NULL,
    [PUBLISH_MODULE_ID]   INT NOT NULL,
    [PUBLISH_OBJECT_ID]   INT NOT NULL,
    [PUBLISH_TYPE_ID]     INT NOT NULL,
    [PUBLISH_FROM_DAY]    INT NOT NULL,
    [PUBLISH_FROM_SEC]    INT NOT NULL,
    [PUBLISH_TO_DAY]      INT NOT NULL,
    [PUBLISH_TO_SEC]      INT NOT NULL,
    [PUBLISH_CREATED_BY]  INT NOT NULL,
    [PUBLISH_PORTAL_ID]   INT NOT NULL,
    [PUBLISH_LANGUAGE_ID] INT NOT NULL
);


GO
PRINT N'Creating PK_PUBLISH...';


GO
ALTER TABLE [SETUP].[PUBLISH]
    ADD CONSTRAINT [PK_PUBLISH] PRIMARY KEY CLUSTERED ([PUBLISH_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[STYLE]...';


GO
CREATE TABLE [SETUP].[STYLE] (
    [STYLE_ID]           INT             IDENTITY (1, 1) NOT NULL,
    [STYLE_NAME]         NVARCHAR (500)  NOT NULL,
    [STYLE_FILE_NAME]    NVARCHAR (1000) NOT NULL,
    [STYLE_DETAILS]      NTEXT           NOT NULL,
    [STYLE_IS_DELETED]   BIT             NOT NULL,
    [STYLE_PORTAL_ID]    INT             NOT NULL,
    [STYLE_LANGUAGE_ID]  INT             NOT NULL,
    [STYLE_CREATION_DAY] INT             NOT NULL,
    [STYLE_CREATION_SEC] INT             NOT NULL,
    [STYLE_CREATED_BY]   INT             NOT NULL
);


GO
PRINT N'Creating PK_STYLE...';


GO
ALTER TABLE [SETUP].[STYLE]
    ADD CONSTRAINT [PK_STYLE] PRIMARY KEY CLUSTERED ([STYLE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[TEMPLATE]...';


GO
CREATE TABLE [SETUP].[TEMPLATE] (
    [TEMPLATE_ID]           INT             IDENTITY (1, 1) NOT NULL,
    [TEMPLATE_CREATION_DAY] INT             NOT NULL,
    [TEMPLATE_CREATION_SEC] INT             NOT NULL,
    [TEMPLATE_DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [TEMPLATE_DETAILS]      NTEXT           NOT NULL,
    [TEMPLATE_IMAGE]        NVARCHAR (500)  NOT NULL,
    [TEMPLATE_IS_DELETED]   BIT             NOT NULL,
    [TEMPLATE_LANGUAGE_ID]  INT             NOT NULL,
    [TEMPLATE_NAME]         NVARCHAR (500)  NOT NULL,
    [TEMPLATE_PORTAL_ID]    INT             NOT NULL,
    [TEMPLATE_CREATED_BY]   INT             NULL
);


GO
PRINT N'Creating PK_TEMPLATE...';


GO
ALTER TABLE [SETUP].[TEMPLATE]
    ADD CONSTRAINT [PK_TEMPLATE] PRIMARY KEY CLUSTERED ([TEMPLATE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating [SETUP].[XSLTEMPLATE]...';


GO
CREATE TABLE [SETUP].[XSLTEMPLATE] (
    [XSLTEMPLATE_ID]           INT             IDENTITY (1, 1) NOT NULL,
    [XSLTEMPLATE_NAME]         NVARCHAR (500)  NOT NULL,
    [XSLTEMPLATE_DESCRIPTION]  NVARCHAR (1000) NOT NULL,
    [XSLTEMPLATE_DETAILS]      NTEXT           NOT NULL,
    [XSLTEMPLATE_MODULE_ID]    INT             NOT NULL,
    [XSLTEMPLATE_IS_DELETED]   BIT             NOT NULL,
    [XSLTEMPLATE_PORTAL_ID]    INT             NOT NULL,
    [XSLTEMPLATE_LANGUAGE_ID]  INT             NOT NULL,
    [XSLTEMPLATE_CREATION_DAY] INT             NOT NULL,
    [XSLTEMPLATE_CREATION_SEC] INT             NOT NULL,
    [XSLTEMPLATE_CREATED_BY]   INT             NOT NULL
);


GO
PRINT N'Creating PK_XSLTEMPLATE...';


GO
ALTER TABLE [SETUP].[XSLTEMPLATE]
    ADD CONSTRAINT [PK_XSLTEMPLATE] PRIMARY KEY CLUSTERED ([XSLTEMPLATE_ID] ASC) WITH (ALLOW_PAGE_LOCKS = ON, ALLOW_ROW_LOCKS = ON, PAD_INDEX = OFF, IGNORE_DUP_KEY = OFF, STATISTICS_NORECOMPUTE = OFF);


GO
PRINT N'Creating DF_ARTICLE_ARTICLE_PARENT_ID...';


GO
ALTER TABLE [ARTICLE].[ARTICLE]
    ADD CONSTRAINT [DF_ARTICLE_ARTICLE_PARENT_ID] DEFAULT ((0)) FOR [ARTICLE_PARENT_OBJ_ID];


GO
PRINT N'Creating DF_ARTICLE_ARTICLE_VIEW_COUNT...';


GO
ALTER TABLE [ARTICLE].[ARTICLE]
    ADD CONSTRAINT [DF_ARTICLE_ARTICLE_VIEW_COUNT] DEFAULT ((0)) FOR [ARTICLE_VIEW_COUNT];


GO
PRINT N'Creating DF_ATTRIBUTE_ATTRIBUTE_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[ATTRIBUTE]
    ADD CONSTRAINT [DF_ATTRIBUTE_ATTRIBUTE_IS_DELETED] DEFAULT ((0)) FOR [ATTRIBUTE_IS_DELETED];


GO
PRINT N'Creating DF_CATALOG_CATALOG_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG]
    ADD CONSTRAINT [DF_CATALOG_CATALOG_IS_DELETED] DEFAULT ((0)) FOR [CATALOG_IS_DELETED];


GO
PRINT N'Creating DF_CATALOG_CATALOG_IS_PUBLISHED...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG]
    ADD CONSTRAINT [DF_CATALOG_CATALOG_IS_PUBLISHED] DEFAULT ((0)) FOR [CATALOG_IS_PUBLISHED];


GO
PRINT N'Creating DF_CATALOG_CATALOG_ORDER...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG]
    ADD CONSTRAINT [DF_CATALOG_CATALOG_ORDER] DEFAULT ((0)) FOR [CATALOG_ORDER];


GO
PRINT N'Creating DF_Table_1_PROD_IMAGE_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG_IMAGE]
    ADD CONSTRAINT [DF_Table_1_PROD_IMAGE_IS_DELETED] DEFAULT ((0)) FOR [CATALOG_IMAGE_IS_DELETED];


GO
PRINT N'Creating DF_COMBINATION_PRODUCT_COMBINATION_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_PRODUCT]
    ADD CONSTRAINT [DF_COMBINATION_PRODUCT_COMBINATION_IS_DELETED] DEFAULT ((0)) FOR [COMBINATION_IS_DELETED];


GO
PRINT N'Creating DF_FEATURE_FEATURE_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[FEATURE]
    ADD CONSTRAINT [DF_FEATURE_FEATURE_IS_DELETED] DEFAULT ((0)) FOR [FEATURE_IS_DELETED];


GO
PRINT N'Creating DF_GROUP_GROUP_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[GROUP]
    ADD CONSTRAINT [DF_GROUP_GROUP_IS_DELETED] DEFAULT ((0)) FOR [GROUP_IS_DELETED];


GO
PRINT N'Creating DF_MANUFACTURARE_MANUFACTURARE_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[MANUFACTURARE]
    ADD CONSTRAINT [DF_MANUFACTURARE_MANUFACTURARE_IS_DELETED] DEFAULT ((0)) FOR [MANUFACTURARE_IS_DELETED];


GO
PRINT N'Creating DF_PRODUCT_PRODUCT_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT]
    ADD CONSTRAINT [DF_PRODUCT_PRODUCT_IS_DELETED] DEFAULT ((0)) FOR [PRODUCT_IS_DELETED];


GO
PRINT N'Creating DF_PRODUCT_IMAGE_PROD_IMAGE_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_IMAGE]
    ADD CONSTRAINT [DF_PRODUCT_IMAGE_PROD_IMAGE_IS_DELETED] DEFAULT ((0)) FOR [PROD_IMAGE_IS_DELETED];


GO
PRINT N'Creating DF_PRODUCT_PRICE_PRODUCT_PRICE_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_PRICE]
    ADD CONSTRAINT [DF_PRODUCT_PRICE_PRODUCT_PRICE_IS_DELETED] DEFAULT ((0)) FOR [PRODUCT_PRICE_IS_DELETED];


GO
PRINT N'Creating DF_SUPPLIER_SUPPLIER_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[SUPPLIER]
    ADD CONSTRAINT [DF_SUPPLIER_SUPPLIER_IS_DELETED] DEFAULT ((0)) FOR [SUPPLIER_IS_DELETED];


GO
PRINT N'Creating DF_TAX_TAX_IS_DELETED...';


GO
ALTER TABLE [ECOMMERCE].[TAX]
    ADD CONSTRAINT [DF_TAX_TAX_IS_DELETED] DEFAULT ((0)) FOR [TAX_IS_DELETED];


GO
PRINT N'Creating FK_ATTRIBUTE_GROUP...';


GO
ALTER TABLE [ECOMMERCE].[ATTRIBUTE] WITH NOCHECK
    ADD CONSTRAINT [FK_ATTRIBUTE_GROUP] FOREIGN KEY ([ATTRIBUTE_GROUP_ID]) REFERENCES [ECOMMERCE].[GROUP] ([GROUP_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_CATALOG_CATALOG...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG] WITH NOCHECK
    ADD CONSTRAINT [FK_CATALOG_CATALOG] FOREIGN KEY ([CATALOG_ID]) REFERENCES [ECOMMERCE].[CATALOG] ([CATALOG_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_CATALOG_CATALOG1...';


GO
ALTER TABLE [ECOMMERCE].[CATALOG] WITH NOCHECK
    ADD CONSTRAINT [FK_CATALOG_CATALOG1] FOREIGN KEY ([CATALOG_PARENT_CATALOG_ID]) REFERENCES [ECOMMERCE].[CATALOG] ([CATALOG_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_COMBINATION_ATTRIBUTE_ATTRIBUTE...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_ATTRIBUTE] WITH NOCHECK
    ADD CONSTRAINT [FK_COMBINATION_ATTRIBUTE_ATTRIBUTE] FOREIGN KEY ([ATTRIBUTE_ID]) REFERENCES [ECOMMERCE].[ATTRIBUTE] ([ATTRIBUTE_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_COMBINATION_ATTRIBUTE_PRODUCT_COMBINATION...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_ATTRIBUTE] WITH NOCHECK
    ADD CONSTRAINT [FK_COMBINATION_ATTRIBUTE_PRODUCT_COMBINATION] FOREIGN KEY ([COMBINATION_ID]) REFERENCES [ECOMMERCE].[COMBINATION_PRODUCT] ([COMBINATION_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_COMBINATION_IMAGE_PRODUCT_COMBINATION...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_IMAGE] WITH NOCHECK
    ADD CONSTRAINT [FK_COMBINATION_IMAGE_PRODUCT_COMBINATION] FOREIGN KEY ([COMBINATION_ID]) REFERENCES [ECOMMERCE].[COMBINATION_PRODUCT] ([COMBINATION_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_COMBINATION_IMAGE_PRODUCT_IMAGE...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_IMAGE] WITH NOCHECK
    ADD CONSTRAINT [FK_COMBINATION_IMAGE_PRODUCT_IMAGE] FOREIGN KEY ([COMBINATION_IMAGE_ID]) REFERENCES [ECOMMERCE].[PRODUCT_IMAGE] ([PROD_IMAGE_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_COMBINATION_PRODUCT...';


GO
ALTER TABLE [ECOMMERCE].[COMBINATION_PRODUCT] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_COMBINATION_PRODUCT] FOREIGN KEY ([COMBINATION_PRODUCT_ID]) REFERENCES [ECOMMERCE].[PRODUCT] ([PRODUCT_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_MANUFACTURARE...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_MANUFACTURARE] FOREIGN KEY ([PRODUCT_MANUFACTURER_ID]) REFERENCES [ECOMMERCE].[MANUFACTURARE] ([MANUFACTURARE_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_SUPPLIER...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_SUPPLIER] FOREIGN KEY ([PRODUCT_SUPPLIER_ID]) REFERENCES [ECOMMERCE].[SUPPLIER] ([SUPPLIER_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_TAX...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_TAX] FOREIGN KEY ([PRODUCT_TAX_ID]) REFERENCES [ECOMMERCE].[TAX] ([TAX_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_CATALOG_CATALOG...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_CATALOG] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_CATALOG_CATALOG] FOREIGN KEY ([CATALOG_ID]) REFERENCES [ECOMMERCE].[CATALOG] ([CATALOG_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_CATALOG_PRODUCT...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_CATALOG] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_CATALOG_PRODUCT] FOREIGN KEY ([PRODUCT_ID]) REFERENCES [ECOMMERCE].[PRODUCT] ([PRODUCT_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_FEATURE_FEATURE...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_FEATURE] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_FEATURE_FEATURE] FOREIGN KEY ([PRODUCT_FEATURE_ID]) REFERENCES [ECOMMERCE].[FEATURE] ([FEATURE_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_FEATURE_PRODUCT...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_FEATURE] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_FEATURE_PRODUCT] FOREIGN KEY ([PRODUCT_PRODUCT_ID]) REFERENCES [ECOMMERCE].[PRODUCT] ([PRODUCT_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_IMAGE_PRODUCT...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_IMAGE] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_IMAGE_PRODUCT] FOREIGN KEY ([PROD_PRODUCT_ID]) REFERENCES [ECOMMERCE].[PRODUCT] ([PRODUCT_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating FK_PRODUCT_PRICE_PRODUCT...';


GO
ALTER TABLE [ECOMMERCE].[PRODUCT_PRICE] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_PRICE_PRODUCT] FOREIGN KEY ([PRODUCT_PRICE_TO_SEC]) REFERENCES [ECOMMERCE].[PRODUCT] ([PRODUCT_ID]) ON DELETE NO ACTION ON UPDATE NO ACTION;


GO
PRINT N'Creating [ARTICLE].[ArticleAdd]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleAdd]
	@P_ARTICLE_ID int output,
    @P_ARTICLE_NAME nvarchar(500),
    @P_ARTICLE_DESCRIPTION nvarchar(1000),
    @P_ARTICLE_SUMMARY nvarchar(1000),
	@P_ARTICLE_KEYWORDS nvarchar(1000),
	@P_ARTICLE_SEO_NAME nvarchar(1000),
	@P_ARTICLE_DETAILS ntext,
    @P_ARTICLE_URL nvarchar(1000),
	@P_ARTICLE_IMAGE nvarchar(500),	
	@P_ARTICLE_CATEGORY_ID int,
	@P_ARTICLE_CREATION_DAY int,
	@P_ARTICLE_CREATION_SEC int,
	@P_ARTICLE_IS_DELETED bit,
	@P_ARTICLE_PORTAL_ID int,
	@P_ARTICLE_LANGUAGE_ID int,
	@P_ARTICLE_TYPE int,
	@P_ARTICLE_ORDER int,
	@P_ARTICLE_CREATED_BY int,
	@P_ARTICLE_PARENT_OBJ_ID int,
	@P_ARTICLE_VIEW_COUNT int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [ARTICLE].[ARTICLE]
		(
		[ARTICLE_NAME]
		,[ARTICLE_DESCRIPTION]
		,[ARTICLE_KEYWORDS]
		,[ARTICLE_SEO_NAME]
		,[ARTICLE_DETAILS]
		,[ARTICLE_URL]
		,[ARTICLE_IMAGE]
		,[ARTICLE_SUMMARY]
		,[ARTICLE_CATEGORY_ID]
		,[ARTICLE_CREATION_DAY]
		,[ARTICLE_CREATION_SEC]
		,[ARTICLE_IS_DELETED]
		,[ARTICLE_PORTAL_ID]
		,[ARTICLE_LANGUAGE_ID]
		,[ARTICLE_TYPE]
		,[ARTICLE_ORDER]
		,[ARTICLE_CREATED_BY]
		,[ARTICLE_PARENT_OBJ_ID] 
		,[ARTICLE_VIEW_COUNT]
		)
	VALUES
		(
		@P_ARTICLE_NAME,
		@P_ARTICLE_DESCRIPTION,
		@P_ARTICLE_KEYWORDS,
		@P_ARTICLE_SEO_NAME,
		@P_ARTICLE_DETAILS,
		@P_ARTICLE_URL,
		@P_ARTICLE_IMAGE,
		@P_ARTICLE_SUMMARY,
		@P_ARTICLE_CATEGORY_ID,
		@P_ARTICLE_CREATION_DAY,
		@P_ARTICLE_CREATION_SEC,
		@P_ARTICLE_IS_DELETED,
		@P_ARTICLE_PORTAL_ID,
		@P_ARTICLE_LANGUAGE_ID,
		@P_ARTICLE_TYPE,
		@P_ARTICLE_ORDER,
		@P_ARTICLE_CREATED_BY,
		@P_ARTICLE_PARENT_OBJ_ID ,
		@P_ARTICLE_VIEW_COUNT 
		)
		
		set @P_ARTICLE_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [ARTICLE].[ArticleDelete]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleDelete]
	@P_ARTICLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [ARTICLE].[ARTICLE] 
		Where ARTICLE_ID=@P_ARTICLE_ID
		or
		(
			ARTICLE_PARENT_OBJ_ID = @P_ARTICLE_ID
		)
END
GO
PRINT N'Creating [ARTICLE].[ArticleDeleteLogical]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleDeleteLogical]
	@P_ARTICLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [ARTICLE].[ARTICLE] set
	[ARTICLE_IS_DELETED]=1
	Where
	ARTICLE_ID=@P_ARTICLE_ID
	or
	(
		ARTICLE_PARENT_OBJ_ID = @P_ARTICLE_ID
	)
END
GO
PRINT N'Creating [ARTICLE].[ArticleGetAll]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleGetAll]
@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	A.[ARTICLE_ID],
	A.[ARTICLE_NAME],
	A.[ARTICLE_DESCRIPTION],
	A.[ARTICLE_KEYWORDS],
	A.[ARTICLE_SEO_NAME],
	A.[ARTICLE_DETAILS],
	A.[ARTICLE_URL],
	A.[ARTICLE_IMAGE],
	A.[ARTICLE_SUMMARY],
	A.[ARTICLE_CATEGORY_ID],
	A.[ARTICLE_CREATION_DAY],
	A.[ARTICLE_CREATION_SEC],
	A.[ARTICLE_IS_DELETED],
	A.[ARTICLE_PORTAL_ID],
	A.[ARTICLE_LANGUAGE_ID],
	A.[ARTICLE_TYPE],
	A.[ARTICLE_ORDER],
	A.[ARTICLE_CREATED_BY],
	A.[ARTICLE_PARENT_OBJ_ID] ,
	A.[ARTICLE_VIEW_COUNT] ,
	P.[PUBLISH_TYPE_ID] 
 from [ARTICLE].[ARTICLE] AS A
		LEFT OUTER JOIN
	  [SETUP].[PUBLISH] AS P
	    ON 
	  A.[ARTICLE_ID] = P.[PUBLISH_OBJECT_ID]
	    AND	
      A.[ARTICLE_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
        AND
	  A.[ARTICLE_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID]
	    AND
	  P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
	
 where [ARTICLE_IS_DELETED] = 0
 order by [ARTICLE_ORDER],[ARTICLE_CREATION_DAY],[ARTICLE_CREATION_SEC]
END
GO
PRINT N'Creating [ARTICLE].[ArticleGetByCategory]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleGetByCategory]
	@P_ARTICLE_CATEGORY_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	A.[ARTICLE_ID],
	A.[ARTICLE_NAME],
	A.[ARTICLE_DESCRIPTION],
	A.[ARTICLE_KEYWORDS],
	A.[ARTICLE_SEO_NAME],
	A.[ARTICLE_DETAILS],
	A.[ARTICLE_URL],
	A.[ARTICLE_IMAGE],
	A.[ARTICLE_SUMMARY],
	A.[ARTICLE_CATEGORY_ID],
	A.[ARTICLE_CREATION_DAY],
	A.[ARTICLE_CREATION_SEC],
	A.[ARTICLE_IS_DELETED],
	A.[ARTICLE_PORTAL_ID],
	A.[ARTICLE_LANGUAGE_ID],
	A.[ARTICLE_TYPE],
	A.[ARTICLE_ORDER],
	A.[ARTICLE_CREATED_BY],
	A.[ARTICLE_PARENT_OBJ_ID] ,
	A.[ARTICLE_VIEW_COUNT],
	P.[PUBLISH_TYPE_ID] 
 from [ARTICLE].[ARTICLE] AS A
		LEFT OUTER JOIN
	  [SETUP].[PUBLISH] AS P
	    ON 
	  A.[ARTICLE_ID] = P.[PUBLISH_OBJECT_ID]
	    AND	
      A.[ARTICLE_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
        AND
	  A.[ARTICLE_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID]
	    AND
	  P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
	where [ARTICLE_CATEGORY_ID] = @P_ARTICLE_CATEGORY_ID
	and
		[ARTICLE_IS_DELETED] = 0
 order by [ARTICLE_ORDER],[ARTICLE_CREATION_DAY],[ARTICLE_CREATION_SEC]
END
GO
PRINT N'Creating [ARTICLE].[ArticleGetByCategoryXML]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleGetByCategoryXML]
	@P_ARTICLE_CATEGORY_ID int,
	@P_ROW_FROM int,
	@P_ROW_TO int,
	@P_TOTAL_COUNT int output,
	@P_PUBLISH_MODULE_ID int,
	@P_PUBLISH_TYPE_ID int,
	@P_ARTICLE_LANGUAGE_ID INT
	
AS
BEGIN
	SET NOCOUNT ON;
	
	Select @P_TOTAL_COUNT = Count(1) from
		[ARTICLE].[ARTICLE]
		INNER JOIN
		[SETUP].[PUBLISH]
		ON 
		   [PUBLISH_OBJECT_ID] = case when [ARTICLE_PARENT_OBJ_ID] > 0 then [ARTICLE_PARENT_OBJ_ID]
		   else [ARTICLE_ID] end 
			AND	
			[ARTICLE_PORTAL_ID] = [PUBLISH_PORTAL_ID]
			---AND
			--[ARTICLE_LANGUAGE_ID] = [PUBLISH_LANGUAGE_ID] 
			AND
			[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
			AND
			[PUBLISH_TYPE_ID] = @P_PUBLISH_TYPE_ID
		where
			[ARTICLE_CATEGORY_ID] = @P_ARTICLE_CATEGORY_ID
			AND
			[ARTICLE_LANGUAGE_ID] = @P_ARTICLE_LANGUAGE_ID
			AND
			[ARTICLE_IS_DELETED] = 0
			
	Select 
		[ARTICLE_ID],
		[ARTICLE_NAME],
		[ARTICLE_DESCRIPTION],
		[ARTICLE_KEYWORDS],
		[ARTICLE_SEO_NAME],
		[ARTICLE_URL],
		[ARTICLE_IMAGE],
		[ARTICLE_SUMMARY],
		[ARTICLE_CATEGORY_ID],
		[ARTICLE_CREATION_DAY],
		[ARTICLE_CREATION_SEC],
		[ARTICLE_IS_DELETED],
		[ARTICLE_PORTAL_ID],
		[ARTICLE_LANGUAGE_ID],
		[ARTICLE_TYPE],
		[ARTICLE_ORDER],
		[ARTICLE_CREATED_BY],
		[ARTICLE_PARENT_OBJ_ID],
		[ARTICLE_VIEW_COUNT],
		[PUBLISH_TYPE_ID]
	From
	(
		Select 
			[ARTICLE_ID],
			[ARTICLE_NAME],
			[ARTICLE_DESCRIPTION],
			[ARTICLE_KEYWORDS],
			[ARTICLE_SEO_NAME],
			[ARTICLE_URL],
			[ARTICLE_IMAGE],
			[ARTICLE_SUMMARY],
			[ARTICLE_CATEGORY_ID],
			[ARTICLE_CREATION_DAY],
			[ARTICLE_CREATION_SEC],
			[ARTICLE_IS_DELETED],
			[ARTICLE_PORTAL_ID],
			[ARTICLE_LANGUAGE_ID],
			[ARTICLE_TYPE],
			[ARTICLE_ORDER],
			[ARTICLE_CREATED_BY],
			[ARTICLE_PARENT_OBJ_ID] ,
			[ARTICLE_VIEW_COUNT],
			[PUBLISH_TYPE_ID],
			Row_Number() over(order by [ARTICLE_ORDER],[ARTICLE_CREATION_DAY] DESC,[ARTICLE_CREATION_SEC] DESC) As [RowNumber]
		from
		[ARTICLE].[ARTICLE] AS A
		INNER JOIN
		[SETUP].[PUBLISH] AS P
		ON 
			[PUBLISH_OBJECT_ID] = case when [ARTICLE_PARENT_OBJ_ID] > 0 then [ARTICLE_PARENT_OBJ_ID]
		   else [ARTICLE_ID] end 
			AND	
			A.[ARTICLE_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
			--AND
			--A.[ARTICLE_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID]
			AND
			P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
			AND
			p.[PUBLISH_TYPE_ID] = @P_PUBLISH_TYPE_ID
		where
			A.[ARTICLE_CATEGORY_ID] = @P_ARTICLE_CATEGORY_ID
			AND
		    A.[ARTICLE_LANGUAGE_ID] =@P_ARTICLE_LANGUAGE_ID
			and
			A.[ARTICLE_IS_DELETED] = 0
	) As Item
	Where [RowNumber] Between @P_ROW_FROM AND @P_ROW_TO
	
	For XML AUTO,TYPE,ROOT('Parent')
END
GO
PRINT N'Creating [ARTICLE].[ArticleGetByID]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleGetByID]
	@P_ARTICLE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	A.[ARTICLE_ID],
	A.[ARTICLE_NAME],
	A.[ARTICLE_DESCRIPTION],
	A.[ARTICLE_KEYWORDS],
	A.[ARTICLE_SEO_NAME],
	A.[ARTICLE_DETAILS],
	A.[ARTICLE_URL],
	A.[ARTICLE_IMAGE],
	A.[ARTICLE_SUMMARY],
	A.[ARTICLE_CATEGORY_ID],
	A.[ARTICLE_CREATION_DAY],
	A.[ARTICLE_CREATION_SEC],
	A.[ARTICLE_IS_DELETED],
	A.[ARTICLE_PORTAL_ID],
	A.[ARTICLE_LANGUAGE_ID],
	A.[ARTICLE_TYPE],
	A.[ARTICLE_ORDER],
	A.[ARTICLE_CREATED_BY],
	A.[ARTICLE_PARENT_OBJ_ID] ,
	A.[ARTICLE_VIEW_COUNT],
	 P.[PUBLISH_TYPE_ID]
 from [ARTICLE].[ARTICLE] AS A
		LEFT OUTER JOIN
	  [SETUP].[PUBLISH] AS P
	    ON 
	  A.[ARTICLE_ID] = P.[PUBLISH_OBJECT_ID]
	    AND	
      A.[ARTICLE_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
        AND
	  A.[ARTICLE_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID]
	    AND
	  P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID  
		Where [ARTICLE_ID] = @P_ARTICLE_ID
		and
		[ARTICLE_IS_DELETED] = 0
		order by [ARTICLE_ORDER]
END
GO
PRINT N'Creating [ARTICLE].[ArticleGetByParentObjIdAndLanguageID]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleGetByParentObjIdAndLanguageID]
	@P_ARTICLE_PARENT_OBJ_ID int,
	@P_ARTICLE_LANGUAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	A.[ARTICLE_ID],
	A.[ARTICLE_NAME],
	A.[ARTICLE_DESCRIPTION],
	A.[ARTICLE_KEYWORDS],
	A.[ARTICLE_SEO_NAME],
	A.[ARTICLE_DETAILS],
	A.[ARTICLE_URL],
	A.[ARTICLE_IMAGE],
	A.[ARTICLE_SUMMARY],
	A.[ARTICLE_CATEGORY_ID],
	A.[ARTICLE_CREATION_DAY],
	A.[ARTICLE_CREATION_SEC],
	A.[ARTICLE_IS_DELETED],
	A.[ARTICLE_PORTAL_ID],
	A.[ARTICLE_LANGUAGE_ID],
	A.[ARTICLE_TYPE],
	A.[ARTICLE_ORDER],
	A.[ARTICLE_CREATED_BY],
	A.[ARTICLE_PARENT_OBJ_ID] ,
	A.[ARTICLE_VIEW_COUNT],
	P.[PUBLISH_TYPE_ID]
 from [ARTICLE].[ARTICLE] AS A
		LEFT OUTER JOIN
	  [SETUP].[PUBLISH] AS P
	    ON 
	  A.[ARTICLE_ID] = P.[PUBLISH_OBJECT_ID]
	    AND	
      A.[ARTICLE_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
        AND
	  A.[ARTICLE_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID]
	    AND
	  P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
		Where [ARTICLE_PARENT_OBJ_ID] = @P_ARTICLE_PARENT_OBJ_ID
		AND
			  [ARTICLE_LANGUAGE_ID] = @P_ARTICLE_LANGUAGE_ID
		AND
			  [ARTICLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [ARTICLE].[ArticleGetByPortalLanguage]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleGetByPortalLanguage]
	@P_ARTICLE_PORTAL_ID int,
	@P_ARTICLE_LANGUAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	A.[ARTICLE_ID],
	A.[ARTICLE_NAME],
	A.[ARTICLE_DESCRIPTION],
	A.[ARTICLE_KEYWORDS],
	A.[ARTICLE_SEO_NAME],
	A.[ARTICLE_DETAILS],
	A.[ARTICLE_URL],
	A.[ARTICLE_IMAGE],
	A.[ARTICLE_SUMMARY],
	A.[ARTICLE_CATEGORY_ID],
	A.[ARTICLE_CREATION_DAY],
	A.[ARTICLE_CREATION_SEC],
	A.[ARTICLE_IS_DELETED],
	A.[ARTICLE_PORTAL_ID],
	A.[ARTICLE_LANGUAGE_ID],
	A.[ARTICLE_TYPE],
	A.[ARTICLE_ORDER],
	A.[ARTICLE_CREATED_BY],
	A.[ARTICLE_PARENT_OBJ_ID] ,
	A.[ARTICLE_VIEW_COUNT],
	 P.[PUBLISH_TYPE_ID]
 from [ARTICLE].[ARTICLE] AS A
		LEFT OUTER JOIN
	  [SETUP].[PUBLISH] AS P
	    ON 
	  A.[ARTICLE_ID] = P.[PUBLISH_OBJECT_ID]
	    AND	
      A.[ARTICLE_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
        AND
	  A.[ARTICLE_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID]
	    AND
	  P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID  
	where 
	[ARTICLE_PORTAL_ID] = @P_ARTICLE_PORTAL_ID
	and
	[ARTICLE_LANGUAGE_ID] = @P_ARTICLE_LANGUAGE_ID
	and
	[ARTICLE_IS_DELETED] = 0
	order by [ARTICLE_ORDER],[ARTICLE_CREATION_DAY],[ARTICLE_CREATION_SEC]
END
GO
PRINT N'Creating [ARTICLE].[ArticleGetParentByCategory]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleGetParentByCategory]
	@P_ARTICLE_CATEGORY_ID int,
	@P_PUBLISH_MODULE_ID int 
	
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	A.[ARTICLE_ID],
	A.[ARTICLE_NAME],
	A.[ARTICLE_DESCRIPTION],
	A.[ARTICLE_KEYWORDS],
	A.[ARTICLE_SEO_NAME],
	A.[ARTICLE_DETAILS],
	A.[ARTICLE_URL],
	A.[ARTICLE_IMAGE],
	A.[ARTICLE_SUMMARY],
	A.[ARTICLE_CATEGORY_ID],
	A.[ARTICLE_CREATION_DAY],
	A.[ARTICLE_CREATION_SEC],
	A.[ARTICLE_IS_DELETED],
	A.[ARTICLE_PORTAL_ID],
	A.[ARTICLE_LANGUAGE_ID],
	A.[ARTICLE_TYPE],
	A.[ARTICLE_ORDER],
	A.[ARTICLE_CREATED_BY],
	A.[ARTICLE_PARENT_OBJ_ID] ,
	A.[ARTICLE_VIEW_COUNT],
	 P.[PUBLISH_TYPE_ID]
 from [ARTICLE].[ARTICLE] AS A
		LEFT OUTER JOIN
	  [SETUP].[PUBLISH] AS P
	    ON 
	  A.[ARTICLE_ID] = P.[PUBLISH_OBJECT_ID]
	    AND	
      A.[ARTICLE_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
        AND
	  A.[ARTICLE_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID]
	    AND
	  P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID  
	where
	[ARTICLE_PARENT_OBJ_ID] = 0
	and
	[ARTICLE_CATEGORY_ID] = @P_ARTICLE_CATEGORY_ID
	and
		[ARTICLE_IS_DELETED] = 0
 order by [ARTICLE_ORDER],[ARTICLE_CREATION_DAY],[ARTICLE_CREATION_SEC]
END
GO
PRINT N'Creating [ARTICLE].[ArticleUpdate]...';


GO
CREATE PROCEDURE [ARTICLE].[ArticleUpdate]
	@P_ARTICLE_ID int,
    @P_ARTICLE_NAME nvarchar(500),
    @P_ARTICLE_DESCRIPTION nvarchar(1000),
	@P_ARTICLE_KEYWORDS nvarchar(1000),
	@P_ARTICLE_SEO_NAME nvarchar(1000),
	@P_ARTICLE_DETAILS ntext,
    @P_ARTICLE_URL nvarchar(1000),
	@P_ARTICLE_IMAGE nvarchar(500),
	@P_ARTICLE_SUMMARY nvarchar(1000),
	@P_ARTICLE_CATEGORY_ID int,
	@P_ARTICLE_CREATION_DAY int,
	@P_ARTICLE_CREATION_SEC int,
	@P_ARTICLE_IS_DELETED bit,
	@P_ARTICLE_PORTAL_ID int,
	@P_ARTICLE_LANGUAGE_ID int,
	@P_ARTICLE_TYPE int,
	@P_ARTICLE_ORDER int,
	@P_ARTICLE_CREATED_BY int,
	@P_ARTICLE_PARENT_OBJ_ID int,
	@P_ARTICLE_VIEW_COUNT int
AS
BEGIN
	SET NOCOUNT ON;
	Update [ARTICLE].[ARTICLE] SET
		[ARTICLE_NAME] = @P_ARTICLE_NAME
		,[ARTICLE_DESCRIPTION] = @P_ARTICLE_DESCRIPTION
		,[ARTICLE_KEYWORDS] = @P_ARTICLE_KEYWORDS
		,[ARTICLE_SEO_NAME] = @P_ARTICLE_SEO_NAME
		,[ARTICLE_DETAILS] = @P_ARTICLE_DETAILS
		,[ARTICLE_URL] = @P_ARTICLE_URL
		,[ARTICLE_IMAGE] = @P_ARTICLE_IMAGE
		,[ARTICLE_SUMMARY] = @P_ARTICLE_SUMMARY
		,[ARTICLE_CATEGORY_ID] = @P_ARTICLE_CATEGORY_ID
		,[ARTICLE_CREATION_DAY] = @P_ARTICLE_CREATION_DAY
		,[ARTICLE_CREATION_SEC] = @P_ARTICLE_CREATION_SEC
		,[ARTICLE_IS_DELETED] = @P_ARTICLE_IS_DELETED
		,[ARTICLE_PORTAL_ID] = @P_ARTICLE_PORTAL_ID
		,[ARTICLE_LANGUAGE_ID] = @P_ARTICLE_LANGUAGE_ID
		,[ARTICLE_TYPE] = @P_ARTICLE_TYPE
		,[ARTICLE_ORDER] = @P_ARTICLE_ORDER
		,[ARTICLE_CREATED_BY] = @P_ARTICLE_CREATED_BY
		,[ARTICLE_PARENT_OBJ_ID] = @P_ARTICLE_PARENT_OBJ_ID ,
		 [ARTICLE_VIEW_COUNT] = @P_ARTICLE_VIEW_COUNT
		Where ARTICLE_ID = @P_ARTICLE_ID
END
GO
PRINT N'Creating [ARTICLE].[GetLikeArticleName]...';


GO
CREATE PROCEDURE [ARTICLE].[GetLikeArticleName]
	@P_ARTICLE_NAME NVARCHAR(200),
	@P_TOP_COUNT int
AS
BEGIN
	SELECT TOP (@P_TOP_COUNT)
		 ARTICLE_NAME,
		 ARTICLE_ID,
		 ARTICLE_DESCRIPTION 
	FROM
		 ARTICLE.ARTICLE 
	WHERE
	 ARTICLE_NAME LIKE CASE WHEN  @P_ARTICLE_NAME ='' THEN ARTICLE_NAME  ELSE '%'+@P_ARTICLE_NAME+'%'  END
	 
END
GO
PRINT N'Creating [ECOMMERCE].[AttributeAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeAdd]
	@P_ATTRIBUTE_ID int output,
	@P_ATTRIBUTE_GROUP_ID int,
	@P_ATTRIBUTE_PORTAL_ID int,
	@P_ATTRIBUTE_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	INSERT INTO [ECOMMERCE].[ATTRIBUTE]
		(
		[ATTRIBUTE_GROUP_ID],
		[ATTRIBUTE_PORTAL_ID]
		)
	VALUES
		(
		@P_ATTRIBUTE_GROUP_ID,
		@P_ATTRIBUTE_PORTAL_ID
		)
		
		set @P_ATTRIBUTE_ID=SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_ATTRIBUTE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_ATTRIBUTE_NAME
			)
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[AttributeAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeAddOtherLang]
	@P_ATTRIBUTE_ID int,
	@P_ATTRIBUTE_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_ATTRIBUTE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_ATTRIBUTE_NAME
			)
			
END
GO
PRINT N'Creating [ECOMMERCE].[AttributeDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeDelete]
	@P_ATTRIBUTE_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

		delete from [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			where
					[ECO_LAN_OBJ_ID] = @P_ATTRIBUTE_ID
					and
					[ECO_LAN_MODULE_ID] = @P_MODULE_ID
					and
					[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
					
		delete from  [ECOMMERCE].[ATTRIBUTE] 
		where
		ATTRIBUTE_ID = @P_ATTRIBUTE_ID
		
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction
			
		END
GO
PRINT N'Creating [ECOMMERCE].[AttributeDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeDeleteLogical]
	@P_ATTRIBUTE_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[ATTRIBUTE] set
		[ATTRIBUTE_IS_DELETED] = 1
		where
		ATTRIBUTE_ID = @P_ATTRIBUTE_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[AttributeGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeGetAll]
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			A.[ATTRIBUTE_ID],
			A.[ATTRIBUTE_GROUP_ID],
			A.[ATTRIBUTE_PORTAL_ID],
			A.[ATTRIBUTE_IS_DELETED],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[ATTRIBUTE] AS A
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = A.[ATTRIBUTE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		WHERE A.[ATTRIBUTE_IS_DELETED]=0
	END
GO
PRINT N'Creating [ECOMMERCE].[AttributeGetByCombinationID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeGetByCombinationID]
	@P_COMBINATION_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			A.[ATTRIBUTE_ID],
			A.[ATTRIBUTE_GROUP_ID],
			A.[ATTRIBUTE_PORTAL_ID],
			A.[ATTRIBUTE_IS_DELETED],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[ATTRIBUTE] AS A
			INNER JOIN 
		   [ECOMMERCE].[COMBINATION_ATTRIBUTE] AS CA
	 ON   
	           CA.ATTRIBUTE_ID = A.[ATTRIBUTE_ID]
	        AND
	           CA.COMBINATION_ID = @P_COMBINATION_ID
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = A.[ATTRIBUTE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[AttributeGetByGroupID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeGetByGroupID]
	@P_GROUP_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			A.[ATTRIBUTE_ID],
			A.[ATTRIBUTE_GROUP_ID],
			A.[ATTRIBUTE_PORTAL_ID],
			A.[ATTRIBUTE_IS_DELETED],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[ATTRIBUTE] AS A
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = A.[ATTRIBUTE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE A.[ATTRIBUTE_GROUP_ID]=@P_GROUP_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[AttributeGetByID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeGetByID]
	@P_ATTRIBUTE_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			A.[ATTRIBUTE_ID],
			A.[ATTRIBUTE_GROUP_ID],
			A.[ATTRIBUTE_PORTAL_ID],
			A.[ATTRIBUTE_IS_DELETED],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[ATTRIBUTE] AS A
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = A.[ATTRIBUTE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE A.[ATTRIBUTE_ID]=@P_ATTRIBUTE_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[AttributeUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[AttributeUpdate]
	@P_ATTRIBUTE_ID int,
	@P_ATTRIBUTE_GROUP_ID int,
	@P_ATTRIBUTE_PORTAL_ID int,
	@P_ATTRIBUTE_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	
	update  [ECOMMERCE].[ATTRIBUTE] set
	
		[ATTRIBUTE_GROUP_ID] = @P_ATTRIBUTE_GROUP_ID,
		[ATTRIBUTE_PORTAL_ID] = @P_ATTRIBUTE_PORTAL_ID
		where
		ATTRIBUTE_ID = @P_ATTRIBUTE_ID
		
		UPDATE [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			SET 
			    [ECO_LAN_NAME] = @P_ATTRIBUTE_NAME
					WHERE 
				[ECO_LAN_OBJ_ID] = @P_ATTRIBUTE_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction
		END
GO
PRINT N'Creating [ECOMMERCE].[CatalogAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogAdd]
		@P_CATALOG_ID int output,
		@P_CATALOG_IS_DISPLAYED	bit,
		@P_CATALOG_IS_GALLERY_ONLY	bit,
		@P_CATALOG_PARENT_CATALOG_ID int,
		@P_CATALOG_IS_PUBLISHED BIT,	
		@P_CATALOG_PORTAL_ID INT,
		@P_ECO_LAN_NAME nvarchar(500),
		@P_ECO_LAN_DESC nvarchar(500),
		@P_ECO_LAN_NAME2 nvarchar(500),
		@P_ECO_LAN_DESC2 nvarchar(500),
		@P_ECO_LAN_KEYWORD nvarchar(500),
		@P_MODULE_ID INT,
		@P_ECO_LAN_LAN_ID INT,
		@P_CATALOG_ORDER INT	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	insert into [ECOMMERCE].[CATALOG]
	(
		[CATALOG_IS_DISPLAYED],
		[CATALOG_IS_GALLERY_ONLY],
		[CATALOG_PARENT_CATALOG_ID],
		[CATALOG_PORTAL_ID],
		[CATALOG_ORDER],
		[CATALOG_IS_PUBLISHED]
	)
	values
	(
		@P_CATALOG_IS_DISPLAYED	,
		@P_CATALOG_IS_GALLERY_ONLY	,
		case when @P_CATALOG_PARENT_CATALOG_ID >0 then @P_CATALOG_PARENT_CATALOG_ID else null end,	
		@P_CATALOG_PORTAL_ID,
		@P_CATALOG_ORDER,
		@P_CATALOG_IS_PUBLISHED	
	)
	
	set @P_CATALOG_ID = SCOPE_IDENTITY()
	
	INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
				[ECO_LAN_NAME],
				[ECO_LAN_DESC],
				[ECO_LAN_NAME2],
				[ECO_LAN_DESC2],
				[ECO_LAN_KEYWORD]
			)
			VALUES
			(
				@P_CATALOG_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_ECO_LAN_NAME,
				@P_ECO_LAN_DESC ,
				@P_ECO_LAN_NAME2 ,
				@P_ECO_LAN_DESC2 ,
				@P_ECO_LAN_KEYWORD
			)
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogAddOtherLang]
		@P_CATALOG_ID int ,
		
		@P_ECO_LAN_NAME nvarchar(500),
		@P_ECO_LAN_DESC nvarchar(500),
		@P_ECO_LAN_NAME2 nvarchar(500),
		@P_ECO_LAN_DESC2 nvarchar(500),
		@P_ECO_LAN_KEYWORD nvarchar(500),
		@P_MODULE_ID INT,
		@P_ECO_LAN_LAN_ID INT	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
				[ECO_LAN_NAME],
				[ECO_LAN_DESC],
				[ECO_LAN_NAME2],
				[ECO_LAN_DESC2],
				[ECO_LAN_KEYWORD]
			)
			VALUES
			(
				@P_CATALOG_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_ECO_LAN_NAME,
				@P_ECO_LAN_DESC ,
				@P_ECO_LAN_NAME2 ,
				@P_ECO_LAN_DESC2 ,
				@P_ECO_LAN_KEYWORD
			)
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogDelete]
	@P_CATALOG_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT 	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	
		delete from [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			where
					[ECO_LAN_OBJ_ID] = @P_CATALOG_ID
					and
					[ECO_LAN_MODULE_ID] = @P_MODULE_ID
					and
					[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
					
					
	delete from [ECOMMERCE].[CATALOG]
	where 
		CATALOG_ID = @P_CATALOG_ID
		
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogDeleteLogical]
	@P_CATALOG_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[CATALOG] set
		[CATALOG_IS_DELETED] = 1
		where
		[CATALOG_ID] = @P_CATALOG_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[CatalogGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogGetAll]
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT,
	@P_CATALOG_PORTAL_ID int
    
AS
BEGIN
	SET NOCOUNT ON;
	select
				C.[CATALOG_ID],
				C.[CATALOG_IS_DISPLAYED],
				C.[CATALOG_IS_GALLERY_ONLY],
				C.[CATALOG_PARENT_CATALOG_ID],
				C.[CATALOG_IS_DELETED],
				C.[CATALOG_PORTAL_ID],
				C.[CATALOG_ORDER],
				C.[CATALOG_IS_PUBLISHED],
				EL.[ECO_LAN_LAN_ID],
				EL.[ECO_LAN_NAME],
				EL.[ECO_LAN_DESC],
				EL.[ECO_LAN_NAME2],
				EL.[ECO_LAN_DESC2],
				EL.[ECO_LAN_KEYWORD] 
	 from  
		[ECOMMERCE].[CATALOG] AS C
			LEFT OUTER JOIN 
		[ECOMMERCE].[ECOMMERCE_LANGUAGE] AS EL
		ON 
		EL.[ECO_LAN_OBJ_ID] = C.[CATALOG_ID]
			AND
		EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
		EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
	
	WHERE
		C.[CATALOG_IS_DELETED] = 0 and [CATALOG_PORTAL_ID]= @P_CATALOG_PORTAL_ID
		order by C.[CATALOG_ORDER]
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogGetByID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogGetByID]
	@P_CATALOG_ID int ,	
    @P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	select
				C.[CATALOG_ID],
				C.[CATALOG_IS_DISPLAYED],
				C.[CATALOG_IS_GALLERY_ONLY],
				C.[CATALOG_PARENT_CATALOG_ID],
				C.[CATALOG_IS_DELETED],
				C.[CATALOG_PORTAL_ID],
				C.[CATALOG_ORDER],
				C.[CATALOG_IS_PUBLISHED],
				EL.[ECO_LAN_LAN_ID],
				EL.[ECO_LAN_NAME],
				EL.[ECO_LAN_DESC],
				EL.[ECO_LAN_NAME2],
				EL.[ECO_LAN_DESC2],
				EL.[ECO_LAN_KEYWORD] 
	 from  
		[ECOMMERCE].[CATALOG] AS C
			LEFT OUTER JOIN 
		[ECOMMERCE].[ECOMMERCE_LANGUAGE] AS EL
		ON 
		EL.[ECO_LAN_OBJ_ID] = C.[CATALOG_ID]
			AND
		EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
		EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
	
	where 
		CATALOG_ID = @P_CATALOG_ID
		
	
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogGetByProductID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogGetByProductID]
	@P_PRODUCT_ID INT,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT,
	@P_CATALOG_PORTAL_ID int
    
AS
BEGIN
	SET NOCOUNT ON;
	select
				C.[CATALOG_ID],
				C.[CATALOG_PARENT_CATALOG_ID],
				C.[CATALOG_ORDER],
				C.[CATALOG_IS_PUBLISHED],
				EL.[ECO_LAN_NAME]
				
	 from  
		[ECOMMERCE].[CATALOG] AS C
			INNER JOIN 
		[ECOMMERCE].[PRODUCT_CATALOG] AS PC
		ON
		PC.[CATALOG_ID] =C.[CATALOG_ID] 
			AND 
		PC.[PRODUCT_ID] = @P_PRODUCT_ID
			LEFT OUTER JOIN 
		[ECOMMERCE].[ECOMMERCE_LANGUAGE] AS EL
		ON 
		EL.[ECO_LAN_OBJ_ID] = C.[CATALOG_ID]
			AND
		EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
		EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
	
	WHERE
		C.[CATALOG_IS_DELETED] = 0 and [CATALOG_PORTAL_ID]= @P_CATALOG_PORTAL_ID
		order by C.[CATALOG_ID],pc.PRODUCT_ORDER
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogImageAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogImageAdd]
	
		@P_CATALOG_IMAGE_ID int output,
		@P_CATALOG_ID int,
		@P_CATALOG_IMAGE_NAME nvarchar(500),
		@P_CATALOG_IMAGE_IS_COVER_IMAGE bit
    
AS
BEGIN
	SET NOCOUNT ON;

	insert into [ECOMMERCE].[CATALOG_IMAGE]
	(
		CATALOG_ID,
		CATALOG_IMAGE_NAME,
		CATALOG_IMAGE_IS_COVER_IMAGE
	)
	values
	(
		@P_CATALOG_ID,
		@P_CATALOG_IMAGE_NAME,
		@P_CATALOG_IMAGE_IS_COVER_IMAGE
	)
	
	set @P_CATALOG_IMAGE_ID = SCOPE_IDENTITY()
	
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogImageDelete]...';


GO
create PROCEDURE [ECOMMERCE].[CatalogImageDelete]
	
		@P_CATALOG_IMAGE_ID int
		
    
AS
BEGIN
	SET NOCOUNT ON;

	delete from [ECOMMERCE].[CATALOG_IMAGE]
	
	where
	 CATALOG_IMAGE_ID = @P_CATALOG_IMAGE_ID
	
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogImageDeleteLogical]...';


GO
create PROCEDURE [ECOMMERCE].[CatalogImageDeleteLogical]
	
		@P_CATALOG_IMAGE_ID int
		
    
AS
BEGIN
	SET NOCOUNT ON;

	update [ECOMMERCE].[CATALOG_IMAGE]
	set CATALOG_IMAGE_IS_DELETED = 1
	where
	 CATALOG_IMAGE_ID = @P_CATALOG_IMAGE_ID
	
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogImageGetByCatalogID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogImageGetByCatalogID]
	
		@P_CATALOG_ID int
		
    
AS
BEGIN
	SET NOCOUNT ON;

SELECT 
		CATALOG_IMAGE_ID,
		CATALOG_ID,
		CATALOG_IMAGE_NAME,
		CATALOG_IMAGE_IS_COVER_IMAGE,
		CATALOG_IMAGE_IS_DELETED
		
FROM ECOMMERCE.CATALOG_IMAGE

WHERE 
 CATALOG_ID= @P_CATALOG_ID
	
	
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogImageGetByID]...';


GO
create PROCEDURE [ECOMMERCE].[CatalogImageGetByID]
	
	@P_CATALOG_IMAGE_ID	 int
		
    
AS
BEGIN
	SET NOCOUNT ON;

SELECT 
		CATALOG_IMAGE_ID,
		CATALOG_ID,
		CATALOG_IMAGE_NAME,
		CATALOG_IMAGE_IS_COVER_IMAGE,
		CATALOG_IMAGE_IS_DELETED
		
FROM ECOMMERCE.CATALOG_IMAGE

WHERE 
 CATALOG_IMAGE_ID= @P_CATALOG_IMAGE_ID
	
	
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogImageUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogImageUpdate]
	
		@P_CATALOG_IMAGE_ID int ,
		@P_CATALOG_IMAGE_IS_COVER_IMAGE bit,
		@P_CATALOG_IMAGE_NAME nvarchar(500)
    
AS
BEGIN
	SET NOCOUNT ON;

	update[ECOMMERCE].[CATALOG_IMAGE]
	set
		CATALOG_IMAGE_IS_COVER_IMAGE = @P_CATALOG_IMAGE_IS_COVER_IMAGE,
		CATALOG_IMAGE_NAME = @P_CATALOG_IMAGE_NAME
	
	where CATALOG_IMAGE_ID =  @P_CATALOG_IMAGE_ID
	
	
END
GO
PRINT N'Creating [ECOMMERCE].[CatalogUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CatalogUpdate]
		@P_CATALOG_ID int ,
		@P_CATALOG_IS_DISPLAYED	bit,
		@P_CATALOG_IS_GALLERY_ONLY	bit,	
		@P_CATALOG_PARENT_CATALOG_ID int,	
		@P_CATALOG_PORTAL_ID INT,
		@P_CATALOG_ORDER INT,
		@P_CATALOG_IS_PUBLISHED BIT,
		
		@P_ECO_LAN_NAME nvarchar(500),
		@P_ECO_LAN_DESC nvarchar(500),
		@P_ECO_LAN_NAME2 nvarchar(500),
		@P_ECO_LAN_DESC2 nvarchar(500),
		@P_ECO_LAN_KEYWORD nvarchar(500),
		@P_MODULE_ID INT,
		@P_ECO_LAN_LAN_ID INT	
    
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	update [ECOMMERCE].[CATALOG] set
	
		[CATALOG_IS_DISPLAYED]=   @P_CATALOG_IS_DISPLAYED,
		[CATALOG_IS_GALLERY_ONLY] =  @P_CATALOG_IS_GALLERY_ONLY,
		[CATALOG_PARENT_CATALOG_ID] =case when @P_CATALOG_PARENT_CATALOG_ID > 0 then @P_CATALOG_PARENT_CATALOG_ID else null end,
		[CATALOG_PORTAL_ID] = @P_CATALOG_PORTAL_ID,
		[CATALOG_ORDER] = @P_CATALOG_ORDER,
		[CATALOG_IS_PUBLISHED] = @P_CATALOG_IS_PUBLISHED
		
	
	where 
		CATALOG_ID = @P_CATALOG_ID
		
		UPDATE [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			SET 
				
				[ECO_LAN_NAME] = @P_ECO_LAN_NAME,
				[ECO_LAN_DESC] = @P_ECO_LAN_DESC,
				[ECO_LAN_NAME2] = @P_ECO_LAN_NAME2,
				[ECO_LAN_DESC2] = @P_ECO_LAN_DESC2 ,
				[ECO_LAN_KEYWORD] = @P_ECO_LAN_KEYWORD
			
			WHERE 
			    [ECO_LAN_OBJ_ID] = @P_CATALOG_ID
			    AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
				AND
				[ECO_LAN_LAN_ID]  = @P_ECO_LAN_LAN_ID 
			
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction	
	
END
GO
PRINT N'Creating [ECOMMERCE].[CombinationAttributeAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationAttributeAdd]

	@P_COMBINATION_ID	int,
	@P_ATTRIBUTE_ID	int	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	insert into 
	  [ECOMMERCE].[COMBINATION_ATTRIBUTE]
		(
			[COMBINATION_ID],
			[ATTRIBUTE_ID]
		)
		values 
		(
			@P_COMBINATION_ID,
			@P_ATTRIBUTE_ID
		)
		
	
END
GO
PRINT N'Creating [ECOMMERCE].[CombinationAttributeDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationAttributeDelete]

	@P_COMBINATION_ID	int,
	@P_ATTRIBUTE_ID	int	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	delete from
	  [ECOMMERCE].[COMBINATION_ATTRIBUTE]
		where
			[COMBINATION_ID] = @P_COMBINATION_ID
			and
			[ATTRIBUTE_ID] = @P_ATTRIBUTE_ID
	
END
GO
PRINT N'Creating [ECOMMERCE].[CombinationImageAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationImageAdd]

	@P_COMBINATION_IMAGE_ID	int,
	@P_COMBINATION_ID	int	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	insert into 
	  [ECOMMERCE].[COMBINATION_IMAGE]
		(
		COMBINATION_IMAGE_ID,
		COMBINATION_ID	
		)
		values 
		(
		@P_COMBINATION_IMAGE_ID,
		@P_COMBINATION_ID
		)
		
		
	
END
GO
PRINT N'Creating [ECOMMERCE].[CombinationImageDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationImageDelete]

	@P_COMBINATION_IMAGE_ID	int,
	@P_COMBINATION_ID	int	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	delete from  
	  [ECOMMERCE].[COMBINATION_IMAGE]
		where
		 COMBINATION_IMAGE_ID = @P_COMBINATION_IMAGE_ID
		 and COMBINATION_ID = @P_COMBINATION_ID
	
END
GO
PRINT N'Creating [ECOMMERCE].[CombinationProductAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationProductAdd]

	@P_COMBINATION_ID	int out,
	@P_COMBINATION_PRODUCT_ID	int,
	@P_COMBINATION_PRODUCT_REFERENCE	nvarchar(500),
	@P_COMBINATION_PRODUCT_EAN13	nvarchar(500),
	@P_COMBINATION_PRODUCT_UPC	nvarchar(500),
	@P_COMBINATION_PRODUCT_SUPPLIER_REFERENCE	int,
	@P_COMBINATION_PRODUCT_WHOLESALE_PRICE	decimal,
	@P_COMBINATION_PRODUCT_IMPACT_ON_PRICE	int,
	@P_COMBINATION_PRODUCT_IMPACT_ON_WEIGHT	int,
	@P_COMBINATION_PRODUCT_INITIAL_STOCK	int	,
	@P_COMBINATION_PRODUCT_MINIMUM_QUANTITY	int,
	@P_COMBINATION_PRODUCT_IS_DEFAULT	bit	,
	@P_COMBINATION_PRODUCT_COLOR	nvarchar(500),
	
	@P_COMBINATION_PRODUCT_LOCATION NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	INSERT INTO [ECOMMERCE].[COMBINATION_PRODUCT]
		(
			[COMBINATION_PRODUCT_ID],
			[COMBINATION_PRODUCT_REFERENCE],
			[COMBINATION_PRODUCT_EAN13],
			[COMBINATION_PRODUCT_UPC],
			[COMBINATION_PRODUCT_SUPPLIER_REFERENCE],
			[COMBINATION_PRODUCT_WHOLESALE_PRICE],
			[COMBINATION_PRODUCT_IMPACT_ON_PRICE],
			[COMBINATION_PRODUCT_IMPACT_ON_WEIGHT],
			[COMBINATION_PRODUCT_INITIAL_STOCK],
			[COMBINATION_PRODUCT_MINIMUM_QUANTITY],
			[COMBINATION_PRODUCT_IS_DEFAULT],
			[COMBINATION_PRODUCT_COLOR]
		)
	VALUES
		(
			@P_COMBINATION_PRODUCT_ID,
			@P_COMBINATION_PRODUCT_REFERENCE,
			@P_COMBINATION_PRODUCT_EAN13,
			@P_COMBINATION_PRODUCT_UPC,
			@P_COMBINATION_PRODUCT_SUPPLIER_REFERENCE,
			@P_COMBINATION_PRODUCT_WHOLESALE_PRICE,
			@P_COMBINATION_PRODUCT_IMPACT_ON_PRICE,
			@P_COMBINATION_PRODUCT_IMPACT_ON_WEIGHT,
			@P_COMBINATION_PRODUCT_INITIAL_STOCK,
			@P_COMBINATION_PRODUCT_MINIMUM_QUANTITY,
			@P_COMBINATION_PRODUCT_IS_DEFAULT,
			@P_COMBINATION_PRODUCT_COLOR
		)
		
		set @P_COMBINATION_ID=SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_COMBINATION_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_COMBINATION_PRODUCT_LOCATION
			)
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[CombinationProductAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationProductAddOtherLang]

	@P_COMBINATION_ID	int,
	
	@P_COMBINATION_PRODUCT_LOCATION NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_COMBINATION_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_COMBINATION_PRODUCT_LOCATION
			)
		

			
END
GO
PRINT N'Creating [ECOMMERCE].[CombinationProductDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationProductDeleteLogical]
	@P_COMBINATION_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[COMBINATION_PRODUCT] set
		[COMBINATION_IS_DELETED] = 1
		where
		COMBINATION_ID = @P_COMBINATION_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[CombinationProductGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationProductGetAll]
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			C.[COMBINATION_ID],
			C.[COMBINATION_PRODUCT_ID],
			C.[COMBINATION_PRODUCT_REFERENCE],
			C.[COMBINATION_PRODUCT_EAN13],
			C.[COMBINATION_PRODUCT_UPC],
			C.[COMBINATION_PRODUCT_SUPPLIER_REFERENCE],
			C.[COMBINATION_PRODUCT_WHOLESALE_PRICE],
			C.[COMBINATION_PRODUCT_IMPACT_ON_PRICE],
			C.[COMBINATION_PRODUCT_IMPACT_ON_WEIGHT],
			C.[COMBINATION_PRODUCT_INITIAL_STOCK],
			C.[COMBINATION_PRODUCT_MINIMUM_QUANTITY],
			C.[COMBINATION_PRODUCT_IS_DEFAULT],
			C.[COMBINATION_PRODUCT_COLOR],
			C.[COMBINATION_IS_DELETED],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID],
			EL.[ECO_LAN_LAN_ID]
	 FROM  [ECOMMERCE].[COMBINATION_PRODUCT] AS C
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = C.[COMBINATION_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		WHERE C.[COMBINATION_IS_DELETED]=0
	END
GO
PRINT N'Creating [ECOMMERCE].[CombinationProductGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationProductGetById]
	@P_COMBINATION_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			C.[COMBINATION_ID],
			C.[COMBINATION_PRODUCT_ID],
			C.[COMBINATION_PRODUCT_REFERENCE],
			C.[COMBINATION_PRODUCT_EAN13],
			C.[COMBINATION_PRODUCT_UPC],
			C.[COMBINATION_PRODUCT_SUPPLIER_REFERENCE],
			C.[COMBINATION_PRODUCT_WHOLESALE_PRICE],
			C.[COMBINATION_PRODUCT_IMPACT_ON_PRICE],
			C.[COMBINATION_PRODUCT_IMPACT_ON_WEIGHT],
			C.[COMBINATION_PRODUCT_INITIAL_STOCK],
			C.[COMBINATION_PRODUCT_MINIMUM_QUANTITY],
			C.[COMBINATION_PRODUCT_IS_DEFAULT],
			C.[COMBINATION_PRODUCT_COLOR],
			C.[COMBINATION_IS_DELETED],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID],
			EL.[ECO_LAN_LAN_ID]
	 FROM  [ECOMMERCE].[COMBINATION_PRODUCT] AS C
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = C.[COMBINATION_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		WHERE C.[COMBINATION_ID]=@P_COMBINATION_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[CombinationProductGetByProductID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationProductGetByProductID]
	@P_PRODUCT_ID INT,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			C.[COMBINATION_ID],
			C.[COMBINATION_PRODUCT_ID],
			C.[COMBINATION_PRODUCT_REFERENCE],
			C.[COMBINATION_PRODUCT_EAN13],
			C.[COMBINATION_PRODUCT_UPC],
			C.[COMBINATION_PRODUCT_SUPPLIER_REFERENCE],
			C.[COMBINATION_PRODUCT_WHOLESALE_PRICE],
			C.[COMBINATION_PRODUCT_IMPACT_ON_PRICE],
			C.[COMBINATION_PRODUCT_IMPACT_ON_WEIGHT],
			C.[COMBINATION_PRODUCT_INITIAL_STOCK],
			C.[COMBINATION_PRODUCT_MINIMUM_QUANTITY],
			C.[COMBINATION_PRODUCT_IS_DEFAULT],
			C.[COMBINATION_PRODUCT_COLOR],
			C.[COMBINATION_IS_DELETED],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID],
			EL.[ECO_LAN_LAN_ID]
	 FROM  [ECOMMERCE].[COMBINATION_PRODUCT] AS C
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = C.[COMBINATION_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		WHERE C.[COMBINATION_IS_DELETED]=0 and C.[COMBINATION_PRODUCT_ID] = @P_PRODUCT_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[CombinationProductUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[CombinationProductUpdate]

	@P_COMBINATION_ID	int,
	@P_COMBINATION_PRODUCT_ID	int,
	@P_COMBINATION_PRODUCT_REFERENCE	nvarchar(500),
	@P_COMBINATION_PRODUCT_EAN13	nvarchar(500),
	@P_COMBINATION_PRODUCT_UPC	nvarchar(500),
	@P_COMBINATION_PRODUCT_SUPPLIER_REFERENCE	int,
	@P_COMBINATION_PRODUCT_WHOLESALE_PRICE	decimal,
	@P_COMBINATION_PRODUCT_IMPACT_ON_PRICE	int,
	@P_COMBINATION_PRODUCT_IMPACT_ON_WEIGHT	int,
	@P_COMBINATION_PRODUCT_INITIAL_STOCK	int	,
	@P_COMBINATION_PRODUCT_MINIMUM_QUANTITY	int,
	@P_COMBINATION_PRODUCT_IS_DEFAULT	bit	,
	@P_COMBINATION_PRODUCT_COLOR	nvarchar(500),
	
	@P_COMBINATION_PRODUCT_LOCATION NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
	AS
	BEGIN
		SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	update [ECOMMERCE].[COMBINATION_PRODUCT]
		set
			[COMBINATION_PRODUCT_ID] = @P_COMBINATION_PRODUCT_ID,
			[COMBINATION_PRODUCT_REFERENCE] = @P_COMBINATION_PRODUCT_REFERENCE,
			[COMBINATION_PRODUCT_EAN13] = @P_COMBINATION_PRODUCT_EAN13,
			[COMBINATION_PRODUCT_UPC] = @P_COMBINATION_PRODUCT_UPC,
			[COMBINATION_PRODUCT_SUPPLIER_REFERENCE] = @P_COMBINATION_PRODUCT_SUPPLIER_REFERENCE,
			[COMBINATION_PRODUCT_WHOLESALE_PRICE] = @P_COMBINATION_PRODUCT_WHOLESALE_PRICE,
			[COMBINATION_PRODUCT_IMPACT_ON_PRICE] = @P_COMBINATION_PRODUCT_IMPACT_ON_PRICE,
			[COMBINATION_PRODUCT_IMPACT_ON_WEIGHT] = @P_COMBINATION_PRODUCT_IMPACT_ON_WEIGHT,
			[COMBINATION_PRODUCT_INITIAL_STOCK] = @P_COMBINATION_PRODUCT_INITIAL_STOCK,
			[COMBINATION_PRODUCT_MINIMUM_QUANTITY] = @P_COMBINATION_PRODUCT_MINIMUM_QUANTITY,
			[COMBINATION_PRODUCT_IS_DEFAULT] = @P_COMBINATION_PRODUCT_IS_DEFAULT,
			[COMBINATION_PRODUCT_COLOR] = @P_COMBINATION_PRODUCT_COLOR
		
		where [COMBINATION_ID] = @P_COMBINATION_ID
		
		update [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			set
				[ECO_LAN_NAME] = @P_COMBINATION_PRODUCT_LOCATION
			
			WHERE 
			    [ECO_LAN_OBJ_ID] = @P_COMBINATION_ID
			    AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
				AND
				[ECO_LAN_LAN_ID]  = @P_ECO_LAN_LAN_ID 
				
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[FeatureAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureAdd]
	@P_FEATURE_ID INT OUTPUT,
	@P_FEATURE_PORTAL_ID INT,
	
	@P_FEATURE_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	
	INSERT INTO [ECOMMERCE].[Feature]
		(
		[FEATURE_PORTAL_ID]
		)
	VALUES
		(
		@P_FEATURE_PORTAL_ID
		)
		
		set @P_FEATURE_ID=SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_FEATURE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_FEATURE_NAME
			)
		
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction	
END
GO
PRINT N'Creating [ECOMMERCE].[FeatureAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureAddOtherLang]
	@P_FEATURE_ID INT,
	@P_FEATURE_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_FEATURE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_FEATURE_NAME
			)
			
END
GO
PRINT N'Creating [ECOMMERCE].[FeatureDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureDelete]
	@P_FEATURE_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	
	delete FROM  [ECOMMERCE].[FEATURE] 
	where
	 [FEATURE_ID] = @P_FEATURE_ID 
	 
	 
		delete from 
		   ECOMMERCE.ECOMMERCE_LANGUAGE 
	 where 
				[ECO_LAN_OBJ_ID] = @P_FEATURE_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction
	END
GO
PRINT N'Creating [ECOMMERCE].[FeatureDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureDeleteLogical]
	@P_Feature_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[Feature] set
		[Feature_IS_DELETED] = 1
		where
		[Feature_ID] = @P_Feature_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[FeatureGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureGetAll]
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			F.[FEATURE_ID],
			F.[FEATURE_IS_DELETED],
			F.[FEATURE_PORTAL_ID],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[FEATURE] AS F
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = F.[FEATURE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		where
				F.[FEATURE_IS_DELETED] = 0
	END
GO
PRINT N'Creating [ECOMMERCE].[FeatureGetByID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureGetByID]
	@P_FEATURE_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			F.[FEATURE_ID],
			F.[FEATURE_IS_DELETED],
			F.[FEATURE_PORTAL_ID],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[FEATURE] AS F
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = F.[FEATURE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		where
		F.[FEATURE_ID] = @P_FEATURE_ID and F.[FEATURE_IS_DELETED] = 0
	END
GO
PRINT N'Creating [ECOMMERCE].[FeatureGetByProductID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureGetByProductID]
	@P_PRODUCT_ID INT,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			F.[FEATURE_ID],
			EL.[ECO_LAN_NAME],
			PF.[PRODUCT_FEATURE_VALUE]
			
	 FROM  [ECOMMERCE].[FEATURE] AS F
	   	    INNER JOIN
	   	   [ECOMMERCE].[PRODUCT_FEATURE] AS PF
	 ON			PF.PRODUCT_FEATURE_ID = F.FEATURE_ID
			AND
			    PF.PRODUCT_PRODUCT_ID  = @P_PRODUCT_ID
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = F.[FEATURE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		where
				F.[FEATURE_IS_DELETED] = 0
	END
GO
PRINT N'Creating [ECOMMERCE].[FeatureUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FeatureUpdate]
	@P_FEATURE_ID INT OUTPUT,
	@P_FEATURE_PORTAL_ID INT,
	
	@P_FEATURE_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	
	UPDATE [ECOMMERCE].[FEATURE] SET [FEATURE_PORTAL_ID] =@P_FEATURE_PORTAL_ID
	
		update [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			set 
				[ECO_LAN_NAME] = @P_FEATURE_NAME
			where
				[ECO_LAN_OBJ_ID] = @P_FEATURE_ID
				and
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
				and
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction	
END
GO
PRINT N'Creating [ECOMMERCE].[FetureDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[FetureDeleteLogical]
	@P_FEATURE_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[FEATURE] set
		[FEATURE_IS_DELETED] = 1
		where
		[FEATURE_ID] = @P_FEATURE_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[GroupAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[GroupAdd]
	@P_GROUP_ID INT OUTPUT,
	@P_GROUP_IS_COLOR_GROUP bit,
	@P_GROUP_PORTAL_ID INT,
	
	@P_GROUP_NAME NVARCHAR(500),
	@P_GROUP_PUBLIC_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	
	INSERT INTO [ECOMMERCE].[GROUP]
		(
		[GROUP_IS_COLOR_GROUP],
		[GROUP_PORTAL_ID]
		)
	VALUES
		(
		    @P_GROUP_IS_COLOR_GROUP,
			@P_GROUP_PORTAL_ID
		)
		
		set @P_GROUP_ID=SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME],
				[ECO_LAN_NAME2]	
			)
			VALUES
			(
				@P_GROUP_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_GROUP_NAME,
				@P_GROUP_PUBLIC_NAME
			)
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction	
END
GO
PRINT N'Creating [ECOMMERCE].[GroupAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[GroupAddOtherLang]
	@P_GROUP_ID INT,
	
	@P_GROUP_NAME NVARCHAR(500),
	@P_GROUP_PUBLIC_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME],
				[ECO_LAN_NAME2]	
			)
			VALUES
			(
				@P_GROUP_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_GROUP_NAME,
				@P_GROUP_PUBLIC_NAME
			)
			
END
GO
PRINT N'Creating [ECOMMERCE].[GroupDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[GroupDelete]
	@P_GROUP_ID INT,
	
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
		
	delete from  [ECOMMERCE].[ECOMMERCE_LANGUAGE]
		WHERE 
				[ECO_LAN_OBJ_ID] = @P_GROUP_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		delete from  [ECOMMERCE].[GROUP]
	where
		[GROUP_ID] = @P_GROUP_ID			
	
	IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction		
END
GO
PRINT N'Creating [ECOMMERCE].[GroupDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[GroupDeleteLogical]
	@P_GROUP_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[GROUP] set
		[GROUP_IS_DELETED] = 1
		where
		GROUP_ID = @P_GROUP_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[GroupGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[GroupGetAll]
	@P_GROUP_PORTAL_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
		select
		G.[GROUP_ID],
		G.[GROUP_IS_COLOR_GROUP],
		G.[GROUP_IS_DELETED],
		G.[GROUP_PORTAL_ID],
		EL.[ECO_LAN_LAN_ID],
		EL.[ECO_LAN_NAME],
		EL.[ECO_LAN_NAME2]
		
		 FROM  [ECOMMERCE].[GROUP] as G
		 
		 LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = G.[GROUP_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
			WHERE G.[GROUP_IS_DELETED] = 0 and G.[GROUP_PORTAL_ID] =@P_GROUP_PORTAL_ID
END
GO
PRINT N'Creating [ECOMMERCE].[GroupGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[GroupGetById]
	@P_GROUP_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
		select
		G.[GROUP_ID],
		G.[GROUP_IS_COLOR_GROUP],
		G.[GROUP_IS_DELETED],
		G.[GROUP_PORTAL_ID],
		EL.[ECO_LAN_LAN_ID],
		EL.[ECO_LAN_NAME],
		EL.[ECO_LAN_NAME2]
		
		 FROM  [ECOMMERCE].[GROUP] as G
		 
		 LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = G.[GROUP_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
	where G.[GROUP_ID] = @P_GROUP_ID
END
GO
PRINT N'Creating [ECOMMERCE].[GroupUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[GroupUpdate]
	@P_GROUP_ID INT,
	@P_GROUP_IS_COLOR_GROUP bit,
	@P_GROUP_PORTAL_ID INT,
	
	@P_GROUP_NAME NVARCHAR(500),
	@P_GROUP_PUBLIC_NAME NVARCHAR(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
	
	update [ECOMMERCE].[GROUP]
		set 
		[GROUP_IS_COLOR_GROUP] = @P_GROUP_IS_COLOR_GROUP,
		GROUP_PORTAL_ID = @P_GROUP_PORTAL_ID
	
	where
		[GROUP_ID] = @P_GROUP_ID
		
	UPDATE [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			SET 
			    [ECO_LAN_NAME] = @P_GROUP_NAME,
			    [ECO_LAN_NAME2] = @P_GROUP_PUBLIC_NAME
					WHERE 
				[ECO_LAN_OBJ_ID] = @P_GROUP_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
	
	IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction			
END
GO
PRINT N'Creating [ECOMMERCE].[ManufacturareAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ManufacturareAdd]

	@P_MANUFACTURARE_ID	int OUTPUT	,
	@P_MANUFACTURARE_LOGO_IMAGE nvarchar(500)	,
	@P_MANUFACTURARE_IS_ENABLED	bit,	
	@P_MANUFACTURARE_PORTAL_ID	int	,
	
	@P_MANUFACTURARE_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_SHORT_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_META_TITLE NVARCHAR(500),
	@P_MANUFACTURARE_META_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_META_KEYWORDS NVARCHAR(500),

	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	INSERT INTO [ECOMMERCE].[MANUFACTURARE]
		(
		[MANUFACTURARE_LOGO_IMAGE],
		[MANUFACTURARE_IS_ENABLED],	
		[MANUFACTURARE_PORTAL_ID]
		)
	VALUES
		(
		@P_MANUFACTURARE_LOGO_IMAGE,
		@P_MANUFACTURARE_IS_ENABLED	,	
		@P_MANUFACTURARE_PORTAL_ID
		)
		
		set @P_MANUFACTURARE_ID=SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
				
				[ECO_LAN_DESC],
				[ECO_LAN_DESC2],
				
				[ECO_LAN_NAME2],
				[ECO_LAN_DETAILS],
				[ECO_LAN_KEYWORD]			
			)
			VALUES
			(
				@P_MANUFACTURARE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				
				@P_MANUFACTURARE_DESCRIPTION ,
				@P_MANUFACTURARE_SHORT_DESCRIPTION ,
				
				@P_MANUFACTURARE_META_TITLE ,
				@P_MANUFACTURARE_META_DESCRIPTION,
				@P_MANUFACTURARE_META_KEYWORDS
				
			)
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[ManufacturareAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ManufacturareAddOtherLang]

	@P_MANUFACTURARE_ID	int OUTPUT	,
	
	@P_MANUFACTURARE_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_SHORT_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_META_TITLE NVARCHAR(500),
	@P_MANUFACTURARE_META_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_META_KEYWORDS NVARCHAR(500),

	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;

		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
				
				[ECO_LAN_DESC],
				[ECO_LAN_DESC2],
				
				[ECO_LAN_NAME2],
				[ECO_LAN_DETAILS],
				[ECO_LAN_KEYWORD]			
			)
			VALUES
			(
				@P_MANUFACTURARE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				
				@P_MANUFACTURARE_DESCRIPTION ,
				@P_MANUFACTURARE_SHORT_DESCRIPTION ,
				
				@P_MANUFACTURARE_META_TITLE ,
				@P_MANUFACTURARE_META_DESCRIPTION,
				@P_MANUFACTURARE_META_KEYWORDS
				
			)
			
END
GO
PRINT N'Creating [ECOMMERCE].[ManufacturareDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ManufacturareDelete]
	@P_MANUFACTURARE_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

		delete from [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			where
					[ECO_LAN_OBJ_ID] = @P_MANUFACTURARE_ID
					and
					[ECO_LAN_MODULE_ID] = @P_MODULE_ID
					and
					[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
					
		delete from  [ECOMMERCE].[MANUFACTURARE] 
		where
		MANUFACTURARE_ID = @P_MANUFACTURARE_ID
		
		IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction
			
		END
GO
PRINT N'Creating [ECOMMERCE].[ManufacturareDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ManufacturareDeleteLogical]
	@P_MANUFACTURARE_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[MANUFACTURARE] set
		[MANUFACTURARE_IS_DELETED] = 1
		where
		MANUFACTURARE_ID = @P_MANUFACTURARE_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[ManufacturareGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ManufacturareGetAll]
	@P_MANUFACTURARE_PORTAL_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			M.[MANUFACTURARE_ID],
			M.[MANUFACTURARE_LOGO_IMAGE],
			M.[MANUFACTURARE_IS_ENABLED],
			M.[MANUFACTURARE_IS_DELETED],
			M.[MANUFACTURARE_PORTAL_ID],
			
			EL.[ECO_LAN_DESC],
			EL.[ECO_LAN_DESC2],	
			EL.[ECO_LAN_NAME2],
			EL.[ECO_LAN_DETAILS],
			EL.[ECO_LAN_KEYWORD],
			EL.[ECO_LAN_LAN_ID],	
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[MANUFACTURARE] AS M
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = M.[MANUFACTURARE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		WHERE M.[MANUFACTURARE_IS_DELETED]=0 and [MANUFACTURARE_PORTAL_ID] = @P_MANUFACTURARE_PORTAL_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[ManufacturareGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ManufacturareGetById]
	@P_MANUFACTURARE_ID int,
	@P_MANUFACTURARE_PORTAL_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			M.[MANUFACTURARE_ID],
			M.[MANUFACTURARE_LOGO_IMAGE],
			M.[MANUFACTURARE_IS_ENABLED],
			M.[MANUFACTURARE_IS_DELETED],
			M.[MANUFACTURARE_PORTAL_ID],
			
			EL.[ECO_LAN_DESC],
			EL.[ECO_LAN_DESC2],	
			EL.[ECO_LAN_NAME2],
			EL.[ECO_LAN_DETAILS],
			EL.[ECO_LAN_KEYWORD],
			EL.[ECO_LAN_LAN_ID],	
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[MANUFACTURARE] AS M
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = M.[MANUFACTURARE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE M.[MANUFACTURARE_ID]= @P_MANUFACTURARE_ID and [MANUFACTURARE_PORTAL_ID] = @P_MANUFACTURARE_PORTAL_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[ManufacturareUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ManufacturareUpdate]

	@P_MANUFACTURARE_ID	int,
	@P_MANUFACTURARE_LOGO_IMAGE nvarchar(500)	,
	@P_MANUFACTURARE_IS_ENABLED	bit,	
	@P_MANUFACTURARE_PORTAL_ID	int	,
	
	@P_MANUFACTURARE_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_SHORT_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_META_TITLE NVARCHAR(500),
	@P_MANUFACTURARE_META_DESCRIPTION NVARCHAR(500),
	@P_MANUFACTURARE_META_KEYWORDS NVARCHAR(500),

	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	update [ECOMMERCE].[MANUFACTURARE]
		set
		[MANUFACTURARE_LOGO_IMAGE] = @P_MANUFACTURARE_LOGO_IMAGE,
		[MANUFACTURARE_IS_ENABLED] = @P_MANUFACTURARE_IS_ENABLED,	
		[MANUFACTURARE_PORTAL_ID] = @P_MANUFACTURARE_PORTAL_ID
		
		where 
		[MANUFACTURARE_ID] =  @P_MANUFACTURARE_ID
		
		update [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			set
			
				[ECO_LAN_DESC] =  @P_MANUFACTURARE_DESCRIPTION,
				[ECO_LAN_DESC2] = @P_MANUFACTURARE_SHORT_DESCRIPTION,
				[ECO_LAN_NAME2] = @P_MANUFACTURARE_META_TITLE,
				[ECO_LAN_DETAILS] = @P_MANUFACTURARE_META_DESCRIPTION ,
				[ECO_LAN_KEYWORD] = @P_MANUFACTURARE_META_KEYWORDS			
				
			WHERE 
				[ECO_LAN_OBJ_ID] = @P_MANUFACTURARE_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[PreferenceAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[PreferenceAdd]
	@P_PREFERENCE_ID INT OUT,
	@P_PREFERENCE_NAME NVARCHAR(200),
	@P_PREFERENCE_PORTAL_ID INT,
	@P_PREFERENCE_IS_ENABLED BIT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	

	INSERT INTO [ECOMMERCE].[PREFERENCE]
		(
			PREFERENCE_NAME,
			PREFERENCE_PORTAL_ID ,
			PREFERENCE_IS_ENABLED 
		)
	VALUES
		(
			@P_PREFERENCE_NAME,
			@P_PREFERENCE_PORTAL_ID,
			@P_PREFERENCE_IS_ENABLED
		)

			set @P_PREFERENCE_ID =  SCOPE_IDENTITY()
			
END
GO
PRINT N'Creating [ECOMMERCE].[PreferenceGetByName]...';


GO
CREATE PROCEDURE [ECOMMERCE].[PreferenceGetByName]
	@P_PREFERENCE_NAME nvarchar(200)
    
AS
BEGIN
	SET NOCOUNT ON;

		select
			 PREFERENCE_ID,
			 PREFERENCE_NAME,
			 PREFERENCE_PORTAL_ID,
			 PREFERENCE_IS_ENABLED
	
		from [ECOMMERCE].[PREFERENCE]
		
			where 
			 PREFERENCE_NAME = @P_PREFERENCE_NAME
			
END
GO
PRINT N'Creating [ECOMMERCE].[PreferenceGetByPortalID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[PreferenceGetByPortalID]
	@P_PREFERENCE_PORTAL_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;

		select
			 PREFERENCE_ID,
			 PREFERENCE_NAME,
			 PREFERENCE_PORTAL_ID,
			 PREFERENCE_IS_ENABLED
	
		from [ECOMMERCE].[PREFERENCE]
		
			where 
			 PREFERENCE_PORTAL_ID = @P_PREFERENCE_PORTAL_ID
			
END
GO
PRINT N'Creating [ECOMMERCE].[PreferenceUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[PreferenceUpdate]
	@P_PREFERENCE_ID INT,
	@P_PREFERENCE_IS_ENABLED bit
    
AS
BEGIN
	SET NOCOUNT ON;

	update [ECOMMERCE].[PREFERENCE]
			set
			 PREFERENCE_IS_ENABLED = @P_PREFERENCE_IS_ENABLED
			where 
			 PREFERENCE_ID = @P_PREFERENCE_ID
			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductAdd]
	
			@P_PRODUCT_ID	int	output,
			@P_PRODUCT_SUPPLIER_ID	int	,
			@P_PRODUCT_EAN13_OR_JAN	nvarchar(500),
			@P_PRODUCT_UPC	nvarchar(500),
			@P_PRODUCT_LOCATION	nvarchar(500),
			@P_PRODUCT_IS_DOWNLODABLE	bit	,
			@P_PRODUCT_DISPLAY_ON_SALE_ICON	bit	,
			@P_PRODUCT_INITIAL_STOCK	int	,
			@P_PRODUCT_MINIMUM_QUANTITY int	,
			@P_PRODUCT_ADDITIONAL_SHIPPING_COST decimal,
			@P_PRODUCT_MANUFACTURER_ID	int	,
			@P_PRODUCT_IS_ENABLED	bit	,
			@P_PRODUCT_PORTAL_ID	int	,
			@P_PRODUCT_TAX_ID	int	,
			
			@P_MODULE_ID INT,
			@P_ECO_LAN_LAN_ID INT,
			
			@P_PRODUCT_NAME NVARCHAR(500),
			@P_PRODUCT_DISPLAY_TEXT_IN_STOCK NVARCHAR(500),
			@P_PRODUCT_DISPLAY_TEXT_BACK_ORDER NVARCHAR(500),
			@P_PRODUCT_DESCRIPTION NVARCHAR(500),
			@P_PRODUCT_SHORT_DESCRIPTION NVARCHAR(500),
			@P_PRODUCT_SIZE_CHART NVARCHAR(500),
			@P_PRODUCT_TAGS NVARCHAR(500)
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	INSERT INTO [ECOMMERCE].[PRODUCT]
		(
			[PRODUCT_SUPPLIER_ID],		
			[PRODUCT_EAN13_OR_JAN],
			[PRODUCT_UPC],	
			[PRODUCT_LOCATION],
			[PRODUCT_IS_DOWNLODABLE],
			[PRODUCT_DISPLAY_ON_SALE_ICON],
			[PRODUCT_INITIAL_STOCK],
			[PRODUCT_MINIMUM_QUANTITY],
			[PRODUCT_ADDITIONAL_SHIPPING_COST],
			[PRODUCT_MANUFACTURER_ID],
			[PRODUCT_IS_ENABLED],
			[PRODUCT_PORTAL_ID],
			[PRODUCT_TAX_ID]
		)
	VALUES
		(
			case when @P_PRODUCT_SUPPLIER_ID >0 then @P_PRODUCT_SUPPLIER_ID else null end	,
			@P_PRODUCT_EAN13_OR_JAN	,
			@P_PRODUCT_UPC,
			@P_PRODUCT_LOCATION,
			@P_PRODUCT_IS_DOWNLODABLE,
			@P_PRODUCT_DISPLAY_ON_SALE_ICON,
			@P_PRODUCT_INITIAL_STOCK,
			@P_PRODUCT_MINIMUM_QUANTITY,
			@P_PRODUCT_ADDITIONAL_SHIPPING_COST,
			case when  @P_PRODUCT_MANUFACTURER_ID > 0 then @P_PRODUCT_MANUFACTURER_ID else null end,
			@P_PRODUCT_IS_ENABLED,
			@P_PRODUCT_PORTAL_ID,
			case when @P_PRODUCT_TAX_ID	 >0 then @P_PRODUCT_TAX_ID else null end
		)
		
		set @P_PRODUCT_ID = SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
						
				[ECO_LAN_NAME],	
				[ECO_LAN_MESSAGE1],
				[ECO_LAN_MESSAGE2],
				[ECO_LAN_DESC],
				[ECO_LAN_DESC2],
				[ECO_LAN_DETAILS],
				[ECO_LAN_KEYWORD]
			)
			VALUES
			(
				@P_PRODUCT_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				
				@P_PRODUCT_NAME,
				@P_PRODUCT_DISPLAY_TEXT_IN_STOCK ,
				@P_PRODUCT_DISPLAY_TEXT_BACK_ORDER,
				@P_PRODUCT_DESCRIPTION,
				@P_PRODUCT_SHORT_DESCRIPTION,
				@P_PRODUCT_SIZE_CHART,
				@P_PRODUCT_TAGS 
			)
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductAddOtherLang]
	
			@P_PRODUCT_ID int,
		
			@P_MODULE_ID INT,
			@P_ECO_LAN_LAN_ID INT,
			
			@P_PRODUCT_NAME NVARCHAR(500),
			@P_PRODUCT_DISPLAY_TEXT_IN_STOCK NVARCHAR(500),
			@P_PRODUCT_DISPLAY_TEXT_BACK_ORDER NVARCHAR(500),
			@P_PRODUCT_DESCRIPTION NVARCHAR(500),
			@P_PRODUCT_SHORT_DESCRIPTION NVARCHAR(500),
			@P_PRODUCT_SIZE_CHART NVARCHAR(500),
			@P_PRODUCT_TAGS NVARCHAR(500)
    
AS
BEGIN
	SET NOCOUNT ON;
	
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
						
				[ECO_LAN_NAME],	
				[ECO_LAN_MESSAGE1],
				[ECO_LAN_MESSAGE2],
				[ECO_LAN_DESC],
				[ECO_LAN_DESC2],
				[ECO_LAN_DETAILS],
				[ECO_LAN_KEYWORD]
			)
			VALUES
			(
				@P_PRODUCT_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				
				@P_PRODUCT_NAME,
				@P_PRODUCT_DISPLAY_TEXT_IN_STOCK ,
				@P_PRODUCT_DISPLAY_TEXT_BACK_ORDER,
				@P_PRODUCT_DESCRIPTION,
				@P_PRODUCT_SHORT_DESCRIPTION,
				@P_PRODUCT_SIZE_CHART,
				@P_PRODUCT_TAGS 
			)
		
			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductCatalogAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductCatalogAdd]

		@P_PRODUCT_ID	int,	
		@P_CATALOG_ID	int	,
		@P_PRODUCT_ORDER INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO [ECOMMERCE].[PRODUCT_CATALOG]
		(
			[PRODUCT_ID],	
			[CATALOG_ID],
			[PRODUCT_ORDER]
		)
	VALUES
		(
			@P_PRODUCT_ID,	
			@P_CATALOG_ID,
			@P_PRODUCT_ORDER	
		)
		
		
		
END
GO
PRINT N'Creating [ECOMMERCE].[ProductCatalogDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductCatalogDelete]

		@P_PRODUCT_ID	int,	
		@P_CATALOG_ID	int	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	delete from  [ECOMMERCE].[PRODUCT_CATALOG]
		where
			[PRODUCT_ID] = @P_PRODUCT_ID
			and	
			[CATALOG_ID]= @P_CATALOG_ID	
	
END
GO
PRINT N'Creating [ECOMMERCE].[ProductCatalogDeleteByProductID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductCatalogDeleteByProductID]

	@P_PRODUCT_ID int
AS
BEGIN
	SET NOCOUNT ON;
	
	delete from  [ECOMMERCE].[PRODUCT_CATALOG]
		where
			[PRODUCT_ID] = @P_PRODUCT_ID
	
END
GO
PRINT N'Creating [ECOMMERCE].[ProductDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductDelete]
	@P_PRODUCT_ID INT,
	
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
		
	delete from  [ECOMMERCE].[ECOMMERCE_LANGUAGE]
		WHERE 
				[ECO_LAN_OBJ_ID] = @P_PRODUCT_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		delete from  [ECOMMERCE].[PRODUCT]
	where
		[PRODUCT_ID] = @P_PRODUCT_ID			
	
	IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction		
END
GO
PRINT N'Creating [ECOMMERCE].[ProductDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductDeleteLogical]
	@P_PRODUCT_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[PRODUCT] set
		[PRODUCT_IS_DELETED] = 1
		where
		[PRODUCT_ID] = @P_PRODUCT_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[ProductFeatureAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductFeatureAdd]

		@P_PRODUCT_ID	int,	
		@P_FEATURE_ID	int	,
		@P_PRODUCT_FEATURE_VALUE int
    
AS
BEGIN
	SET NOCOUNT ON;
	
	insert into
	  [ECOMMERCE].[PRODUCT_FEATURE]
		(
			[PRODUCT_PRODUCT_ID],
			[PRODUCT_FEATURE_ID],
			[PRODUCT_FEATURE_VALUE]
		)
		values
		(
			@P_PRODUCT_ID,
			@P_FEATURE_ID,
			@P_PRODUCT_FEATURE_VALUE 
		)
			
	
END
GO
PRINT N'Creating [ECOMMERCE].[ProductFeatureDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductFeatureDelete]

		@P_PRODUCT_ID	int,	
		@P_FEATURE_ID	int	
    
AS
BEGIN
	SET NOCOUNT ON;
	
	delete from  [ECOMMERCE].[PRODUCT_FEATURE]
		where
			[PRODUCT_PRODUCT_ID]= @P_PRODUCT_ID	
			and	
			[PRODUCT_FEATURE_ID] = @P_FEATURE_ID
			
			
	
END
GO
PRINT N'Creating [ECOMMERCE].[ProductFeatureUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductFeatureUpdate]

		@P_PRODUCT_PRODUCT_ID	int,	
		@P_PRODUCT_FEATURE_ID	int	,
		@P_PRODUCT_FEATURE_VALUE int
    
AS
BEGIN
	SET NOCOUNT ON;
	
	update 
	  [ECOMMERCE].[PRODUCT_FEATURE]
		set
			[PRODUCT_FEATURE_VALUE] = @P_PRODUCT_FEATURE_VALUE 
		where 
			[PRODUCT_PRODUCT_ID] = @P_PRODUCT_PRODUCT_ID
			and
			[PRODUCT_FEATURE_ID] = @P_PRODUCT_FEATURE_ID
	
END
GO
PRINT N'Creating [ECOMMERCE].[ProductGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductGetAll]
			@P_PRODUCT_PORTAL_ID int,
			@P_MODULE_ID INT,
			@P_ECO_LAN_LAN_ID INT
	
	AS
	BEGIN
		SET NOCOUNT ON;
		select
				P.[PRODUCT_ID],
				P.[PRODUCT_SUPPLIER_ID],
				P.[PRODUCT_EAN13_OR_JAN],
				P.[PRODUCT_UPC] ,
				P.[PRODUCT_LOCATION],
				P.[PRODUCT_IS_DOWNLODABLE],
				P.[PRODUCT_DISPLAY_ON_SALE_ICON],
				P.[PRODUCT_INITIAL_STOCK],
				P.[PRODUCT_MINIMUM_QUANTITY],
				P.[PRODUCT_ADDITIONAL_SHIPPING_COST],
				P.[PRODUCT_MANUFACTURER_ID] ,
				P.[PRODUCT_IS_ENABLED] ,
				P.[PRODUCT_IS_DELETED] ,
				P.[PRODUCT_PORTAL_ID] ,
				P.[PRODUCT_TAX_ID],

				
				EL.[ECO_LAN_LAN_ID],
				EL.[ECO_LAN_NAME],      
				EL.[ECO_LAN_MESSAGE1],  
				EL.[ECO_LAN_MESSAGE2],  
				EL.[ECO_LAN_DESC],      
				EL.[ECO_LAN_DESC2],     
				EL.[ECO_LAN_DETAILS],   
				EL.[ECO_LAN_KEYWORD]
		
	from 
		[ECOMMERCE].[PRODUCT] AS P
			LEFT OUTER JOIN
		[ECOMMERCE].[ECOMMERCE_LANGUAGE] AS EL
			ON	
				EL.[ECO_LAN_OBJ_ID] = P.[PRODUCT_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		where
				P.[PRODUCT_IS_DELETED] = 0 and P.[PRODUCT_PORTAL_ID] =  @P_PRODUCT_PORTAL_ID
				
			

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductGetByCatalogID]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductGetByCatalogID]
			@P_CATALOG_ID INT,
			@P_PRODUCT_PORTAL_ID int,
			@P_MODULE_ID INT,
			@P_ECO_LAN_LAN_ID INT
	
	AS
	BEGIN
		SET NOCOUNT ON;
		select
				P.[PRODUCT_ID],
				P.[PRODUCT_SUPPLIER_ID],
				P.[PRODUCT_EAN13_OR_JAN],
				P.[PRODUCT_UPC] ,
				P.[PRODUCT_LOCATION],
				P.[PRODUCT_IS_DOWNLODABLE],
				P.[PRODUCT_DISPLAY_ON_SALE_ICON],
				P.[PRODUCT_INITIAL_STOCK],
				P.[PRODUCT_MINIMUM_QUANTITY],
				P.[PRODUCT_ADDITIONAL_SHIPPING_COST],
				P.[PRODUCT_MANUFACTURER_ID] ,
				P.[PRODUCT_IS_ENABLED] ,
				P.[PRODUCT_IS_DELETED] ,
				P.[PRODUCT_PORTAL_ID] ,
				P.[PRODUCT_TAX_ID],
				PC.PRODUCT_ORDER,
				
				EL.[ECO_LAN_LAN_ID],
				EL.[ECO_LAN_NAME],      
				EL.[ECO_LAN_MESSAGE1],  
				EL.[ECO_LAN_MESSAGE2],  
				EL.[ECO_LAN_DESC],      
				EL.[ECO_LAN_DESC2],     
				EL.[ECO_LAN_DETAILS],   
				EL.[ECO_LAN_KEYWORD]
		
	from 
		[ECOMMERCE].[PRODUCT] AS P
		INNER JOIN 
		[ECOMMERCE].PRODUCT_CATALOG AS PC
		ON
		PC.CATALOG_ID = @P_CATALOG_ID AND P.PRODUCT_ID = PC.PRODUCT_ID
			LEFT OUTER JOIN
		[ECOMMERCE].[ECOMMERCE_LANGUAGE] AS EL
			ON	
				EL.[ECO_LAN_OBJ_ID] = P.[PRODUCT_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		where
				P.[PRODUCT_IS_DELETED] = 0 and P.[PRODUCT_PORTAL_ID] =  @P_PRODUCT_PORTAL_ID
				order by PC.CATALOG_ID,PC.PRODUCT_ORDER
			

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductGetById]
	
			@P_PRODUCT_ID int,
			@P_PRODUCT_PORTAL_ID int,
			@P_MODULE_ID INT,
			@P_ECO_LAN_LAN_ID INT
	
	AS
	BEGIN
		SET NOCOUNT ON;
		select
				P.[PRODUCT_ID],
				P.[PRODUCT_SUPPLIER_ID],
				P.[PRODUCT_EAN13_OR_JAN],
				P.[PRODUCT_UPC] ,
				P.[PRODUCT_LOCATION],
				P.[PRODUCT_IS_DOWNLODABLE],
				P.[PRODUCT_DISPLAY_ON_SALE_ICON],
				P.[PRODUCT_INITIAL_STOCK],
				P.[PRODUCT_MINIMUM_QUANTITY],
				P.[PRODUCT_ADDITIONAL_SHIPPING_COST],
				P.[PRODUCT_MANUFACTURER_ID] ,
				P.[PRODUCT_IS_ENABLED] ,
				P.[PRODUCT_IS_DELETED] ,
				P.[PRODUCT_PORTAL_ID] ,
				P.[PRODUCT_TAX_ID],
				
				EL.[ECO_LAN_LAN_ID],
				EL.[ECO_LAN_NAME],      
				EL.[ECO_LAN_MESSAGE1],  
				EL.[ECO_LAN_MESSAGE2],  
				EL.[ECO_LAN_DESC],      
				EL.[ECO_LAN_DESC2],     
				EL.[ECO_LAN_DETAILS],   
				EL.[ECO_LAN_KEYWORD]
		
	from 
		[ECOMMERCE].[PRODUCT] AS P
			LEFT OUTER JOIN
		[ECOMMERCE].[ECOMMERCE_LANGUAGE] AS EL
			ON	
				EL.[ECO_LAN_OBJ_ID] = P.[PRODUCT_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		where
				P.[PRODUCT_ID] = @P_PRODUCT_ID and P.[PRODUCT_PORTAL_ID] =  @P_PRODUCT_PORTAL_ID
				
			

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageAdd]

	@P_PROD_IMAGE_ID int output,
	@P_PROD_PRODUCT_ID	int,
	@P_PROD_IMAGE_NAME	nvarchar(500),
	@P_PROD_IMAGE_IS_COVER_IMAGE bit,
	
	@P_PROD_IMAGE_CAPTION	nvarchar(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	INSERT INTO [ECOMMERCE].[PRODUCT_IMAGE]
		(
			PROD_PRODUCT_ID	,
			PROD_IMAGE_NAME,
			PROD_IMAGE_IS_COVER_IMAGE
		)
	VALUES
		(
			@P_PROD_PRODUCT_ID,
			@P_PROD_IMAGE_NAME,
			@P_PROD_IMAGE_IS_COVER_IMAGE
		)
		
		set @P_PROD_IMAGE_ID = SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_PROD_IMAGE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_PROD_IMAGE_CAPTION
			)
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageAddOtherLang]...';


GO
create PROCEDURE [ECOMMERCE].[ProductImageAddOtherLang]

	@P_PROD_IMAGE_ID int,
	@P_PROD_PRODUCT_ID	int,
	
	@P_PROD_IMAGE_CAPTION	nvarchar(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;

		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],		
				[ECO_LAN_NAME]	
			)
			VALUES
			(
				@P_PROD_IMAGE_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				@P_PROD_IMAGE_CAPTION
			)
			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageDelete]

	@P_PROD_IMAGE_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

		delete from [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			
				WHERE 
				[ECO_LAN_OBJ_ID] = @P_PROD_IMAGE_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
			
			
			delete from [ECOMMERCE].[PRODUCT_IMAGE]
		where PROD_IMAGE_ID = @P_PROD_IMAGE_ID
		
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageDeleteLogical]
	@P_PROD_IMAGE_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[PRODUCT_IMAGE] set
		[PROD_IMAGE_IS_DELETED] = 1
		where
		[PROD_IMAGE_ID] = @P_PROD_IMAGE_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageGetAll]
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			PRI.[PROD_IMAGE_ID],
			PRI.[PROD_PRODUCT_ID],
			PRI.[PROD_IMAGE_NAME],
			PRI.[PROD_IMAGE_IS_COVER_IMAGE],
			PRI.[PROD_IMAGE_IS_DELETED],
			
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[PRODUCT_IMAGE] AS PRI
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = PRI.[PROD_IMAGE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE PRI.[PROD_IMAGE_IS_DELETED]=0
	END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageGetByCombinationId]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageGetByCombinationId]
	@P_COMBINATION_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			PRI.[PROD_IMAGE_ID],
			PRI.[PROD_PRODUCT_ID],
			PRI.[PROD_IMAGE_NAME],
			PRI.[PROD_IMAGE_IS_COVER_IMAGE],
			PRI.[PROD_IMAGE_IS_DELETED],
			
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
			
	 FROM  [ECOMMERCE].[PRODUCT_IMAGE] AS PRI
			INNER JOIN
		   [ECOMMERCE].[COMBINATION_IMAGE] AS CI
	 ON    
		   CI.COMBINATION_ID = 	@P_COMBINATION_ID
		   AND
		   CI.COMBINATION_IMAGE_ID = PRI.[PROD_IMAGE_ID]
		   
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = PRI.[PROD_IMAGE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE PRI.[PROD_IMAGE_IS_DELETED] = 0 
	END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageGetById]
	@P_PROD_IMAGE_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			PRI.[PROD_IMAGE_ID],
			PRI.[PROD_PRODUCT_ID],
			PRI.[PROD_IMAGE_NAME],
			PRI.[PROD_IMAGE_IS_COVER_IMAGE],
			PRI.[PROD_IMAGE_IS_DELETED],
			
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[PRODUCT_IMAGE] AS PRI
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = PRI.[PROD_IMAGE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE PRI.[PROD_IMAGE_ID]=@P_PROD_IMAGE_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageGetByProductId]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageGetByProductId]
	@P_PROD_PRODUCT_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			PRI.[PROD_IMAGE_ID],
			PRI.[PROD_PRODUCT_ID],
			PRI.[PROD_IMAGE_NAME],
			PRI.[PROD_IMAGE_IS_COVER_IMAGE],
			PRI.[PROD_IMAGE_IS_DELETED],
			
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[PRODUCT_IMAGE] AS PRI
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = PRI.[PROD_IMAGE_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE PRI.[PROD_IMAGE_IS_DELETED] = 0 and PRI.[PROD_PRODUCT_ID]=@P_PROD_PRODUCT_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[ProductImageUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductImageUpdate]

	@P_PROD_IMAGE_ID	int,
	@P_PROD_PRODUCT_ID	int,
	@P_PROD_IMAGE_NAME	nvarchar(500),
	@P_PROD_IMAGE_IS_COVER_IMAGE bit,
	
	@P_PROD_IMAGE_CAPTION	nvarchar(500),
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	update [ECOMMERCE].[PRODUCT_IMAGE]
		set
			PROD_PRODUCT_ID = @P_PROD_PRODUCT_ID	,
			PROD_IMAGE_NAME = @P_PROD_IMAGE_NAME,
			PROD_IMAGE_IS_COVER_IMAGE = @P_PROD_IMAGE_IS_COVER_IMAGE
	
		where PROD_IMAGE_ID = @P_PROD_IMAGE_ID
		
		
		update [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			set
				[ECO_LAN_NAME]= @P_PROD_IMAGE_CAPTION
				
				WHERE 
				[ECO_LAN_OBJ_ID] = @P_PROD_IMAGE_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductPriceAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductPriceAdd]

		@P_PRODUCT_PRICE_ID	int output	,
		@P_PRODUCT_PRICE_CURRENCY_ID	int	,
		@P_PRODUCT_PRICE_COUNTRY_ID	int	,
		@P_PRODUCT_PRICE_FROM_DAY	int	,
		@P_PRODUCT_PRICE_FROM_SEC	int	,
		@P_PRODUCT_PRICE_TO_DAY	int	,
		@P_PRODUCT_PRICE_TO_SEC	int	,
		@P_PRODUCT_PRICE_START_AT	int	,
		@P_PRODUCT_PRICE_VALUE	decimal,
		@P_PRODUCT_PRICE_DISCOUNT_VALUE decimal	,
		@P_PRODUCT_PRICE_DISCOUNT_TYPE	int,
		@P_PRODUCT_PRICE_PRODUCT_ID int
    
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO [ECOMMERCE].[PRODUCT_PRICE]
		(
		[PRODUCT_PRICE_CURRENCY_ID]		,
		[PRODUCT_PRICE_COUNTRY_ID]		,
		[PRODUCT_PRICE_FROM_DAY]	,
		[PRODUCT_PRICE_FROM_SEC]		,
		[PRODUCT_PRICE_TO_DAY]		,
		[PRODUCT_PRICE_TO_SEC]		,
		[PRODUCT_PRICE_START_AT]		,
		[PRODUCT_PRICE_VALUE]	,
		[PRODUCT_PRICE_DISCOUNT_VALUE] 	,
		[PRODUCT_PRICE_DISCOUNT_TYPE]	,
		[PRODUCT_PRICE_PRODUCT_ID]
		)
	VALUES
		(
		@P_PRODUCT_PRICE_CURRENCY_ID,
		@P_PRODUCT_PRICE_COUNTRY_ID	,
		@P_PRODUCT_PRICE_FROM_DAY,
		@P_PRODUCT_PRICE_FROM_SEC,
		@P_PRODUCT_PRICE_TO_DAY	,
		@P_PRODUCT_PRICE_TO_SEC	,
		@P_PRODUCT_PRICE_START_AT,
		@P_PRODUCT_PRICE_VALUE,
		@P_PRODUCT_PRICE_DISCOUNT_VALUE,
		@P_PRODUCT_PRICE_DISCOUNT_TYPE,
		@P_PRODUCT_PRICE_PRODUCT_ID 
		)
		
		set @P_PRODUCT_PRICE_ID = SCOPE_IDENTITY()
		
END
GO
PRINT N'Creating [ECOMMERCE].[ProductPriceDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductPriceDelete]

		@P_PRODUCT_PRICE_ID	int 
AS
BEGIN
	SET NOCOUNT ON;
	delete  from [ECOMMERCE].[PRODUCT_PRICE]
		where PRODUCT_PRICE_ID = @P_PRODUCT_PRICE_ID
END
GO
PRINT N'Creating [ECOMMERCE].[ProductPriceGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductPriceGetAll]

AS
BEGIN
	SET NOCOUNT ON;
	select
		[PRODUCT_PRICE_ID] 
		[PRODUCT_PRICE_CURRENCY_ID],
		[PRODUCT_PRICE_COUNTRY_ID],
		[PRODUCT_PRICE_FROM_DAY],
		[PRODUCT_PRICE_FROM_SEC],
		[PRODUCT_PRICE_TO_DAY],
		[PRODUCT_PRICE_TO_SEC],
		[PRODUCT_PRICE_START_AT],
		[PRODUCT_PRICE_VALUE],
		[PRODUCT_PRICE_DISCOUNT_VALUE],
		[PRODUCT_PRICE_DISCOUNT_TYPE],
		[PRODUCT_PRICE_PRODUCT_ID],
		[PRODUCT_PRICE_IS_DELETED]
	
		from [ECOMMERCE].[PRODUCT_PRICE]
		
END
GO
PRINT N'Creating [ECOMMERCE].[ProductPriceGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductPriceGetById]

		@P_PRODUCT_PRICE_ID	int
		
    
AS
BEGIN
	SET NOCOUNT ON;
	select
		[PRODUCT_PRICE_ID] 
		[PRODUCT_PRICE_CURRENCY_ID],
		[PRODUCT_PRICE_COUNTRY_ID],
		[PRODUCT_PRICE_FROM_DAY],
		[PRODUCT_PRICE_FROM_SEC],
		[PRODUCT_PRICE_TO_DAY],
		[PRODUCT_PRICE_TO_SEC],
		[PRODUCT_PRICE_START_AT],
		[PRODUCT_PRICE_VALUE],
		[PRODUCT_PRICE_DISCOUNT_VALUE],
		[PRODUCT_PRICE_DISCOUNT_TYPE],
		[PRODUCT_PRICE_PRODUCT_ID],
		[PRODUCT_PRICE_IS_DELETED]
	
		from [ECOMMERCE].[PRODUCT_PRICE]
		where PRODUCT_PRICE_ID = @P_PRODUCT_PRICE_ID
END
GO
PRINT N'Creating [ECOMMERCE].[ProductPriceUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductPriceUpdate]

		@P_PRODUCT_PRICE_ID	int	,
		@P_PRODUCT_PRICE_CURRENCY_ID	int	,
		@P_PRODUCT_PRICE_COUNTRY_ID	int	,
		@P_PRODUCT_PRICE_FROM_DAY	int	,
		@P_PRODUCT_PRICE_FROM_SEC	int	,
		@P_PRODUCT_PRICE_TO_DAY	int	,
		@P_PRODUCT_PRICE_TO_SEC	int	,
		@P_PRODUCT_PRICE_START_AT	int	,
		@P_PRODUCT_PRICE_VALUE	decimal,
		@P_PRODUCT_PRICE_DISCOUNT_VALUE decimal	,
		@P_PRODUCT_PRICE_DISCOUNT_TYPE	int,
		@P_PRODUCT_PRICE_PRODUCT_ID int
    
AS
BEGIN
	SET NOCOUNT ON;
	
	update[ECOMMERCE].[PRODUCT_PRICE]
		set
		[PRODUCT_PRICE_CURRENCY_ID]	= @P_PRODUCT_PRICE_CURRENCY_ID	,
		[PRODUCT_PRICE_COUNTRY_ID]	= @P_PRODUCT_PRICE_COUNTRY_ID	,
		[PRODUCT_PRICE_FROM_DAY]= @P_PRODUCT_PRICE_FROM_DAY	,
		[PRODUCT_PRICE_FROM_SEC] = @P_PRODUCT_PRICE_FROM_SEC		,
		[PRODUCT_PRICE_TO_DAY]= @P_PRODUCT_PRICE_TO_DAY		,
		[PRODUCT_PRICE_TO_SEC]	= @P_PRODUCT_PRICE_TO_SEC	,
		[PRODUCT_PRICE_START_AT] =@P_PRODUCT_PRICE_START_AT		,
		[PRODUCT_PRICE_VALUE] = @P_PRODUCT_PRICE_VALUE	,
		[PRODUCT_PRICE_DISCOUNT_VALUE] = @P_PRODUCT_PRICE_DISCOUNT_VALUE 	,
		[PRODUCT_PRICE_DISCOUNT_TYPE] = @P_PRODUCT_PRICE_DISCOUNT_TYPE	,
		[PRODUCT_PRICE_PRODUCT_ID] = @P_PRODUCT_PRICE_PRODUCT_ID
	where 
	    [PRODUCT_PRICE_ID] =  @P_PRODUCT_PRICE_ID
		
END
GO
PRINT N'Creating [ECOMMERCE].[ProductSearch]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductSearch]
			@P_CATALOG_ID INT,
			@P_PRODUCT_NAME NVARCHAR,
			@P_PRODUCT_PORTAL_ID int,
			@P_MODULE_ID INT,
			@P_ECO_LAN_LAN_ID INT
	
	AS
	BEGIN
		SET NOCOUNT ON;
		select
				P.[PRODUCT_ID],
				P.[PRODUCT_SUPPLIER_ID],
				P.[PRODUCT_EAN13_OR_JAN],
				P.[PRODUCT_UPC] ,
				P.[PRODUCT_LOCATION],
				P.[PRODUCT_IS_DOWNLODABLE],
				P.[PRODUCT_DISPLAY_ON_SALE_ICON],
				P.[PRODUCT_INITIAL_STOCK],
				P.[PRODUCT_MINIMUM_QUANTITY],
				P.[PRODUCT_ADDITIONAL_SHIPPING_COST],
				P.[PRODUCT_MANUFACTURER_ID] ,
				P.[PRODUCT_IS_ENABLED] ,
				P.[PRODUCT_IS_DELETED] ,
				P.[PRODUCT_PORTAL_ID] ,
				P.[PRODUCT_TAX_ID],
				
				EL.[ECO_LAN_LAN_ID],
				EL.[ECO_LAN_NAME],      
				EL.[ECO_LAN_MESSAGE1],  
				EL.[ECO_LAN_MESSAGE2],  
				EL.[ECO_LAN_DESC],      
				EL.[ECO_LAN_DESC2],     
				EL.[ECO_LAN_DETAILS],   
				EL.[ECO_LAN_KEYWORD]
		
	from 
		[ECOMMERCE].[PRODUCT] AS P
		LEFT OUTER JOIN 
		[ECOMMERCE].PRODUCT_CATALOG AS PC
		ON
		 PC.CATALOG_ID =  case when @P_CATALOG_ID >0 then  @P_CATALOG_ID else PC.CATALOG_ID end
		  AND P.PRODUCT_ID = PC.PRODUCT_ID
		
			LEFT OUTER JOIN
		[ECOMMERCE].[ECOMMERCE_LANGUAGE] AS EL
			ON	
				EL.[ECO_LAN_OBJ_ID] = P.[PRODUCT_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
		where
				P.PRODUCT_ID IN (SELECT PRODUCT_ID FROM ECOMMERCE.PRODUCT_CATALOG WHERE 
				 CATALOG_ID = @P_CATALOG_ID AND PRODUCT_ID = P.PRODUCT_ID ) OR @P_CATALOG_ID <=0
				AND 
				P.[PRODUCT_IS_DELETED] = 0 and P.[PRODUCT_PORTAL_ID] =  @P_PRODUCT_PORTAL_ID
				AND
				 
		       el.[ECO_LAN_NAME] like case when @P_PRODUCT_NAME <> '' then '%'+@P_PRODUCT_NAME+'%' else  el.[ECO_LAN_NAME] end
			

			
END
GO
PRINT N'Creating [ECOMMERCE].[ProductUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[ProductUpdate]
	
			@P_PRODUCT_ID	int,
			@P_PRODUCT_SUPPLIER_ID	int	,
			@P_PRODUCT_EAN13_OR_JAN	nvarchar(500),
			@P_PRODUCT_UPC	nvarchar(500),
			@P_PRODUCT_LOCATION	nvarchar(500),
			@P_PRODUCT_IS_DOWNLODABLE	bit	,
			@P_PRODUCT_DISPLAY_ON_SALE_ICON	bit	,
			@P_PRODUCT_INITIAL_STOCK	int	,
			@P_PRODUCT_MINIMUM_QUANTITY int	,
			@P_PRODUCT_ADDITIONAL_SHIPPING_COST decimal,
			@P_PRODUCT_MANUFACTURER_ID	int	,
			@P_PRODUCT_IS_ENABLED	bit	,
			@P_PRODUCT_PORTAL_ID	int	,
			@P_PRODUCT_TAX_ID	int	,
			
			@P_MODULE_ID INT,
			@P_ECO_LAN_LAN_ID INT,
			
			@P_PRODUCT_NAME NVARCHAR(500),
			@P_PRODUCT_DISPLAY_TEXT_IN_STOCK NVARCHAR(500),
			@P_PRODUCT_DISPLAY_TEXT_BACK_ORDER NVARCHAR(500),
			@P_PRODUCT_DESCRIPTION NVARCHAR(500),
			@P_PRODUCT_SHORT_DESCRIPTION NVARCHAR(500),
			@P_PRODUCT_SIZE_CHART NVARCHAR(500),
			@P_PRODUCT_TAGS NVARCHAR(500)
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	update [ECOMMERCE].[PRODUCT]
		set
			[PRODUCT_SUPPLIER_ID] = case when @P_PRODUCT_SUPPLIER_ID >0  then @P_PRODUCT_SUPPLIER_ID else null end,		
			[PRODUCT_EAN13_OR_JAN] = @P_PRODUCT_EAN13_OR_JAN,
			[PRODUCT_UPC] = @P_PRODUCT_UPC,	
			[PRODUCT_LOCATION]= @P_PRODUCT_LOCATION,
			[PRODUCT_IS_DOWNLODABLE] = @P_PRODUCT_IS_DOWNLODABLE,
			[PRODUCT_DISPLAY_ON_SALE_ICON] = @P_PRODUCT_DISPLAY_ON_SALE_ICON,
			[PRODUCT_INITIAL_STOCK] = @P_PRODUCT_INITIAL_STOCK,
			[PRODUCT_MINIMUM_QUANTITY] = @P_PRODUCT_MINIMUM_QUANTITY,
			[PRODUCT_ADDITIONAL_SHIPPING_COST] = @P_PRODUCT_ADDITIONAL_SHIPPING_COST,
			[PRODUCT_MANUFACTURER_ID] =case when  @P_PRODUCT_MANUFACTURER_ID >0 then [PRODUCT_MANUFACTURER_ID] else null end,
			[PRODUCT_IS_ENABLED] =@P_PRODUCT_IS_ENABLED,
			[PRODUCT_PORTAL_ID] =@P_PRODUCT_PORTAL_ID,
			[PRODUCT_TAX_ID] = case when @P_PRODUCT_TAX_ID	 >0 then @P_PRODUCT_TAX_ID else null end
		
		where [PRODUCT_ID] =@P_PRODUCT_ID
		 
		update [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			set
					
				[ECO_LAN_NAME] = @P_PRODUCT_NAME,	
				[ECO_LAN_MESSAGE1]= @P_PRODUCT_DISPLAY_TEXT_IN_STOCK,
				[ECO_LAN_MESSAGE2] = @P_PRODUCT_DISPLAY_TEXT_BACK_ORDER,
				[ECO_LAN_DESC] = @P_PRODUCT_DESCRIPTION,
				[ECO_LAN_DESC2] = @P_PRODUCT_SHORT_DESCRIPTION,
				[ECO_LAN_DETAILS] = @P_PRODUCT_SIZE_CHART,
				[ECO_LAN_KEYWORD] = @P_PRODUCT_TAGS
			
			WHERE 
				[ECO_LAN_OBJ_ID] = @P_PRODUCT_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[SupplierAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[SupplierAdd]

	@P_SUPPLIER_ID	int OUTPUT	,
	@P_SUPPLIER_LOGO_IMAGE nvarchar(500),
	@P_SUPPLIER_IS_ENABLED	bit,
	@P_SUPPLIER_PARENT_OBJ_ID int,
	@P_SUPPLIER_PORTAL_ID	int	,
	
	@P_SUPPLIER_NAME NVARCHAR(500),
	@P_SUPPLIER_DESCRIPTION NVARCHAR(500),
	
	@P_SUPPLIER_META_TITLE NVARCHAR(500),
	@P_SUPPLIER_META_DESCRIPTION NVARCHAR(500),
	@P_SUPPLIER_META_KEYWORDS NVARCHAR(500),

	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	INSERT INTO [ECOMMERCE].[SUPPLIER]
		(
		[SUPPLIER_LOGO_IMAGE],
		[SUPPLIER_IS_ENABLED],
		[SUPPLIER_PARENT_OBJ_ID],
		[SUPPLIER_PORTAL_ID]
		)
	VALUES
		(
		@P_SUPPLIER_LOGO_IMAGE,
		@P_SUPPLIER_IS_ENABLED,	
		@P_SUPPLIER_PARENT_OBJ_ID,
		@P_SUPPLIER_PORTAL_ID
		)
		
		set @P_SUPPLIER_ID = SCOPE_IDENTITY()
		
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
				
				[ECO_LAN_NAME],
				[ECO_LAN_DESC],
				[ECO_LAN_NAME2],
				[ECO_LAN_DESC2],
				[ECO_LAN_KEYWORD]			
			)
			VALUES
			(
				@P_SUPPLIER_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				
				@P_SUPPLIER_NAMe ,
				@P_SUPPLIER_DESCRIPTION ,
				
				@P_SUPPLIER_META_TITLE ,
				@P_SUPPLIER_META_DESCRIPTION,
				@P_SUPPLIER_META_KEYWORDS
				
			)
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[SupplierAddOtherLang]...';


GO
CREATE PROCEDURE [ECOMMERCE].[SupplierAddOtherLang]

	@P_SUPPLIER_ID	int ,

	@P_SUPPLIER_NAME NVARCHAR(500),
	@P_SUPPLIER_DESCRIPTION NVARCHAR(500),
	
	@P_SUPPLIER_META_TITLE NVARCHAR(500),
	@P_SUPPLIER_META_DESCRIPTION NVARCHAR(500),
	@P_SUPPLIER_META_KEYWORDS NVARCHAR(500),

	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
		INSERT INTO [ECOMMERCE].[ECOMMERCE_LANGUAGE]
			(
				[ECO_LAN_OBJ_ID],
				[ECO_LAN_MODULE_ID],
				[ECO_LAN_LAN_ID],
				
				[ECO_LAN_NAME],
				[ECO_LAN_DESC],
				[ECO_LAN_NAME2],
				[ECO_LAN_DETAILS],
				[ECO_LAN_KEYWORD]			
			)
			VALUES
			(
				@P_SUPPLIER_ID,
				@P_MODULE_ID,
				@P_ECO_LAN_LAN_ID,
				
				@P_SUPPLIER_NAMe ,
				@P_SUPPLIER_DESCRIPTION ,
				
				@P_SUPPLIER_META_TITLE ,
				@P_SUPPLIER_META_DESCRIPTION,
				@P_SUPPLIER_META_KEYWORDS
				
			)
			
END
GO
PRINT N'Creating [ECOMMERCE].[SupplierDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[SupplierDelete]
	@P_SUPPLIER_ID INT,
	
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;
		
	delete from  [ECOMMERCE].[ECOMMERCE_LANGUAGE]
		WHERE 
				[ECO_LAN_OBJ_ID] = @P_SUPPLIER_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		delete from  [ECOMMERCE].[SUPPLIER]
	where
		[SUPPLIER_ID] = @P_SUPPLIER_ID			
	
	IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction		
END
GO
PRINT N'Creating [ECOMMERCE].[SupplierDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[SupplierDeleteLogical]
	@P_SUPPLIER_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[SUPPLIER] set
		[SUPPLIER_IS_DELETED] = 1
		where
		[SUPPLIER_ID] = @P_SUPPLIER_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[SupplierGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[SupplierGetAll]

	@P_SUPPLIER_PORTAL_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			S.[SUPPLIER_ID],
			S.[SUPPLIER_LOGO_IMAGE],
			S.[SUPPLIER_IS_ENABLED],
			S.[SUPPLIER_PARENT_OBJ_ID],
			S.[SUPPLIER_IS_DELETED],
			S.[SUPPLIER_PORTAL_ID],
			EL.[ECO_LAN_NAME2],
			EL.[ECO_LAN_DESC2],
			EL.[ECO_LAN_DESC],
			EL.[ECO_LAN_KEYWORD],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[SUPPLIER] AS S
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = S.[SUPPLIER_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE S.[SUPPLIER_IS_DELETED]=0 and S.[SUPPLIER_PORTAL_ID] = @P_SUPPLIER_PORTAL_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[SupplierGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[SupplierGetById]

	@P_SUPPLIER_ID int,
	@P_SUPPLIER_PORTAL_ID int,
	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
			S.[SUPPLIER_ID],
			S.[SUPPLIER_LOGO_IMAGE],
			S.[SUPPLIER_IS_ENABLED],
			S.[SUPPLIER_PARENT_OBJ_ID],
			S.[SUPPLIER_IS_DELETED],
			S.[SUPPLIER_PORTAL_ID],
			EL.[ECO_LAN_NAME2],
			EL.[ECO_LAN_DESC2],
			EL.[ECO_LAN_DESC],
			EL.[ECO_LAN_KEYWORD],
			EL.[ECO_LAN_LAN_ID],
			EL.[ECO_LAN_NAME],
			EL.[ECO_LAN_OBJ_ID]
	 FROM  [ECOMMERCE].[SUPPLIER] AS S
			LEFT OUTER JOIN
		   ECOMMERCE.ECOMMERCE_LANGUAGE AS EL
	 ON	
				EL.[ECO_LAN_OBJ_ID] = S.[SUPPLIER_ID]
			AND
				EL.[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				EL.[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
				
		WHERE S.[SUPPLIER_ID]= @P_SUPPLIER_ID and S.[SUPPLIER_PORTAL_ID] = @P_SUPPLIER_PORTAL_ID
	END
GO
PRINT N'Creating [ECOMMERCE].[SupplierUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[SupplierUpdate]

	@P_SUPPLIER_ID	int OUTPUT	,
	
	@P_SUPPLIER_LOGO_IMAGE nvarchar(500),
	@P_SUPPLIER_IS_ENABLED	bit,
	@P_SUPPLIER_PARENT_OBJ_ID int,
	@P_SUPPLIER_PORTAL_ID	int	,
	
	@P_SUPPLIER_NAME NVARCHAR(500),
	@P_SUPPLIER_DESCRIPTION NVARCHAR(500),
	
	@P_SUPPLIER_META_TITLE NVARCHAR(500),
	@P_SUPPLIER_META_DESCRIPTION NVARCHAR(500),
	@P_SUPPLIER_META_KEYWORDS NVARCHAR(500),

	@P_MODULE_ID INT,
	@P_ECO_LAN_LAN_ID INT
    
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @Transaction VARCHAR(100);
	SELECT @Transaction = 'Transaction';

	BEGIN TRANSACTION @Transaction;

	update [ECOMMERCE].[SUPPLIER]
		set
		[SUPPLIER_LOGO_IMAGE] = @P_SUPPLIER_LOGO_IMAGE,
		[SUPPLIER_IS_ENABLED] = @P_SUPPLIER_IS_ENABLED,
		[SUPPLIER_PARENT_OBJ_ID] = @P_SUPPLIER_PARENT_OBJ_ID,
		[SUPPLIER_PORTAL_ID] = @P_SUPPLIER_PORTAL_ID
	
	where SUPPLIER_ID = @P_SUPPLIER_ID
		
		update  [ECOMMERCE].[ECOMMERCE_LANGUAGE]
		set 
				[ECO_LAN_NAME] = @P_SUPPLIER_NAME,
				[ECO_LAN_DESC] = @P_SUPPLIER_DESCRIPTION,
				[ECO_LAN_NAME2] = @P_SUPPLIER_META_TITLE,
				[ECO_LAN_DESC2] = @P_SUPPLIER_META_DESCRIPTION,
				[ECO_LAN_KEYWORD] = @P_SUPPLIER_META_KEYWORDS			
			
			where 
				[ECO_LAN_OBJ_ID] = @P_SUPPLIER_ID
			AND
				[ECO_LAN_MODULE_ID] = @P_MODULE_ID
			AND
				[ECO_LAN_LAN_ID] = @P_ECO_LAN_LAN_ID
			
			IF @@ERROR != 0
            BEGIN 
                  ROLLBACK TRANSACTION
                  RETURN
            END

			COMMIT TRANSACTION @Transaction

			
END
GO
PRINT N'Creating [ECOMMERCE].[TaxAdd]...';


GO
CREATE PROCEDURE [ECOMMERCE].[TaxAdd]

		@P_TAX_ID	int	output,
		@P_TAX_RATE	decimal(9,2),
		@P_TAX_IS_ENABLED	bit,	
		@P_TAX_PORTAL_ID	int
    
AS
BEGIN
	SET NOCOUNT ON;
	
	INSERT INTO [ECOMMERCE].[TAX]
		(
		[TAX_RATE],
		[TAX_IS_ENABLED],
		[TAX_PORTAL_ID]
		)
	VALUES
		(
		@P_TAX_RATE,
		@P_TAX_IS_ENABLED,	
		@P_TAX_PORTAL_ID
		)
		set @P_TAX_ID = SCOPE_IDENTITY()
		
END
GO
PRINT N'Creating [ECOMMERCE].[TaxDelete]...';


GO
CREATE PROCEDURE [ECOMMERCE].[TaxDelete]

	@P_TAX_ID	int	
AS
BEGIN
	SET NOCOUNT ON;
	
	delete from  [ECOMMERCE].[TAX]
		
		where 
			TAX_ID = @P_TAX_ID
		
END
GO
PRINT N'Creating [ECOMMERCE].[TaxDeleteLogical]...';


GO
CREATE PROCEDURE [ECOMMERCE].[TaxDeleteLogical]
	@P_Tax_ID int
	
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[Tax] set
		[Tax_IS_DELETED] = 1
		where
		[Tax_ID] = @P_Tax_ID
		
		END
GO
PRINT N'Creating [ECOMMERCE].[TaxGetAll]...';


GO
CREATE PROCEDURE [ECOMMERCE].[TaxGetAll]

    @P_TAX_PORTAL_ID int
AS
BEGIN
	SET NOCOUNT ON;
	
	select 
	
		[TAX_ID],
		[TAX_RATE] ,
		[TAX_IS_ENABLED],
		[TAX_PORTAL_ID],
		[TAX_IS_DELETED]  
		
		from 
	 [ECOMMERCE].[TAX]
	 where [TAX_IS_DELETED] =  0 and [TAX_PORTAL_ID] = @P_TAX_PORTAL_ID	
		
			
		
END
GO
PRINT N'Creating [ECOMMERCE].[TaxGetById]...';


GO
CREATE PROCEDURE [ECOMMERCE].[TaxGetById]

   @P_TAX_ID int ,
   @P_TAX_PORTAL_ID	int
AS
BEGIN
	SET NOCOUNT ON;
	
	select 
	
		[TAX_ID],
		[TAX_RATE] ,
		[TAX_IS_ENABLED],
		[TAX_PORTAL_ID],
		[TAX_IS_DELETED]  
		
		from 
	 [ECOMMERCE].[TAX]
	 where [TAX_ID] =  @P_TAX_ID and [TAX_PORTAL_ID] = @P_TAX_PORTAL_ID	
		
			
		
END
GO
PRINT N'Creating [ECOMMERCE].[TaxUpdate]...';


GO
CREATE PROCEDURE [ECOMMERCE].[TaxUpdate]

		@P_TAX_ID	int	,
		@P_TAX_RATE	decimal(9,2),
		@P_TAX_IS_ENABLED	bit,	
		@P_TAX_PORTAL_ID	int
    
AS
BEGIN
	SET NOCOUNT ON;
	
	update  [ECOMMERCE].[TAX]
		set
		[TAX_RATE] = @P_TAX_RATE,
		[TAX_IS_ENABLED] = @P_TAX_IS_ENABLED,
		[TAX_PORTAL_ID] = @P_TAX_PORTAL_ID
		
		where 
			TAX_ID = @P_TAX_ID
		
END
GO
PRINT N'Creating [GALLERY].[GalleryAdd]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryAdd]
	@P_GALLERY_ID int output,
    @P_GALLERY_NAME nvarchar(500),
    @P_GALLERY_DESCRIPTION nvarchar(1000),
    @P_GALLERY_SUMMARY nvarchar(1000),
	@P_GALLERY_KEYWORDS nvarchar(1000),
	@P_GALLERY_SEO_NAME nvarchar(1000),
	@P_GALLERY_DETAILS ntext,
    @P_GALLERY_URL nvarchar(1000),
	@P_GALLERY_FILE nvarchar(500),	
	@P_GALLERY_CATEGORY_ID int,
	@P_GALLERY_CREATION_DAY int,
	@P_GALLERY_CREATION_SEC int,
	@P_GALLERY_IS_DELETED bit,
	@P_GALLERY_PORTAL_ID int,
	@P_GALLERY_LANGUAGE_ID int,
	@P_GALLERY_TYPE int,
	@P_GALLERY_ITEM_TYPE int,
	@P_GALLERY_ORDER int,
	@P_GALLERY_CREATED_BY int,
	@P_GALLERY_PARENT_OBJ_ID int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [GALLERY].[GALLERY]
		(
		[GALLERY_NAME]
		,[GALLERY_DESCRIPTION]
		,[GALLERY_KEYWORDS]
		,[GALLERY_SEO_NAME]
		,[GALLERY_DETAILS]
		,[GALLERY_URL]
		,[GALLERY_FILE]
		,[GALLERY_SUMMARY]
		,[GALLERY_CATEGORY_ID]
		,[GALLERY_CREATION_DAY]
		,[GALLERY_CREATION_SEC]
		,[GALLERY_IS_DELETED]
		,[GALLERY_PORTAL_ID]
		,[GALLERY_LANGUAGE_ID]
		,[GALLERY_TYPE]
		,[GALLERY_ITEM_TYPE]
		,[GALLERY_ORDER]
		,[GALLERY_CREATED_BY]
		,[GALLERY_PARENT_OBJ_ID]
		)
	VALUES
		(
		@P_GALLERY_NAME,
		@P_GALLERY_DESCRIPTION,
		@P_GALLERY_KEYWORDS,
		@P_GALLERY_SEO_NAME,
		@P_GALLERY_DETAILS,
		@P_GALLERY_URL,
		@P_GALLERY_FILE,
		@P_GALLERY_SUMMARY,
		@P_GALLERY_CATEGORY_ID,
		@P_GALLERY_CREATION_DAY,
		@P_GALLERY_CREATION_SEC,
		@P_GALLERY_IS_DELETED,
		@P_GALLERY_PORTAL_ID,
		@P_GALLERY_LANGUAGE_ID,
		@P_GALLERY_TYPE,
		@P_GALLERY_ITEM_TYPE,
		@P_GALLERY_ORDER,
		@P_GALLERY_CREATED_BY,
		@P_GALLERY_PARENT_OBJ_ID
		)
		
		set @P_GALLERY_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [GALLERY].[GalleryDelete]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryDelete]
	@P_GALLERY_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [GALLERY].[GALLERY] 
		Where 
		GALLERY_ID=@P_GALLERY_ID
		or
		GALLERY_PARENT_OBJ_ID = @P_GALLERY_ID
END
GO
PRINT N'Creating [GALLERY].[GalleryDeleteLogical]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryDeleteLogical]
	@P_GALLERY_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [GALLERY].[GALLERY] set
	[GALLERY_IS_DELETED]=1
	Where 
	GALLERY_ID=@P_GALLERY_ID
	or
	GALLERY_PARENT_OBJ_ID = @P_GALLERY_ID
END
GO
PRINT N'Creating [GALLERY].[GalleryGetAll]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryGetAll]
@P_PUBLISH_MODULE_ID INT
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	G.[GALLERY_ID],
	G.[GALLERY_NAME],
	G.[GALLERY_DESCRIPTION],
	G.[GALLERY_KEYWORDS],
	G.[GALLERY_SEO_NAME],
	G.[GALLERY_DETAILS],
	G.[GALLERY_URL],
	G.[GALLERY_FILE],
	G.[GALLERY_SUMMARY],
	G.[GALLERY_CATEGORY_ID],
	G.[GALLERY_CREATION_DAY],
	G.[GALLERY_CREATION_SEC],
	G.[GALLERY_IS_DELETED],
	G.[GALLERY_PORTAL_ID],
	G.[GALLERY_LANGUAGE_ID],
	G.[GALLERY_TYPE],
	G.[GALLERY_ITEM_TYPE],
	G.[GALLERY_ORDER],
	G.[GALLERY_CREATED_BY],
	G.[GALLERY_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [GALLERY].[GALLERY] AS G
	LEFT OUTER JOIN
	[SETUP].[PUBLISH] AS P
	ON
	G.[GALLERY_LANGUAGE_ID]= P.[PUBLISH_LANGUAGE_ID]
	AND
	G.[GALLERY_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
	AND
	G.[GALLERY_ID] = P.[PUBLISH_OBJECT_ID]
	AND
	P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
	
 where [GALLERY_IS_DELETED] = 0
 order by [GALLERY_ORDER],[GALLERY_CREATION_DAY],[GALLERY_CREATION_SEC],[GALLERY_ID]
END
GO
PRINT N'Creating [GALLERY].[GalleryGetByCategory]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryGetByCategory]
	@P_GALLERY_CATEGORY_ID int,
	@P_GALLERY_TYPE int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	G.[GALLERY_ID],
	G.[GALLERY_NAME],
	G.[GALLERY_DESCRIPTION],
	G.[GALLERY_KEYWORDS],
	G.[GALLERY_SEO_NAME],
	G.[GALLERY_DETAILS],
	G.[GALLERY_URL],
	G.[GALLERY_FILE],
	G.[GALLERY_SUMMARY],
	G.[GALLERY_CATEGORY_ID],
	G.[GALLERY_CREATION_DAY],
	G.[GALLERY_CREATION_SEC],
	G.[GALLERY_IS_DELETED],
	G.[GALLERY_PORTAL_ID],
	G.[GALLERY_LANGUAGE_ID],
	G.[GALLERY_TYPE],
	G.[GALLERY_ITEM_TYPE],
	G.[GALLERY_ORDER],
	G.[GALLERY_CREATED_BY],
	G.[GALLERY_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
	from [GALLERY].[GALLERY] AS G
	LEFT OUTER JOIN
	[SETUP].[PUBLISH] AS P
	ON
	G.[GALLERY_LANGUAGE_ID]= P.[PUBLISH_LANGUAGE_ID]
	AND
	G.[GALLERY_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
	AND
	G.[GALLERY_ID] = P.[PUBLISH_OBJECT_ID]
	AND
	P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID	
	where
	[GALLERY_CATEGORY_ID] = @P_GALLERY_CATEGORY_ID
	and
	[GALLERY_TYPE] = @P_GALLERY_TYPE
	and
	[GALLERY_IS_DELETED] = 0
	order by [GALLERY_ORDER],[GALLERY_CREATION_DAY],[GALLERY_CREATION_SEC],[GALLERY_ID]
END
GO
PRINT N'Creating [GALLERY].[GalleryGetByCategoryXML]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryGetByCategoryXML]
	@P_GALLERY_CATEGORY_ID int,
	@P_GALLERY_TYPE int,
	@P_ROW_FROM int,
	@P_ROW_TO int,
	@P_TOTAL_COUNT int output,
	@P_PUBLISH_MODULE_ID int,
	@P_PUBLISH_TYPE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	
	Select @P_TOTAL_COUNT = Count(1) from 
			[GALLERY].[GALLERY]
			INNER JOIN
			[SETUP].[PUBLISH]
			ON 
				[GALLERY_ID] = [PUBLISH_OBJECT_ID]
				AND	
				[GALLERY_PORTAL_ID] = [PUBLISH_PORTAL_ID]
				AND
				[GALLERY_LANGUAGE_ID] = [PUBLISH_LANGUAGE_ID] 
				AND
				[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
				AND
				[PUBLISH_TYPE_ID] = @P_PUBLISH_TYPE_ID
			where
				[GALLERY_CATEGORY_ID] = @P_GALLERY_CATEGORY_ID
				AND
				[GALLERY_TYPE] = @P_GALLERY_TYPE
				AND
				[GALLERY_IS_DELETED] = 0
			
	Select 
		[GALLERY_ID],
		[GALLERY_NAME],
		[GALLERY_DESCRIPTION],
		[GALLERY_KEYWORDS],
		[GALLERY_SEO_NAME],
		[GALLERY_URL],
		[GALLERY_FILE],
		[GALLERY_SUMMARY],
		[GALLERY_CATEGORY_ID],
		[GALLERY_CREATION_DAY],
		[GALLERY_CREATION_SEC],
		[GALLERY_IS_DELETED],
		[GALLERY_PORTAL_ID],
		[GALLERY_LANGUAGE_ID],
		[GALLERY_TYPE],
		[GALLERY_ITEM_TYPE],
		[GALLERY_ORDER],
		[GALLERY_CREATED_BY],
		[GALLERY_PARENT_OBJ_ID]
	From
	(
		Select 
			[GALLERY_ID],
			[GALLERY_NAME],
			[GALLERY_DESCRIPTION],
			[GALLERY_KEYWORDS],
			[GALLERY_SEO_NAME],
			[GALLERY_URL],
			[GALLERY_FILE],
			[GALLERY_SUMMARY],
			[GALLERY_CATEGORY_ID],
			[GALLERY_CREATION_DAY],
			[GALLERY_CREATION_SEC],
			[GALLERY_IS_DELETED],
			[GALLERY_PORTAL_ID],
			[GALLERY_LANGUAGE_ID],
			[GALLERY_TYPE],
			[GALLERY_ITEM_TYPE],
			[GALLERY_ORDER],
			[GALLERY_CREATED_BY],
			[GALLERY_PARENT_OBJ_ID],
			Row_Number() over(order by [GALLERY_ORDER],[GALLERY_CREATION_DAY] DESC,[GALLERY_CREATION_SEC] DESC) As [RowNumber]
		 From
			[GALLERY].[GALLERY]
			INNER JOIN
			[SETUP].[PUBLISH]
			ON 
				[GALLERY_ID] = [PUBLISH_OBJECT_ID]
				AND	
				[GALLERY_PORTAL_ID] = [PUBLISH_PORTAL_ID]
				AND
				[GALLERY_LANGUAGE_ID] = [PUBLISH_LANGUAGE_ID] 
				AND
				[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
				AND
				[PUBLISH_TYPE_ID] = @P_PUBLISH_TYPE_ID
			where
				[GALLERY_CATEGORY_ID] = @P_GALLERY_CATEGORY_ID
				AND
				[GALLERY_TYPE] = @P_GALLERY_TYPE
				AND
				[GALLERY_IS_DELETED] = 0
	) As Item
	Where [RowNumber] Between @P_ROW_FROM AND @P_ROW_TO
	
	For XML AUTO,TYPE,ROOT('Parent')
END
GO
PRINT N'Creating [GALLERY].[GalleryGetByID]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryGetByID]
	@P_GALLERY_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	G.[GALLERY_ID],
	G.[GALLERY_NAME],
	G.[GALLERY_DESCRIPTION],
	G.[GALLERY_KEYWORDS],
	G.[GALLERY_SEO_NAME],
	G.[GALLERY_DETAILS],
	G.[GALLERY_URL],
	G.[GALLERY_FILE],
	G.[GALLERY_SUMMARY],
	G.[GALLERY_CATEGORY_ID],
	G.[GALLERY_CREATION_DAY],
	G.[GALLERY_CREATION_SEC],
	G.[GALLERY_IS_DELETED],
	G.[GALLERY_PORTAL_ID],
	G.[GALLERY_LANGUAGE_ID],
	G.[GALLERY_TYPE],
	G.[GALLERY_ITEM_TYPE],
	G.[GALLERY_ORDER],
	G.[GALLERY_CREATED_BY],
	G.[GALLERY_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [GALLERY].[GALLERY] AS G
	LEFT OUTER JOIN
	[SETUP].[PUBLISH] AS P
	ON
	G.[GALLERY_LANGUAGE_ID]= P.[PUBLISH_LANGUAGE_ID]
	AND
	G.[GALLERY_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
	AND
	G.[GALLERY_ID] = P.[PUBLISH_OBJECT_ID]
	AND
	P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
		Where [GALLERY_ID] = @P_GALLERY_ID
		and
		[GALLERY_IS_DELETED] = 0
		order by [GALLERY_ORDER]
END
GO
PRINT N'Creating [GALLERY].[GalleryGetByParentObjIdAndLanguageID]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryGetByParentObjIdAndLanguageID]
	@P_GALLERY_PARENT_OBJ_ID int,
	@P_GALLERY_LANGUAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	G.[GALLERY_ID],
	G.[GALLERY_NAME],
	G.[GALLERY_DESCRIPTION],
	G.[GALLERY_KEYWORDS],
	G.[GALLERY_SEO_NAME],
	G.[GALLERY_DETAILS],
	G.[GALLERY_URL],
	G.[GALLERY_FILE],
	G.[GALLERY_SUMMARY],
	G.[GALLERY_CATEGORY_ID],
	G.[GALLERY_CREATION_DAY],
	G.[GALLERY_CREATION_SEC],
	G.[GALLERY_IS_DELETED],
	G.[GALLERY_PORTAL_ID],
	G.[GALLERY_LANGUAGE_ID],
	G.[GALLERY_TYPE],
	G.[GALLERY_ITEM_TYPE],
	G.[GALLERY_ORDER],
	G.[GALLERY_CREATED_BY],
	G.[GALLERY_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [GALLERY].[GALLERY] AS G
	LEFT OUTER JOIN
	[SETUP].[PUBLISH] AS P
	ON
	G.[GALLERY_LANGUAGE_ID]= P.[PUBLISH_LANGUAGE_ID]
	AND
	G.[GALLERY_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
	AND
	G.[GALLERY_ID] = P.[PUBLISH_OBJECT_ID]
	AND
	P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
		Where [GALLERY_PARENT_OBJ_ID] = @P_GALLERY_PARENT_OBJ_ID
		and
			  [GALLERY_LANGUAGE_ID] = @P_GALLERY_LANGUAGE_ID
		and
			  [GALLERY_IS_DELETED] = 0
		order by [GALLERY_ORDER]
END
GO
PRINT N'Creating [GALLERY].[GalleryGetByPortalLanguage]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryGetByPortalLanguage]
	@P_GALLERY_PORTAL_ID int,
	@P_GALLERY_LANGUAGE_ID int,
	@P_GALLERY_TYPE int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	G.[GALLERY_ID],
	G.[GALLERY_NAME],
	G.[GALLERY_DESCRIPTION],
	G.[GALLERY_KEYWORDS],
	G.[GALLERY_SEO_NAME],
	G.[GALLERY_DETAILS],
	G.[GALLERY_URL],
	G.[GALLERY_FILE],
	G.[GALLERY_SUMMARY],
	G.[GALLERY_CATEGORY_ID],
	G.[GALLERY_CREATION_DAY],
	G.[GALLERY_CREATION_SEC],
	G.[GALLERY_IS_DELETED],
	G.[GALLERY_PORTAL_ID],
	G.[GALLERY_LANGUAGE_ID],
	G.[GALLERY_TYPE],
	G.[GALLERY_ITEM_TYPE],
	G.[GALLERY_ORDER],
	G.[GALLERY_CREATED_BY],
	G.[GALLERY_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [GALLERY].[GALLERY] AS G
	LEFT OUTER JOIN
	[SETUP].[PUBLISH] AS P
	ON
	G.[GALLERY_LANGUAGE_ID]= P.[PUBLISH_LANGUAGE_ID]
	AND
	G.[GALLERY_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
	AND
	G.[GALLERY_ID] = P.[PUBLISH_OBJECT_ID]
	AND
	P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
	where 
	[GALLERY_PORTAL_ID] = @P_GALLERY_PORTAL_ID
	and
	[GALLERY_LANGUAGE_ID] = @P_GALLERY_LANGUAGE_ID
	and
	[GALLERY_TYPE] = @P_GALLERY_TYPE
	and
	[GALLERY_IS_DELETED] = 0
	order by [GALLERY_ORDER],[GALLERY_CREATION_DAY],[GALLERY_CREATION_SEC],[GALLERY_ID]
END
GO
PRINT N'Creating [GALLERY].[GalleryGetParentObjByCategory]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryGetParentObjByCategory]
	@P_GALLERY_CATEGORY_ID int,
	@P_GALLERY_TYPE int,
	@P_PUBLISH_MODULE_ID int	
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	G.[GALLERY_ID],
	G.[GALLERY_NAME],
	G.[GALLERY_DESCRIPTION],
	G.[GALLERY_KEYWORDS],
	G.[GALLERY_SEO_NAME],
	G.[GALLERY_DETAILS],
	G.[GALLERY_URL],
	G.[GALLERY_FILE],
	G.[GALLERY_SUMMARY],
	G.[GALLERY_CATEGORY_ID],
	G.[GALLERY_CREATION_DAY],
	G.[GALLERY_CREATION_SEC],
	G.[GALLERY_IS_DELETED],
	G.[GALLERY_PORTAL_ID],
	G.[GALLERY_LANGUAGE_ID],
	G.[GALLERY_TYPE],
	G.[GALLERY_ITEM_TYPE],
	G.[GALLERY_ORDER],
	G.[GALLERY_CREATED_BY],
	G.[GALLERY_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [GALLERY].[GALLERY] AS G
	LEFT OUTER JOIN
	[SETUP].[PUBLISH] AS P
	ON
	G.[GALLERY_LANGUAGE_ID]= P.[PUBLISH_LANGUAGE_ID]
	AND
	G.[GALLERY_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
	AND
	G.[GALLERY_ID] = P.[PUBLISH_OBJECT_ID]
	AND
	P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
	where
	[GALLERY_CATEGORY_ID] = @P_GALLERY_CATEGORY_ID
	and
	[GALLERY_TYPE] = @P_GALLERY_TYPE
	and
	[GALLERY_PARENT_OBJ_ID] = 0
	and
	[GALLERY_IS_DELETED] = 0
	order by [GALLERY_ORDER],[GALLERY_CREATION_DAY],[GALLERY_CREATION_SEC],[GALLERY_ID]
END
GO
PRINT N'Creating [GALLERY].[GalleryUpdate]...';


GO
CREATE PROCEDURE [GALLERY].[GalleryUpdate]
	@P_GALLERY_ID int,
    @P_GALLERY_NAME nvarchar(500),
    @P_GALLERY_DESCRIPTION nvarchar(1000),
	@P_GALLERY_KEYWORDS nvarchar(1000),
	@P_GALLERY_SEO_NAME nvarchar(1000),
	@P_GALLERY_DETAILS ntext,
    @P_GALLERY_URL nvarchar(1000),
	@P_GALLERY_FILE nvarchar(500),
	@P_GALLERY_SUMMARY nvarchar(1000),
	@P_GALLERY_CATEGORY_ID int,
	@P_GALLERY_CREATION_DAY int,
	@P_GALLERY_CREATION_SEC int,
	@P_GALLERY_IS_DELETED bit,
	@P_GALLERY_PORTAL_ID int,
	@P_GALLERY_LANGUAGE_ID int,
	@P_GALLERY_TYPE int,
	@P_GALLERY_ITEM_TYPE int,
	@P_GALLERY_ORDER int,
	@P_GALLERY_CREATED_BY int,
	@P_GALLERY_PARENT_OBJ_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [GALLERY].[GALLERY] SET
		[GALLERY_NAME] = @P_GALLERY_NAME
		,[GALLERY_DESCRIPTION] = @P_GALLERY_DESCRIPTION
		,[GALLERY_KEYWORDS] = @P_GALLERY_KEYWORDS
		,[GALLERY_SEO_NAME] = @P_GALLERY_SEO_NAME
		,[GALLERY_DETAILS] = @P_GALLERY_DETAILS
		,[GALLERY_URL] = @P_GALLERY_URL
		,[GALLERY_FILE] = @P_GALLERY_FILE
		,[GALLERY_SUMMARY] = @P_GALLERY_SUMMARY
		,[GALLERY_CATEGORY_ID] = @P_GALLERY_CATEGORY_ID
		,[GALLERY_CREATION_DAY] = @P_GALLERY_CREATION_DAY
		,[GALLERY_CREATION_SEC] = @P_GALLERY_CREATION_SEC
		,[GALLERY_IS_DELETED] = @P_GALLERY_IS_DELETED
		,[GALLERY_PORTAL_ID] = @P_GALLERY_PORTAL_ID
		,[GALLERY_LANGUAGE_ID] = @P_GALLERY_LANGUAGE_ID
		,[GALLERY_TYPE] = @P_GALLERY_TYPE
		,[GALLERY_ITEM_TYPE] = @P_GALLERY_ITEM_TYPE
		,[GALLERY_ORDER] = @P_GALLERY_ORDER
		,[GALLERY_CREATED_BY] = @P_GALLERY_CREATED_BY
		,[GALLERY_PARENT_OBJ_ID] = @P_GALLERY_PARENT_OBJ_ID
		Where GALLERY_ID = @P_GALLERY_ID
END
GO
PRINT N'Creating [SECURITY].[FormAdd]...';


GO
CREATE PROCEDURE [SECURITY].[FormAdd]
	@P_FORM_ID int output,
	@P_FORM_NAME nvarchar(1024),
	@P_FORM_DESCRIPTION nvarchar(1024),
	@P_FORM_URL nvarchar(max),
	@P_FORM_CODE nvarchar(1024),
	@P_FORM_MODULE_ID int,
	@P_FORM_IS_DELETED bit
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SECURITY].[FORM]
		(
		[FORM_NAME]
		,[FORM_DESCRIPTION]
		,[FORM_URL]
		,[FORM_CODE]
		,[FORM_MODULE_ID]
		,[FORM_IS_DELETED]
		)
	VALUES
		(
		@P_FORM_NAME
		,@P_FORM_DESCRIPTION
		,@P_FORM_URL
		,@P_FORM_CODE
		,@P_FORM_MODULE_ID
		,@P_FORM_IS_DELETED
		)
		
		set @P_FORM_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SECURITY].[FormDelete]...';


GO
CREATE PROCEDURE [SECURITY].[FormDelete]
	@P_FORM_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SECURITY].[FORM]
		Where [FORM_ID] = @P_FORM_ID
END
GO
PRINT N'Creating [SECURITY].[FormDeleteLogical]...';


GO
CREATE PROCEDURE [SECURITY].[FormDeleteLogical]
	@P_FORM_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SECURITY].[FORM] set
	[FORM_IS_DELETED] = 1
	Where [FORM_ID] = @P_FORM_ID
END
GO
PRINT N'Creating [SECURITY].[FormGetAll]...';


GO
CREATE PROCEDURE [SECURITY].[FormGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
		[FORM_ID]
		,[FORM_NAME]
		,[FORM_DESCRIPTION]
		,[FORM_URL]
		,[FORM_CODE]
		,[FORM_MODULE_ID]
		,[FORM_IS_DELETED]
 from [SECURITY].[FORM]
 where [FORM_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[FormGetByCode]...';


GO
CREATE PROCEDURE [SECURITY].[FormGetByCode]
	@P_FORM_CODE nvarchar(1024)
AS
BEGIN
	SET NOCOUNT ON;
	Select 
		[FORM_ID]
		,[FORM_NAME]
		,[FORM_DESCRIPTION]
		,[FORM_URL]
		,[FORM_CODE]
		,[FORM_MODULE_ID]
		,[FORM_IS_DELETED]
 from [SECURITY].[FORM]
 where 
 [FORM_IS_DELETED] = 0
 And
 [FORM_CODE] = @P_FORM_CODE
END
GO
PRINT N'Creating [SECURITY].[FormGetByID]...';


GO
CREATE PROCEDURE [SECURITY].[FormGetByID]
	@P_FORM_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
		[FORM_ID]
		,[FORM_NAME]
		,[FORM_DESCRIPTION]
		,[FORM_URL]
		,[FORM_CODE]
		,[FORM_MODULE_ID]
		,[FORM_IS_DELETED]
 from [SECURITY].[FORM]
 where 
 [FORM_IS_DELETED] = 0
 And
 [FORM_ID] = @P_FORM_ID
END
GO
PRINT N'Creating [SECURITY].[FormRoleAdd]...';


GO
CREATE PROCEDURE [SECURITY].[FormRoleAdd]
	@P_FORM_ROLE_ID int output,
	@P_FORM_ROLE_FORM_ID int,
	@P_FORM_ROLE_ROLE_ID int,
	@P_FORM_ROLE_ACCESS_TYPE int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SECURITY].[FORM_ROLE]
		(
		[FORM_ROLE_FORM_ID]
		,[FORM_ROLE_ROLE_ID]
		,[FORM_ROLE_ACCESS_TYPE]
		)
	VALUES
		(
		@P_FORM_ROLE_FORM_ID
		,@P_FORM_ROLE_ROLE_ID
		,@P_FORM_ROLE_ACCESS_TYPE
		)
		
		set @P_FORM_ROLE_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SECURITY].[FormRoleDelete]...';


GO
CREATE PROCEDURE [SECURITY].[FormRoleDelete]
	@P_FORM_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	DELETE FROM [SECURITY].[FORM_ROLE]
	where
		[FORM_ROLE_ID] = @P_FORM_ROLE_ID
END
GO
PRINT N'Creating [SECURITY].[FormRoleDeleteByFormRole]...';


GO
CREATE PROCEDURE [SECURITY].[FormRoleDeleteByFormRole]
	@P_FORM_ROLE_FORM_ID int,
	@P_FORM_ROLE_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	DELETE FROM [SECURITY].[FORM_ROLE]
	where
		(@P_FORM_ROLE_FORM_ID = -1 or [FORM_ROLE_FORM_ID] = @P_FORM_ROLE_FORM_ID)
		and
		(@P_FORM_ROLE_ROLE_ID = -1 or [FORM_ROLE_ROLE_ID] = @P_FORM_ROLE_ROLE_ID)
END
GO
PRINT N'Creating [SECURITY].[FormRoleGetByFormRole]...';


GO
CREATE PROCEDURE [SECURITY].[FormRoleGetByFormRole]
	@P_FORM_ROLE_FORM_ID int,
	@P_FORM_ROLE_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		fr.[FORM_ROLE_ID]
		,fr.[FORM_ROLE_FORM_ID]
		,fr.[FORM_ROLE_ROLE_ID]
		,fr.[FORM_ROLE_ACCESS_TYPE]
		,f.[FORM_CODE]
		,r.[ROLE_NAME]
	FROM
	[SECURITY].[FORM_ROLE] fr
	INNER JOIN
	[SECURITY].[FORM] f
	on
	fr.FORM_ROLE_FORM_ID = f.[FORM_ID]
	INNER JOIN
	[SECURITY].[ROLE] r
	on
	fr.FORM_ROLE_ROLE_ID = r.[ROLE_ID]
	where
	(@P_FORM_ROLE_FORM_ID = -1 or fr.[FORM_ROLE_FORM_ID] = @P_FORM_ROLE_FORM_ID)
	and
	(@P_FORM_ROLE_ROLE_ID = -1 or fr.[FORM_ROLE_ROLE_ID] = @P_FORM_ROLE_ROLE_ID)
	and
	f.[FORM_IS_DELETED] = 0
	and
	r.[ROLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[FormRoleGetByID]...';


GO
CREATE PROCEDURE [SECURITY].[FormRoleGetByID]
	@P_FORM_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		fr.[FORM_ROLE_ID]
		,fr.[FORM_ROLE_FORM_ID]
		,fr.[FORM_ROLE_ROLE_ID]
		,fr.[FORM_ROLE_ACCESS_TYPE]
		,f.[FORM_CODE]
		,r.[ROLE_NAME]
	FROM
	[SECURITY].[FORM_ROLE] fr
	INNER JOIN
	[SECURITY].[FORM] f
	on
	fr.FORM_ROLE_FORM_ID = f.[FORM_ID]
	INNER JOIN
	[SECURITY].[ROLE] r
	on
	fr.FORM_ROLE_ROLE_ID = r.[ROLE_ID]
	where
	fr.[FORM_ROLE_ID] = @P_FORM_ROLE_ID
	and
	f.[FORM_IS_DELETED] = 0
	and
	r.[ROLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[FormRoleGetByUser]...';


GO
CREATE PROCEDURE [SECURITY].[FormRoleGetByUser]
	@P_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		fr.[FORM_ROLE_ID]
		,fr.[FORM_ROLE_FORM_ID]
		,fr.[FORM_ROLE_ROLE_ID]
		,fr.[FORM_ROLE_ACCESS_TYPE]
		,f.[FORM_CODE]
		,r.[ROLE_NAME]
	FROM
	[SECURITY].[FORM_ROLE] fr
	INNER JOIN
	[SECURITY].[FORM] f
	on
	fr.[FORM_ROLE_FORM_ID] = f.[FORM_ID]
	INNER JOIN
	[SECURITY].[ROLE] r
	on
	fr.[FORM_ROLE_ROLE_ID] = r.[ROLE_ID]
	Inner Join
	[SECURITY].[ROLE_USER] ru
	on
	r.[ROLE_ID] = ru.[ROLE_USER_ROLE_ID]
	where
	ru.[ROLE_USER_USER_ID] = @P_USER_ID
	and
	f.[FORM_IS_DELETED] = 0
	and
	r.[ROLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[FormRoleUpdate]...';


GO
CREATE PROCEDURE [SECURITY].[FormRoleUpdate]
	@P_FORM_ROLE_ID int,
	@P_FORM_ROLE_FORM_ID int,
	@P_FORM_ROLE_ROLE_ID int,
	@P_FORM_ROLE_ACCESS_TYPE int
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE [SECURITY].[FORM_ROLE] SET
		[FORM_ROLE_FORM_ID] = @P_FORM_ROLE_FORM_ID
		,[FORM_ROLE_ROLE_ID] = @P_FORM_ROLE_ROLE_ID
		,[FORM_ROLE_ACCESS_TYPE] = @P_FORM_ROLE_ACCESS_TYPE
	where
		[FORM_ROLE_ID] = @P_FORM_ROLE_ID
END
GO
PRINT N'Creating [SECURITY].[FormUpdate]...';


GO
CREATE PROCEDURE [SECURITY].[FormUpdate]
	@P_FORM_ID int,
	@P_FORM_NAME nvarchar(1024),
	@P_FORM_DESCRIPTION nvarchar(1024),
	@P_FORM_URL nvarchar(max),
	@P_FORM_CODE nvarchar(1024),
	@P_FORM_MODULE_ID int,
	@P_FORM_IS_DELETED bit
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE [SECURITY].[FORM] SET
		[FORM_NAME] = @P_FORM_NAME
		,[FORM_DESCRIPTION] = @P_FORM_DESCRIPTION
		,[FORM_URL] = @P_FORM_URL
		,[FORM_CODE] = @P_FORM_CODE
		,[FORM_MODULE_ID] = @P_FORM_MODULE_ID
		,[FORM_IS_DELETED] = @P_FORM_IS_DELETED
	
	where [FORM_ID] = @P_FORM_ID
END
GO
PRINT N'Creating [SECURITY].[FormUserAdd]...';


GO
CREATE PROCEDURE [SECURITY].[FormUserAdd]
	@P_FORM_USER_ID int output,
	@P_FORM_USER_FORM_ID int,
	@P_FORM_USER_USER_ID int,
	@P_FORM_USER_ACCESS_TYPE int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SECURITY].[FORM_USER]
		(
		[FORM_USER_FORM_ID]
		,[FORM_USER_USER_ID]
		,[FORM_USER_ACCESS_TYPE]
		)
	VALUES
		(
		@P_FORM_USER_FORM_ID
		,@P_FORM_USER_USER_ID
		,@P_FORM_USER_ACCESS_TYPE
		)
		
		set @P_FORM_USER_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SECURITY].[FormUserDelete]...';


GO
CREATE PROCEDURE [SECURITY].[FormUserDelete]
	@P_FORM_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	DELETE FROM [SECURITY].[FORM_USER]
	where
		[FORM_USER_ID] = @P_FORM_USER_ID
END
GO
PRINT N'Creating [SECURITY].[FormUserDeleteByFormUser]...';


GO
CREATE PROCEDURE [SECURITY].[FormUserDeleteByFormUser]
	@P_FORM_USER_FORM_ID int,
	@P_FORM_USER_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	DELETE FROM [SECURITY].[FORM_USER]
	where
		(@P_FORM_USER_FORM_ID = -1 or [FORM_USER_FORM_ID] = @P_FORM_USER_FORM_ID)
		and
		(@P_FORM_USER_USER_ID = -1 or [FORM_USER_USER_ID] = @P_FORM_USER_USER_ID)
END
GO
PRINT N'Creating [SECURITY].[FormUserGetByFormUser]...';


GO
CREATE PROCEDURE [SECURITY].[FormUserGetByFormUser]
	@P_FORM_USER_FORM_ID int,
	@P_FORM_USER_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		fu.[FORM_USER_ID]
		,fu.[FORM_USER_FORM_ID]
		,fu.[FORM_USER_USER_ID]
		,fu.[FORM_USER_ACCESS_TYPE]
		,f.[FORM_CODE]
		,u.[USER_NAME]
	FROM
	[SECURITY].[FORM_USER] fu
	INNER JOIN
	[SECURITY].[FORM] f
	on
	fu.FORM_USER_FORM_ID = f.[FORM_ID]
	INNER JOIN
	[SECURITY].[USER] u
	on
	fu.FORM_USER_USER_ID = u.[USER_ID]
	where
	(@P_FORM_USER_FORM_ID = -1 or fu.[FORM_USER_FORM_ID] = @P_FORM_USER_FORM_ID)
	and
	(@P_FORM_USER_USER_ID = -1 or fu.[FORM_USER_USER_ID] = @P_FORM_USER_USER_ID)
	and
	f.FORM_IS_DELETED = 0
	and
	u.[USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[FormUserGetByID]...';


GO
CREATE PROCEDURE [SECURITY].[FormUserGetByID]
	@P_FORM_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		fu.[FORM_USER_ID]
		,fu.[FORM_USER_FORM_ID]
		,fu.[FORM_USER_USER_ID]
		,fu.[FORM_USER_ACCESS_TYPE]
		,f.[FORM_CODE]
		,u.[USER_NAME]
	FROM
	[SECURITY].[FORM_USER] fu
	INNER JOIN
	[SECURITY].[FORM] f
	on
	fu.FORM_USER_FORM_ID = f.[FORM_ID]
	INNER JOIN
	[SECURITY].[USER] u
	on
	fu.FORM_USER_USER_ID = u.[USER_ID]
	where
	fu.[FORM_USER_ID] = @P_FORM_USER_ID
	and
	f.FORM_IS_DELETED = 0
	and
	u.[USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[FormUserUpdate]...';


GO
CREATE PROCEDURE [SECURITY].[FormUserUpdate]
	@P_FORM_USER_ID int,
	@P_FORM_USER_FORM_ID int,
	@P_FORM_USER_USER_ID int,
	@P_FORM_USER_ACCESS_TYPE int
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE [SECURITY].[FORM_USER] SET
		[FORM_USER_FORM_ID] = @P_FORM_USER_FORM_ID
		,[FORM_USER_USER_ID] = @P_FORM_USER_USER_ID
		,[FORM_USER_ACCESS_TYPE] = @P_FORM_USER_ACCESS_TYPE
	where
		[FORM_USER_ID] = @P_FORM_USER_ID
END
GO
PRINT N'Creating [SECURITY].[ModuleGetAll]...';


GO
CREATE PROCEDURE [SECURITY].[ModuleGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[MODULE_ID],
	[MODULE_NAME],
	[MODULE_DESCRIPTION],
	[MODULE_IMAGE],
	[MODULE_IS_DELETED],
	[MODULE_CREATION_DAY],
	[MODULE_CREATION_SEC],
	[MODULE_AlterD_BY],
	[MODULE_PARENT_ID]

	from [SECURITY].[MODULE]
	where
	[MODULE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[ModuleGetByParent]...';


GO
CREATE PROCEDURE [SECURITY].[ModuleGetByParent]
	@P_MODULE_PARENT_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[MODULE_ID],
	[MODULE_NAME],
	[MODULE_DESCRIPTION],
	[MODULE_IMAGE],
	[MODULE_IS_DELETED],
	[MODULE_CREATION_DAY],
	[MODULE_CREATION_SEC],
	[MODULE_AlterD_BY],
	[MODULE_PARENT_ID]

	from [SECURITY].[MODULE]
	where
	[MODULE_IS_DELETED] = 0
	AND
	[MODULE_PARENT_ID] = @P_MODULE_PARENT_ID
END
GO
PRINT N'Creating [SECURITY].[RoleAdd]...';


GO
CREATE PROCEDURE [SECURITY].[RoleAdd]
	@P_ROLE_ID int output,
	@P_ROLE_NAME nvarchar(256),
	@P_ROLE_DESCRIPTION nvarchar(1024),
	@P_ROLE_IS_DELETED bit
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SECURITY].[ROLE]
		(
		[ROLE_NAME]
		,[ROLE_DESCRIPTION]
		,[ROLE_IS_DELETED]
		)
	VALUES
		(
		@P_ROLE_NAME
		,@P_ROLE_DESCRIPTION
		,@P_ROLE_IS_DELETED
		)
		
		set @P_ROLE_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SECURITY].[RoleDelete]...';


GO
CREATE PROCEDURE [SECURITY].[RoleDelete]
	@P_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SECURITY].[ROLE]
		Where [ROLE_ID] = @P_ROLE_ID
END
GO
PRINT N'Creating [SECURITY].[RoleDeleteLogical]...';


GO
CREATE PROCEDURE [SECURITY].[RoleDeleteLogical]
	@P_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SECURITY].[ROLE] set
	[ROLE_IS_DELETED] = 1
	Where [ROLE_ID] = @P_ROLE_ID
END
GO
PRINT N'Creating [SECURITY].[RoleGetAll]...';


GO
CREATE PROCEDURE [SECURITY].[RoleGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
		[ROLE_ID]
		,[ROLE_NAME]
		,[ROLE_DESCRIPTION]
		,[ROLE_IS_DELETED]
 from [SECURITY].[ROLE]
 where [ROLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[RoleGetByID]...';


GO
CREATE PROCEDURE [SECURITY].[RoleGetByID]
	@P_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
		[ROLE_ID]
		,[ROLE_NAME]
		,[ROLE_DESCRIPTION]
		,[ROLE_IS_DELETED]
 from [SECURITY].[ROLE]
 where
 [ROLE_IS_DELETED] = 0
 and
 [ROLE_ID] = @P_ROLE_ID
END
GO
PRINT N'Creating [SECURITY].[RoleGetByName]...';


GO
CREATE PROCEDURE [SECURITY].[RoleGetByName]
	@P_ROLE_NAME nvarchar(256)
AS
BEGIN
	SET NOCOUNT ON;
	Select 
		[ROLE_ID]
		,[ROLE_NAME]
		,[ROLE_DESCRIPTION]
		,[ROLE_IS_DELETED]
 from [SECURITY].[ROLE]
 where
 [ROLE_IS_DELETED] = 0
 and
 [ROLE_NAME] = @P_ROLE_NAME
END
GO
PRINT N'Creating [SECURITY].[RoleGetNotInForm]...';


GO
CREATE PROCEDURE [SECURITY].[RoleGetNotInForm]
	@P_FORM_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	r.[ROLE_ID]
	,r.[ROLE_NAME]
	,r.[ROLE_DESCRIPTION]
	,r.[ROLE_IS_DELETED]
 from
 [SECURITY].[ROLE] r
Where
	not EXISTS(
		select [FORM_ROLE_ID]
		from
		[SECURITY].[FORM_ROLE]
		where [FORM_ROLE_ROLE_ID] = r.[ROLE_ID] and [FORM_ROLE_FORM_ID] = @P_FORM_ID)	
	and
	r.[ROLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[RoleUpdate]...';


GO
CREATE PROCEDURE [SECURITY].[RoleUpdate]
	@P_ROLE_ID int,
	@P_ROLE_NAME nvarchar(256),
	@P_ROLE_DESCRIPTION nvarchar(1024),
	@P_ROLE_IS_DELETED bit
AS
BEGIN
	SET NOCOUNT ON;
	UPDATE [SECURITY].[ROLE] SET
		[ROLE_NAME] = @P_ROLE_NAME
		,[ROLE_DESCRIPTION] = @P_ROLE_DESCRIPTION
		,[ROLE_IS_DELETED] = @P_ROLE_IS_DELETED
		
		Where @P_ROLE_ID = @P_ROLE_ID
END
GO
PRINT N'Creating [SECURITY].[RoleUserAdd]...';


GO
CREATE PROCEDURE [SECURITY].[RoleUserAdd]
	@P_ROLE_ID int,
	@P_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Insert Into [SECURITY].[ROLE_USER]
	(
		[ROLE_USER_ROLE_ID]
		,[ROLE_USER_USER_ID]		
	)
	values
	(
		@P_ROLE_ID,
		@P_USER_ID
	)
END
GO
PRINT N'Creating [SECURITY].[RoleUserDelete]...';


GO
CREATE PROCEDURE [SECURITY].[RoleUserDelete]
	@P_ROLE_ID int,
	@P_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SECURITY].[ROLE_USER]
		Where
		(@P_ROLE_ID = -1 or [ROLE_USER_ROLE_ID] = @P_ROLE_ID)
		and
		(@P_USER_ID = -1 or [ROLE_USER_USER_ID] = @P_USER_ID)
END
GO
PRINT N'Creating [SECURITY].[UserAdd]...';


GO
CREATE PROCEDURE [SECURITY].[UserAdd]
	@P_USER_ID int output,
	@P_USER_NAME nvarchar(1000),
	@P_USER_EMAIL nvarchar(1000),
	@P_USER_PASSWORD nvarchar(max),
	@P_USER_IS_ACTIVE bit,
	@P_USER_CREATION_DAY int,
	@P_USER_CREATION_SEC int,
	@P_USER_IS_DELETED bit
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SECURITY].[USER]
		(
		[USER_NAME]
		,[USER_EMAIL]
		,[USER_PASSWORD]
		,[USER_IS_ACTIVE]
		,[USER_CREATION_DAY]
		,[USER_CREATION_SEC]
		,[USER_IS_DELETED]
		)
	VALUES
		(
		@P_USER_NAME
		,@P_USER_EMAIL
		,@P_USER_PASSWORD
		,@P_USER_IS_ACTIVE
		,@P_USER_CREATION_DAY
		,@P_USER_CREATION_SEC
		,@P_USER_IS_DELETED
		)
		
		set @P_USER_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SECURITY].[UserDelete]...';


GO
CREATE PROCEDURE [SECURITY].[UserDelete]
	@P_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SECURITY].[USER]
		Where [USER_ID] = @P_USER_ID
END
GO
PRINT N'Creating [SECURITY].[UserDeleteLogical]...';


GO
CREATE PROCEDURE [SECURITY].[UserDeleteLogical]
	@P_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SECURITY].[USER] set
	[USER_IS_DELETED] = 1
	Where [USER_ID] = @P_USER_ID
END
GO
PRINT N'Creating [SECURITY].[UserGetAll]...';


GO
CREATE PROCEDURE [SECURITY].[UserGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[USER_ID]
	,[USER_NAME]
	,[USER_EMAIL]
	,[USER_PASSWORD]
	,[USER_IS_ACTIVE]
	,[USER_CREATION_DAY]
	,[USER_CREATION_SEC]
	,[USER_IS_DELETED]
 from [SECURITY].[USER]
 where [USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[UserGetByID]...';


GO
CREATE PROCEDURE [SECURITY].[UserGetByID]
	@P_USER_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[USER_ID]
	,[USER_NAME]
	,[USER_EMAIL]
	,[USER_PASSWORD]
	,[USER_IS_ACTIVE]
	,[USER_CREATION_DAY]
	,[USER_CREATION_SEC]
	,[USER_IS_DELETED]
 from [SECURITY].[USER]
		Where [USER_ID] = @P_USER_ID
		and
		[USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[UserGetByName]...';


GO
CREATE PROCEDURE [SECURITY].[UserGetByName]
	@P_USER_NAME nvarchar(1000)
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[USER_ID]
	,[USER_NAME]
	,[USER_EMAIL]
	,[USER_PASSWORD]
	,[USER_IS_ACTIVE]
	,[USER_CREATION_DAY]
	,[USER_CREATION_SEC]
	,[USER_IS_DELETED]
 from [SECURITY].[USER]
		Where [USER_NAME] = @P_USER_NAME
		and
		[USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[UserGetByRoleID]...';


GO
CREATE PROCEDURE [SECURITY].[UserGetByRoleID]
	@P_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	u.[USER_ID]
	,u.[USER_NAME]
	,u.[USER_EMAIL]
	,u.[USER_PASSWORD]
	,u.[USER_IS_ACTIVE]
	,u.[USER_CREATION_DAY]
	,u.[USER_CREATION_SEC]
	,u.[USER_IS_DELETED]
 from
 [SECURITY].[USER] u
 Inner Join
 [SECURITY].[ROLE_USER] ru
 on
 u.[USER_ID] = ru.[ROLE_USER_USER_ID]
 and
 ru.[ROLE_USER_ROLE_ID] = @P_ROLE_ID
Where
	ru.[ROLE_USER_ROLE_ID] = @P_ROLE_ID
	and
	u.[USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[UserGetNotInForm]...';


GO
CREATE PROCEDURE [SECURITY].[UserGetNotInForm]
	@P_FORM_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	u.[USER_ID]
	,u.[USER_NAME]
	,u.[USER_EMAIL]
	,u.[USER_PASSWORD]
	,u.[USER_IS_ACTIVE]
	,u.[USER_CREATION_DAY]
	,u.[USER_CREATION_SEC]
	,u.[USER_IS_DELETED]
 from
 [SECURITY].[USER] u
Where
	not EXISTS(
		select [FORM_USER_ID]
		from
		[SECURITY].[FORM_USER]
		where [FORM_USER_USER_ID] = [USER_ID] and [FORM_USER_FORM_ID] = @P_FORM_ID)	
	and
	u.[USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[UserGetNotInRole]...';


GO
CREATE PROCEDURE [SECURITY].[UserGetNotInRole]
	@P_ROLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	u.[USER_ID]
	,u.[USER_NAME]
	,u.[USER_EMAIL]
	,u.[USER_PASSWORD]
	,u.[USER_IS_ACTIVE]
	,u.[USER_CREATION_DAY]
	,u.[USER_CREATION_SEC]
	,u.[USER_IS_DELETED]
 from
 [SECURITY].[USER] u
Where
	not EXISTS(
		select [ROLE_USER_ROLE_ID]
		from
		[SECURITY].[ROLE_USER]
		where [ROLE_USER_USER_ID] = [USER_ID] and [ROLE_USER_ROLE_ID] = @P_ROLE_ID)	
	and
	u.[USER_IS_DELETED] = 0
END
GO
PRINT N'Creating [SECURITY].[UserUpdate]...';


GO
CREATE PROCEDURE [SECURITY].[UserUpdate]
	@P_USER_ID int,
	@P_USER_NAME nvarchar(1000),
	@P_USER_EMAIL nvarchar(1000),
	@P_USER_PASSWORD nvarchar(max),
	@P_USER_IS_ACTIVE bit,
	@P_USER_CREATION_DAY int,
	@P_USER_CREATION_SEC int,
	@P_USER_IS_DELETED bit
AS
BEGIN
	SET NOCOUNT ON;
	Update [SECURITY].[USER] SET
		[USER_NAME] = @P_USER_NAME
		,[USER_EMAIL] = @P_USER_EMAIL
		,[USER_PASSWORD] = @P_USER_PASSWORD
		,[USER_IS_ACTIVE] = @P_USER_IS_ACTIVE
		,[USER_CREATION_DAY] = @P_USER_CREATION_DAY
		,[USER_CREATION_SEC] = @P_USER_CREATION_SEC
		,[USER_IS_DELETED] = @P_USER_IS_DELETED
		Where [USER_ID] = @P_USER_ID
END
GO
PRINT N'Creating [SECURITY].[UserUpdateActive]...';


GO
CREATE PROCEDURE [SECURITY].[UserUpdateActive]
	@P_USER_ID int,
	@P_USER_IS_ACTIVE bit
AS
BEGIN
	SET NOCOUNT ON;
	Update [SECURITY].[USER] SET
		[USER_IS_ACTIVE] = @P_USER_IS_ACTIVE
		Where [USER_ID] = @P_USER_ID
END
GO
PRINT N'Creating [SETUP].[CategoryAdd]...';


GO
CREATE PROCEDURE [SETUP].[CategoryAdd]
	@P_CATEGORY_ID int output,
	@P_CATEGORY_NAME nvarchar(500),
	@P_CATEGORY_DESCRIPTION nvarchar(1000),
	@P_CATEGORY_MODULE_ID int,
	@P_CATEGORY_IS_DELETED bit,
	@P_CATEGORY_PORTAL_ID int,
	@P_CATEGORY_LANGUAGE_ID int,
	@P_CATEGORY_CREATION_DAY int,
	@P_CATEGORY_CREATION_SEC int,
	@P_CATEGORY_PARENT_ID int,
	@P_CATEGORY_ORDER int,
	@P_CATEGORY_CREATED_BY int,
	@P_CATEGORY_IMAGE nvarchar(500)
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[CATEGORY]
		(
		[CATEGORY_NAME]
		,[CATEGORY_DESCRIPTION]
		,[CATEGORY_MODULE_ID]
		,[CATEGORY_IS_DELETED]
		,[CATEGORY_PORTAL_ID]
		,[CATEGORY_LANGUAGE_ID]
		,[CATEGORY_CREATION_DAY]
		,[CATEGORY_CREATION_SEC]
		,[CATEGORY_PARENT_ID]
		,[CATEGORY_ORDER]
		,[CATEGORY_CREATED_BY]
		,[CATEGORY_IMAGE]
		)
	VALUES
		(
		@P_CATEGORY_NAME,
		@P_CATEGORY_DESCRIPTION,
		@P_CATEGORY_MODULE_ID,
		@P_CATEGORY_IS_DELETED,
		@P_CATEGORY_PORTAL_ID,
		@P_CATEGORY_LANGUAGE_ID,
		@P_CATEGORY_CREATION_DAY,
		@P_CATEGORY_CREATION_SEC,
		@P_CATEGORY_PARENT_ID,
		@P_CATEGORY_ORDER,
		@P_CATEGORY_CREATED_BY,
		@P_CATEGORY_IMAGE
		)
		
		set @P_CATEGORY_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[CategoryDelete]...';


GO
CREATE PROCEDURE [SETUP].[CategoryDelete]
	@P_CATEGORY_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[CATEGORY]
		Where [CATEGORY_ID] = @P_CATEGORY_ID
END
GO
PRINT N'Creating [SETUP].[CategoryDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[CategoryDeleteLogical]
	@P_CATEGORY_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[CATEGORY] set
	[CATEGORY_IS_DELETED] = 1
	Where [CATEGORY_ID] = @P_CATEGORY_ID
END
GO
PRINT N'Creating [SETUP].[CategoryGetAll]...';


GO
CREATE PROCEDURE [SETUP].[CategoryGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[CATEGORY_ID]
	,[CATEGORY_NAME]
	,[CATEGORY_DESCRIPTION]
	,[CATEGORY_MODULE_ID]
	,[CATEGORY_IS_DELETED]
	,[CATEGORY_PORTAL_ID]
	,[CATEGORY_LANGUAGE_ID]
	,[CATEGORY_CREATION_DAY]
	,[CATEGORY_CREATION_SEC]
	,[CATEGORY_PARENT_ID]
	,[CATEGORY_ORDER]
	,[CATEGORY_CREATED_BY]
	,[CATEGORY_IMAGE]
 from [SETUP].[CATEGORY]
 where [CATEGORY_IS_DELETED] = 0
 order by [CATEGORY_ORDER]
END
GO
PRINT N'Creating [SETUP].[CategoryGetByID]...';


GO
CREATE PROCEDURE [SETUP].[CategoryGetByID]
	@P_CATEGORY_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[CATEGORY_ID]
	,[CATEGORY_NAME]
	,[CATEGORY_DESCRIPTION]
	,[CATEGORY_MODULE_ID]
	,[CATEGORY_IS_DELETED]
	,[CATEGORY_PORTAL_ID]
	,[CATEGORY_LANGUAGE_ID]
	,[CATEGORY_CREATION_DAY]
	,[CATEGORY_CREATION_SEC]
	,[CATEGORY_PARENT_ID]
	,[CATEGORY_ORDER]
	,[CATEGORY_CREATED_BY]
	,[CATEGORY_IMAGE]
 from [SETUP].[CATEGORY]
		Where [CATEGORY_ID] = @P_CATEGORY_ID
		and
		[CATEGORY_IS_DELETED] = 0
		order by [CATEGORY_ORDER]
END
GO
PRINT N'Creating [SETUP].[CategoryGetByModuleID]...';


GO
CREATE PROCEDURE [SETUP].[CategoryGetByModuleID]
	@P_CATEGORY_MODULE_ID int,
	@P_CATEGORY_PORTAL_ID int,
	@P_CATEGORY_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[CATEGORY_ID]
	,[CATEGORY_NAME]
	,[CATEGORY_DESCRIPTION]
	,[CATEGORY_MODULE_ID]
	,[CATEGORY_IS_DELETED]
	,[CATEGORY_PORTAL_ID]
	,[CATEGORY_LANGUAGE_ID]
	,[CATEGORY_CREATION_DAY]
	,[CATEGORY_CREATION_SEC]
	,[CATEGORY_PARENT_ID]
	,[CATEGORY_ORDER]
	,[CATEGORY_CREATED_BY]
	,[CATEGORY_IMAGE]
 from [SETUP].[CATEGORY]
	where 
	[CATEGORY_MODULE_ID] = @P_CATEGORY_MODULE_ID
	and
	[CATEGORY_PORTAL_ID] = @P_CATEGORY_PORTAL_ID
	and
	[CATEGORY_LANGUAGE_ID] = @P_CATEGORY_LANGUAGE_ID
	and
	[CATEGORY_IS_DELETED] = 0
	order by [CATEGORY_ORDER]
END
GO
PRINT N'Creating [SETUP].[CategoryGetByPortalLanguage]...';


GO
CREATE PROCEDURE [SETUP].[CategoryGetByPortalLanguage]
	@P_CATEGORY_PORTAL_ID int,
	@P_CATEGORY_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[CATEGORY_ID]
	,[CATEGORY_NAME]
	,[CATEGORY_DESCRIPTION]
	,[CATEGORY_MODULE_ID]
	,[CATEGORY_IS_DELETED]
	,[CATEGORY_PORTAL_ID]
	,[CATEGORY_LANGUAGE_ID]
	,[CATEGORY_CREATION_DAY]
	,[CATEGORY_CREATION_SEC]
	,[CATEGORY_PARENT_ID]
	,[CATEGORY_ORDER]
	,[CATEGORY_CREATED_BY]
	,[CATEGORY_IMAGE]
 from [SETUP].[CATEGORY]
	where 
	[CATEGORY_PORTAL_ID] = @P_CATEGORY_PORTAL_ID
	and
	[CATEGORY_LANGUAGE_ID] = @P_CATEGORY_LANGUAGE_ID
	and
	[CATEGORY_IS_DELETED] = 0
	order by [CATEGORY_ORDER]
END
GO
PRINT N'Creating [SETUP].[CategoryUpdate]...';


GO
CREATE PROCEDURE [SETUP].[CategoryUpdate]
	@P_CATEGORY_ID int,
	@P_CATEGORY_NAME nvarchar(500),
	@P_CATEGORY_DESCRIPTION nvarchar(1000),
	@P_CATEGORY_MODULE_ID int,
	@P_CATEGORY_IS_DELETED bit,
	@P_CATEGORY_PORTAL_ID int,
	@P_CATEGORY_LANGUAGE_ID int,
	@P_CATEGORY_CREATION_DAY int,
	@P_CATEGORY_CREATION_SEC int,
	@P_CATEGORY_PARENT_ID int,
	@P_CATEGORY_ORDER int,
	@P_CATEGORY_CREATED_BY int,
	@P_CATEGORY_IMAGE nvarchar(500)
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[CATEGORY] SET
		[CATEGORY_NAME] = @P_CATEGORY_NAME
		,[CATEGORY_DESCRIPTION] = @P_CATEGORY_DESCRIPTION
		,[CATEGORY_MODULE_ID] = @P_CATEGORY_MODULE_ID
		,[CATEGORY_IS_DELETED] = @P_CATEGORY_IS_DELETED
		,[CATEGORY_PORTAL_ID] = @P_CATEGORY_PORTAL_ID
		,[CATEGORY_LANGUAGE_ID] = @P_CATEGORY_LANGUAGE_ID
		,[CATEGORY_CREATION_DAY] = @P_CATEGORY_CREATION_DAY
		,[CATEGORY_CREATION_SEC] = @P_CATEGORY_CREATION_SEC
		,[CATEGORY_PARENT_ID] = @P_CATEGORY_PARENT_ID
		,[CATEGORY_ORDER] = @P_CATEGORY_ORDER
		,[CATEGORY_CREATED_BY] = @P_CATEGORY_CREATED_BY
		,[CATEGORY_IMAGE] = @P_CATEGORY_IMAGE
		Where [CATEGORY_ID] = @P_CATEGORY_ID
END
GO
PRINT N'Creating [SETUP].[CMSControlAdd]...';


GO
CREATE PROCEDURE [SETUP].[CMSControlAdd]
	@P_CMSCONTROL_ID int output,
	@P_CMSCONTROL_NAME nvarchar(500),
	@P_CMSCONTROL_DESCRIPTION nvarchar(1000),
	@P_CMSCONTROL_USER_CONTROL_PATH nvarchar(1000),
	@P_CMSCONTROL_MODULE_ID int,
	@P_CMSCONTROL_IS_DELETED bit,
	@P_CMSCONTROL_CREATION_DAY int,
	@P_CMSCONTROL_CREATION_SEC int,
	@P_CMSCONTROL_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[CMSCONTROL]
		(
		[CMSCONTROL_NAME]
		,[CMSCONTROL_DESCRIPTION]
		,[CMSCONTROL_USER_CONTROL_PATH]
		,[CMSCONTROL_MODULE_ID]
		,[CMSCONTROL_IS_DELETED]
		,[CMSCONTROL_CREATION_DAY]
		,[CMSCONTROL_CREATION_SEC]
		,[CMSCONTROL_CREATED_BY]
		)
	VALUES
		(
		@P_CMSCONTROL_NAME,
		@P_CMSCONTROL_DESCRIPTION,
		@P_CMSCONTROL_USER_CONTROL_PATH,
		@P_CMSCONTROL_MODULE_ID,
		@P_CMSCONTROL_IS_DELETED,
		@P_CMSCONTROL_CREATION_DAY,
		@P_CMSCONTROL_CREATION_SEC,
		@P_CMSCONTROL_CREATED_BY
		)
		
		set @P_CMSCONTROL_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[CMSControlDelete]...';


GO
CREATE PROCEDURE [SETUP].[CMSControlDelete]
	@P_CMSCONTROL_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[CMSCONTROL]
		Where [CMSCONTROL_ID] = @P_CMSCONTROL_ID
END
GO
PRINT N'Creating [SETUP].[CMSControlDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[CMSControlDeleteLogical]
	@P_CMSCONTROL_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[CMSCONTROL] set
	[CMSCONTROL_IS_DELETED] = 1
	Where [CMSCONTROL_ID] = @P_CMSCONTROL_ID
END
GO
PRINT N'Creating [SETUP].[CMSControlGetAll]...';


GO
CREATE PROCEDURE [SETUP].[CMSControlGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[CMSCONTROL_ID]
	,[CMSCONTROL_NAME]
	,[CMSCONTROL_DESCRIPTION]
	,[CMSCONTROL_USER_CONTROL_PATH]
	,[CMSCONTROL_MODULE_ID]
	,[CMSCONTROL_IS_DELETED]
	,[CMSCONTROL_CREATION_DAY]
	,[CMSCONTROL_CREATION_SEC]
	,[CMSCONTROL_CREATED_BY]
 from [SETUP].[CMSCONTROL]
 where [CMSCONTROL_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[CMSControlGetByID]...';


GO
CREATE PROCEDURE [SETUP].[CMSControlGetByID]
	@P_CMSCONTROL_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[CMSCONTROL_ID]
	,[CMSCONTROL_NAME]
	,[CMSCONTROL_DESCRIPTION]
	,[CMSCONTROL_USER_CONTROL_PATH]
	,[CMSCONTROL_MODULE_ID]
	,[CMSCONTROL_IS_DELETED]
	,[CMSCONTROL_CREATION_DAY]
	,[CMSCONTROL_CREATION_SEC]
	,[CMSCONTROL_CREATED_BY]
 from [SETUP].[CMSCONTROL]
		Where [CMSCONTROL_ID] = @P_CMSCONTROL_ID
		and
		[CMSCONTROL_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[CMSControlGetByModuleID]...';


GO
CREATE PROCEDURE [SETUP].[CMSControlGetByModuleID]
	@P_CMSCONTROL_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[CMSCONTROL_ID]
	,[CMSCONTROL_NAME]
	,[CMSCONTROL_DESCRIPTION]
	,[CMSCONTROL_USER_CONTROL_PATH]
	,[CMSCONTROL_MODULE_ID]
	,[CMSCONTROL_IS_DELETED]
	,[CMSCONTROL_CREATION_DAY]
	,[CMSCONTROL_CREATION_SEC]
	,[CMSCONTROL_CREATED_BY]
 from [SETUP].[CMSCONTROL]
	where 
	[CMSCONTROL_MODULE_ID] = @P_CMSCONTROL_MODULE_ID
	and
	[CMSCONTROL_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[CMSControlUpdate]...';


GO
CREATE PROCEDURE [SETUP].[CMSControlUpdate]
	@P_CMSCONTROL_ID int,
	@P_CMSCONTROL_NAME nvarchar(500),
	@P_CMSCONTROL_DESCRIPTION nvarchar(1000),
	@P_CMSCONTROL_USER_CONTROL_PATH nvarchar(1000),
	@P_CMSCONTROL_MODULE_ID int,
	@P_CMSCONTROL_IS_DELETED bit,
	@P_CMSCONTROL_CREATION_DAY int,
	@P_CMSCONTROL_CREATION_SEC int,
	@P_CMSCONTROL_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[CMSCONTROL] SET
		[CMSCONTROL_NAME] = @P_CMSCONTROL_NAME
		,[CMSCONTROL_DESCRIPTION] = @P_CMSCONTROL_DESCRIPTION
		,[CMSCONTROL_USER_CONTROL_PATH] = @P_CMSCONTROL_USER_CONTROL_PATH
		,[CMSCONTROL_MODULE_ID] = @P_CMSCONTROL_MODULE_ID
		,[CMSCONTROL_IS_DELETED] = @P_CMSCONTROL_IS_DELETED
		,[CMSCONTROL_CREATION_DAY] = @P_CMSCONTROL_CREATION_DAY
		,[CMSCONTROL_CREATION_SEC] = @P_CMSCONTROL_CREATION_SEC
		,[CMSCONTROL_CREATED_BY] = @P_CMSCONTROL_CREATED_BY
		Where [CMSCONTROL_ID] = @P_CMSCONTROL_ID
END
GO
PRINT N'Creating [SETUP].[HtmlBlockAdd]...';


GO
CREATE PROCEDURE [SETUP].[HtmlBlockAdd]
	@P_HTMLBLOCK_ID int output,
	@P_HTMLBLOCK_NAME nvarchar(500),
	@P_HTMLBLOCK_DETAILS ntext,
	@P_HTMLBLOCK_IS_DELETED bit,
	@P_HTMLBLOCK_PORTAL_ID int,
	@P_HTMLBLOCK_LANGUAGE_ID int,
	@P_HTMLBLOCK_CREATION_DAY int,
	@P_HTMLBLOCK_CREATION_SEC int,
	@P_HTMLBLOCK_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[HTMLBLOCK]
		(
		[HTMLBLOCK_NAME]
		,[HTMLBLOCK_DETAILS]
		,[HTMLBLOCK_IS_DELETED]
		,[HTMLBLOCK_PORTAL_ID]
		,[HTMLBLOCK_LANGUAGE_ID]
		,[HTMLBLOCK_CREATION_DAY]
		,[HTMLBLOCK_CREATION_SEC]
		,[HTMLBLOCK_CREATED_BY]
		)
	VALUES
		(
		@P_HTMLBLOCK_NAME,
		@P_HTMLBLOCK_DETAILS,
		@P_HTMLBLOCK_IS_DELETED,
		@P_HTMLBLOCK_PORTAL_ID,
		@P_HTMLBLOCK_LANGUAGE_ID,
		@P_HTMLBLOCK_CREATION_DAY,
		@P_HTMLBLOCK_CREATION_SEC,
		@P_HTMLBLOCK_CREATED_BY
		)
		
		set @P_HTMLBLOCK_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[HtmlBlockDelete]...';


GO
CREATE PROCEDURE [SETUP].[HtmlBlockDelete]
	@P_HTMLBLOCK_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[HTMLBLOCK]
		Where [HTMLBLOCK_ID] = @P_HTMLBLOCK_ID
END
GO
PRINT N'Creating [SETUP].[HtmlBlockDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[HtmlBlockDeleteLogical]
	@P_HTMLBLOCK_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[HTMLBLOCK] set
	[HTMLBLOCK_IS_DELETED] = 1
	Where [HTMLBLOCK_ID] = @P_HTMLBLOCK_ID
END
GO
PRINT N'Creating [SETUP].[HtmlBlockGetAll]...';


GO
CREATE PROCEDURE [SETUP].[HtmlBlockGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[HTMLBLOCK_ID]
	,[HTMLBLOCK_NAME]
	,[HTMLBLOCK_DETAILS]
	,[HTMLBLOCK_IS_DELETED]
	,[HTMLBLOCK_PORTAL_ID]
	,[HTMLBLOCK_LANGUAGE_ID]
	,[HTMLBLOCK_CREATION_DAY]
	,[HTMLBLOCK_CREATION_SEC]
	,[HTMLBLOCK_CREATED_BY]
 from [SETUP].[HTMLBLOCK]
 where [HTMLBLOCK_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[HtmlBlockGetByID]...';


GO
CREATE PROCEDURE [SETUP].[HtmlBlockGetByID]
	@P_HTMLBLOCK_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[HTMLBLOCK_ID]
	,[HTMLBLOCK_NAME]
	,[HTMLBLOCK_DETAILS]
	,[HTMLBLOCK_IS_DELETED]
	,[HTMLBLOCK_PORTAL_ID]
	,[HTMLBLOCK_LANGUAGE_ID]
	,[HTMLBLOCK_CREATION_DAY]
	,[HTMLBLOCK_CREATION_SEC]
	,[HTMLBLOCK_CREATED_BY]
 from [SETUP].[HTMLBLOCK]
		Where [HTMLBLOCK_ID] = @P_HTMLBLOCK_ID
		and
		[HTMLBLOCK_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[HtmlBlockGetByPortalLanguage]...';


GO
CREATE PROCEDURE [SETUP].[HtmlBlockGetByPortalLanguage]
	@P_HTMLBLOCK_PORTAL_ID int,
	@P_HTMLBLOCK_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[HTMLBLOCK_ID]
	,[HTMLBLOCK_NAME]
	,[HTMLBLOCK_DETAILS]
	,[HTMLBLOCK_IS_DELETED]
	,[HTMLBLOCK_PORTAL_ID]
	,[HTMLBLOCK_LANGUAGE_ID]
	,[HTMLBLOCK_CREATION_DAY]
	,[HTMLBLOCK_CREATION_SEC]
	,[HTMLBLOCK_CREATED_BY]
 from [SETUP].[HTMLBLOCK]
	where 
	[HTMLBLOCK_PORTAL_ID] = @P_HTMLBLOCK_PORTAL_ID
	and
	[HTMLBLOCK_LANGUAGE_ID] = @P_HTMLBLOCK_LANGUAGE_ID
	and
	[HTMLBLOCK_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[HtmlBlockUpdate]...';


GO
CREATE PROCEDURE [SETUP].[HtmlBlockUpdate]
	@P_HTMLBLOCK_ID int,
	@P_HTMLBLOCK_NAME nvarchar(500),
	@P_HTMLBLOCK_DETAILS ntext,
	@P_HTMLBLOCK_IS_DELETED bit,
	@P_HTMLBLOCK_PORTAL_ID int,
	@P_HTMLBLOCK_LANGUAGE_ID int,
	@P_HTMLBLOCK_CREATION_DAY int,
	@P_HTMLBLOCK_CREATION_SEC int,
	@P_HTMLBLOCK_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[HTMLBLOCK] SET
		[HTMLBLOCK_NAME] = @P_HTMLBLOCK_NAME
		,[HTMLBLOCK_DETAILS] = @P_HTMLBLOCK_DETAILS
		,[HTMLBLOCK_IS_DELETED] = @P_HTMLBLOCK_IS_DELETED
		,[HTMLBLOCK_PORTAL_ID] = @P_HTMLBLOCK_PORTAL_ID
		,[HTMLBLOCK_LANGUAGE_ID] = @P_HTMLBLOCK_LANGUAGE_ID
		,[HTMLBLOCK_CREATION_DAY] = @P_HTMLBLOCK_CREATION_DAY
		,[HTMLBLOCK_CREATION_SEC] = @P_HTMLBLOCK_CREATION_SEC
		,[HTMLBLOCK_CREATED_BY] = @P_HTMLBLOCK_CREATED_BY
		Where [HTMLBLOCK_ID] = @P_HTMLBLOCK_ID
END
GO
PRINT N'Creating [SETUP].[LanguageAdd]...';


GO
CREATE PROCEDURE [SETUP].[LanguageAdd]

@P_LANGUAGE_ID int output,
@P_LANGUAGE_NAME nvarchar(100),
@P_LANGUAGE_CULTURE nvarchar(50),
@P_LANGUAGE_IMAGE nvarchar(500)

AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[LANGUAGE]
		(
			LANGUAGE_NAME,
			LANGUAGE_CULTURE,
			LANGUAGE_IMAGE
		)
	VALUES
		(
			@P_LANGUAGE_NAME,
			@P_LANGUAGE_CULTURE,
			@P_LANGUAGE_IMAGE
		)
		
		set @P_LANGUAGE_ID = SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[LanguageDelete]...';


GO
CREATE PROCEDURE [SETUP].[LanguageDelete]

@P_LANGUAGE_ID int

AS
BEGIN
	SET NOCOUNT ON;
	DELETE FROM [SETUP].[LANGUAGE] 
		WHERE 		
		    LANGUAGE_ID = @P_LANGUAGE_ID 
END
GO
PRINT N'Creating [SETUP].[LanguageGetAll]...';


GO
CREATE PROCEDURE [SETUP].[LanguageGetAll]

AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		LANGUAGE_ID
		LANGUAGE_NAME,
		LANGUAGE_CULTURE,
		LANGUAGE_IMAGE
	FROM			
		[SETUP].[LANGUAGE] 
		
END
GO
PRINT N'Creating [SETUP].[LanguageGetByID]...';


GO
CREATE PROCEDURE [SETUP].[LanguageGetByID]

@P_LANGUAGE_ID int

AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		LANGUAGE_ID,
		LANGUAGE_NAME,
		LANGUAGE_CULTURE,
		LANGUAGE_IMAGE
	FROM			
		[SETUP].[LANGUAGE] 
	WHERE 
	    LANGUAGE_ID = @P_LANGUAGE_ID
		
		
		
END
GO
PRINT N'Creating [SETUP].[LanguageGetByPortalID]...';


GO
CREATE PROCEDURE [SETUP].[LanguageGetByPortalID]

@P_PORTAL_ID INT

AS
BEGIN
	SET NOCOUNT ON;
	SELECT
		L.LANGUAGE_ID,
		L.LANGUAGE_NAME,
		L.LANGUAGE_CULTURE,
		L.LANGUAGE_IMAGE
		
	FROM [SETUP].[LANGUAGE] AS L
		INNER JOIN
		[SETUP].PORTAL_LANGUAGE AS PL
		ON PL.LANGUAGE_ID = L.LANGUAGE_ID AND PL.PORTAL_ID = @P_PORTAL_ID
	
END
GO
PRINT N'Creating [SETUP].[LanguageUpdate]...';


GO
CREATE PROCEDURE [SETUP].[LanguageUpdate]

@P_LANGUAGE_ID int,
@P_LANGUAGE_NAME nvarchar(100),
@P_LANGUAGE_CULTURE nvarchar(50),
@P_LANGUAGE_IMAGE nvarchar(500)

AS
BEGIN
	SET NOCOUNT ON;
	UPDATE [SETUP].[LANGUAGE] SET
	
		
			LANGUAGE_NAME = @P_LANGUAGE_NAME,
			LANGUAGE_CULTURE = @P_LANGUAGE_CULTURE,
			LANGUAGE_IMAGE = @P_LANGUAGE_IMAGE
	WHERE 		
		    LANGUAGE_ID = @P_LANGUAGE_ID 
END
GO
PRINT N'Creating [SETUP].[LanguageUrlGetAll]...';


GO
CREATE PROCEDURE [SETUP].[LanguageUrlGetAll]
@P_LANGUAGE_URL_PORTAL_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	LANGUAGE_URL_ID,
	LANGUAGE_URL_LANGUAGE_ID,
	LANGUAGE_URL_NAME,
	LANGUAGE_URL_PORTAL_ID
	
 from [SETUP].[LANGUAGE_URL]
 where 
 LANGUAGE_URL_PORTAL_ID = @P_LANGUAGE_URL_PORTAL_ID
 

END
GO
PRINT N'Creating [SETUP].[MenuAdd]...';


GO
CREATE PROCEDURE [SETUP].[MenuAdd]
	@P_MENU_ID int output,
    @P_MENU_NAME nvarchar(500),
    @P_MENU_DESCRIPTION nvarchar(1000),
	@P_MENU_KEYWORDS nvarchar(1000),
	@P_MENU_SEO_NAME nvarchar(1000),
	@P_MENU_DETAILS ntext,
    @P_MENU_URL nvarchar(1000),
	@P_MENU_IMAGE nvarchar(500),
	@P_MENU_PAGE_ID int,
	@P_MENU_CATEGORY_ID int,
	@P_MENU_PARENT_ID int,
	@P_MENU_CREATION_DAY int,
	@P_MENU_CREATION_SEC int,
	@P_MENU_IS_DELETED bit,
	@P_MENU_PORTAL_ID int,
	@P_MENU_LANGUAGE_ID int,
	@P_MENU_TYPE int,
	@P_MENU_ORDER int,
	@P_MENU_CREATED_BY int,
	@P_MENU_PARENT_OBJ_ID int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[MENU]
		(
		[MENU_NAME]
		,[MENU_DESCRIPTION]
		,[MENU_KEYWORDS]
		,[MENU_SEO_NAME]
		,[MENU_DETAILS]
		,[MENU_URL]
		,[MENU_IMAGE]
		,[MENU_PAGE_ID]
		,[MENU_CATEGORY_ID]
		,[MENU_PARENT_ID]
		,[MENU_CREATION_DAY]
		,[MENU_CREATION_SEC]
		,[MENU_IS_DELETED]
		,[MENU_PORTAL_ID]
		,[MENU_LANGUAGE_ID]
		,[MENU_TYPE]
		,[MENU_ORDER]
		,[MENU_CREATED_BY]
		,[MENU_PARENT_OBJ_ID]
		)
	VALUES
		(
		@P_MENU_NAME,
		@P_MENU_DESCRIPTION,
		@P_MENU_KEYWORDS,
		@P_MENU_SEO_NAME,
		@P_MENU_DETAILS,
		@P_MENU_URL,
		@P_MENU_IMAGE,
		@P_MENU_PAGE_ID,
		@P_MENU_CATEGORY_ID,
		@P_MENU_PARENT_ID,
		@P_MENU_CREATION_DAY,
		@P_MENU_CREATION_SEC,
		@P_MENU_IS_DELETED,
		@P_MENU_PORTAL_ID,
		@P_MENU_LANGUAGE_ID,
		@P_MENU_TYPE,
		@P_MENU_ORDER,
		@P_MENU_CREATED_BY,
		@P_MENU_PARENT_OBJ_ID
		)
		
		set @P_MENU_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[MenuDelete]...';


GO
CREATE PROCEDURE [SETUP].[MenuDelete]
	@P_MENU_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[MENU] 
		Where
		MENU_ID = @P_MENU_ID
		or
		MENU_PARENT_OBJ_ID = @P_MENU_ID
END
GO
PRINT N'Creating [SETUP].[MenuDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[MenuDeleteLogical]
	@P_MENU_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[MENU] set
	[MENU_IS_DELETED]=1
	Where
	MENU_ID = @P_MENU_ID
	or
	MENU_PARENT_OBJ_ID = @P_MENU_ID 
END
GO
PRINT N'Creating [SETUP].[MenuGetAll]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetAll]
@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	M.[MENU_ID],
	M.[MENU_NAME],
	M.[MENU_DESCRIPTION],
	M.[MENU_KEYWORDS],
	M.[MENU_SEO_NAME],
	M.[MENU_DETAILS],
	M.[MENU_URL],
	M.[MENU_IMAGE],
	M.[MENU_PAGE_ID],
	M.[MENU_CATEGORY_ID],
	M.[MENU_PARENT_ID],
	M.[MENU_CREATION_DAY],
	M.[MENU_CREATION_SEC],
	M.[MENU_IS_DELETED],
	M.[MENU_PORTAL_ID],
	M.[MENU_LANGUAGE_ID],
	M.[MENU_TYPE],
	M.[MENU_ORDER],
	M.[MENU_CREATED_BY],
	M.[MENU_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID] 
 from [SETUP].[MENU] AS M
 
	  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
      M.[MENU_ID]=P.[PUBLISH_OBJECT_ID] 
      AND
      M.[MENU_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID] 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
    
 where [MENU_IS_DELETED] = 0
 order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuGetByCategory]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetByCategory]
	@P_MENU_CATEGORY_ID int,
	@P_PUBLISH_MODULE_ID int,
	@P_MENU_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	M.[MENU_ID],
	M.[MENU_NAME],
	M.[MENU_DESCRIPTION],
	M.[MENU_KEYWORDS],
	M.[MENU_SEO_NAME],
	M.[MENU_DETAILS],
	M.[MENU_URL],
	M.[MENU_IMAGE],
	M.[MENU_PAGE_ID],
	M.[MENU_CATEGORY_ID],
	M.[MENU_PARENT_ID],
	M.[MENU_CREATION_DAY],
	M.[MENU_CREATION_SEC],
	M.[MENU_IS_DELETED],
	M.[MENU_PORTAL_ID],
	M.[MENU_LANGUAGE_ID],
	M.[MENU_TYPE],
	M.[MENU_ORDER],
	M.[MENU_CREATED_BY],
	M.[MENU_PARENT_OBJ_ID],
	(select top 1 MENU_PARENT_ID from SETUP.MENU where M.[MENU_ID] = 
			case when M.[MENU_PARENT_OBJ_ID] > 0 then M.[MENU_PARENT_OBJ_ID] else M.[MENU_ID] end )
				 as MAIN_PARENT_ID, --parent id of parent Obj ID
				 
	P.[PUBLISH_TYPE_ID]
  from [SETUP].[MENU] AS M
 
	  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
      P.[PUBLISH_OBJECT_ID] = case when M.[MENU_PARENT_OBJ_ID] > 0 then P.[PUBLISH_OBJECT_ID] else M.[MENU_ID] end
      AND
      M.[MENU_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID] 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
      
	where [MENU_CATEGORY_ID] = @P_MENU_CATEGORY_ID
	and
		[MENU_IS_DELETED] = 0 and [MENU_LANGUAGE_ID] =@P_MENU_LANGUAGE_ID
	order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuGetByID]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetByID]
	@P_MENU_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	M.[MENU_ID],
	M.[MENU_NAME],
	M.[MENU_DESCRIPTION],
	M.[MENU_KEYWORDS],
	M.[MENU_SEO_NAME],
	M.[MENU_DETAILS],
	M.[MENU_URL],
	M.[MENU_IMAGE],
	M.[MENU_PAGE_ID],
	M.[MENU_CATEGORY_ID],
	M.[MENU_PARENT_ID],
	M.[MENU_CREATION_DAY],
	M.[MENU_CREATION_SEC],
	M.[MENU_IS_DELETED],
	M.[MENU_PORTAL_ID],
	M.[MENU_LANGUAGE_ID],
	M.[MENU_TYPE],
	M.[MENU_ORDER],
	M.[MENU_CREATED_BY],
	M.[MENU_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [SETUP].[MENU] AS M
  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
      M.[MENU_ID]=P.[PUBLISH_OBJECT_ID] 
      AND
      M.[MENU_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID] 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID  
		Where [MENU_ID] = @P_MENU_ID
		and
		[MENU_IS_DELETED] = 0
		order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuGetByIDAndLang]...';


GO
create PROCEDURE [SETUP].[MenuGetByIDAndLang]
	@P_MENU_ID int,
	@P_MENU_LANGUAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	M.[MENU_ID],
	M.[MENU_NAME],
	M.[MENU_DESCRIPTION],
	M.[MENU_KEYWORDS],
	M.[MENU_SEO_NAME],
	M.[MENU_DETAILS],
	M.[MENU_URL],
	M.[MENU_IMAGE],
	M.[MENU_PAGE_ID],
	M.[MENU_CATEGORY_ID],
	M.[MENU_PARENT_ID],
	M.[MENU_CREATION_DAY],
	M.[MENU_CREATION_SEC],
	M.[MENU_IS_DELETED],
	M.[MENU_PORTAL_ID],
	M.[MENU_LANGUAGE_ID],
	M.[MENU_TYPE],
	M.[MENU_ORDER],
	M.[MENU_CREATED_BY],
	M.[MENU_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [SETUP].[MENU] AS M
  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
     P.[PUBLISH_OBJECT_ID]  = case when M.[MENU_PARENT_OBJ_ID] >0 then M.[MENU_PARENT_OBJ_ID] else  M.[MENU_ID] end
      AND
      M.[MENU_LANGUAGE_ID] = @P_MENU_LANGUAGE_ID 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID  
		Where [MENU_ID] = @P_MENU_ID
		and
		[MENU_IS_DELETED] = 0
		order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuGetByPage]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetByPage]
	@P_MENU_PAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	M.[MENU_ID],
	M.[MENU_NAME],
	M.[MENU_DESCRIPTION],
	M.[MENU_KEYWORDS],
	M.[MENU_SEO_NAME],
	M.[MENU_DETAILS],
	M.[MENU_URL],
	M.[MENU_IMAGE],
	M.[MENU_PAGE_ID],
	M.[MENU_CATEGORY_ID],
	M.[MENU_PARENT_ID],
	M.[MENU_CREATION_DAY],
	M.[MENU_CREATION_SEC],
	M.[MENU_IS_DELETED],
	M.[MENU_PORTAL_ID],
	M.[MENU_LANGUAGE_ID],
	M.[MENU_TYPE],
	M.[MENU_ORDER],
	M.[MENU_CREATED_BY],
	M.[MENU_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID]
 from [SETUP].[MENU] AS M
  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
      M.[MENU_ID]=P.[PUBLISH_OBJECT_ID] 
      AND
      M.[MENU_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID] 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
	where [MENU_PAGE_ID] = @P_MENU_PAGE_ID
	and
		[MENU_IS_DELETED] = 0
	order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuGetByParent]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetByParent]
	@P_MENU_PARENT_ID int,
	@P_MENU_PORTAL_ID int,
	@P_MENU_LANGUAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	M.[MENU_ID],
	M.[MENU_NAME],
	M.[MENU_DESCRIPTION],
	M.[MENU_KEYWORDS],
	M.[MENU_SEO_NAME],
	M.[MENU_DETAILS],
	M.[MENU_URL],
	M.[MENU_IMAGE],
	M.[MENU_PAGE_ID],
	M.[MENU_CATEGORY_ID],
	M.[MENU_PARENT_ID],
	M.[MENU_CREATION_DAY],
	M.[MENU_CREATION_SEC],
	M.[MENU_IS_DELETED],
	M.[MENU_PORTAL_ID],
	M.[MENU_LANGUAGE_ID],
	M.[MENU_TYPE],
	M.[MENU_ORDER],
	M.[MENU_CREATED_BY],
	M.[MENU_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID] 
	
 from [SETUP].[MENU] AS M
  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
      M.[MENU_ID]=P.[PUBLISH_OBJECT_ID] 
      AND
      M.[MENU_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID] 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
	where
	[MENU_PARENT_ID] = @P_MENU_PARENT_ID
	and
	[MENU_PORTAL_ID] = @P_MENU_PORTAL_ID
	and
	[MENU_LANGUAGE_ID] = @P_MENU_LANGUAGE_ID
	and
	[MENU_IS_DELETED] = 0
	order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuGetByParentObjID]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetByParentObjID]
	@P_MENU_PARENT_OBJ_ID int,
	@P_MENU_LANGUAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[MENU_ID],
	[MENU_NAME],
	[MENU_DESCRIPTION],
	[MENU_KEYWORDS],
	[MENU_SEO_NAME],
	[MENU_DETAILS],
	[MENU_URL],
	[MENU_IMAGE],
	[MENU_PAGE_ID],
	[MENU_CATEGORY_ID],
	[MENU_PARENT_ID],
	[MENU_CREATION_DAY],
	[MENU_CREATION_SEC],
	[MENU_IS_DELETED],
	[MENU_PORTAL_ID],
	[MENU_LANGUAGE_ID],
	[MENU_TYPE],
	[MENU_ORDER],
	[MENU_CREATED_BY],
	[MENU_PARENT_OBJ_ID]
 from [SETUP].[MENU] AS M
  
	where
	[MENU_PARENT_OBJ_ID] = @P_MENU_PARENT_OBJ_ID
	and
	[MENU_LANGUAGE_ID] = @P_MENU_LANGUAGE_ID
	
	and
	[MENU_IS_DELETED] = 0
	
END
GO
PRINT N'Creating [SETUP].[MenuGetByPortalLanguage]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetByPortalLanguage]
	@P_MENU_PORTAL_ID int,
	@P_MENU_LANGUAGE_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[MENU_ID],
	[MENU_NAME],
	[MENU_DESCRIPTION],
	[MENU_KEYWORDS],
	[MENU_SEO_NAME],
	[MENU_DETAILS],
	[MENU_URL],
	[MENU_IMAGE],
	[MENU_PAGE_ID],
	[MENU_CATEGORY_ID],
	[MENU_PARENT_ID],
	[MENU_CREATION_DAY],
	[MENU_CREATION_SEC],
	[MENU_IS_DELETED],
	[MENU_PORTAL_ID],
	[MENU_LANGUAGE_ID],
	[MENU_TYPE],
	[MENU_ORDER],
	[MENU_CREATED_BY],
	[MENU_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID] 
 from [SETUP].[MENU] AS M
  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
      M.[MENU_ID]=P.[PUBLISH_OBJECT_ID] 
      AND
      M.[MENU_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID] 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
	where 
	[MENU_PORTAL_ID] = @P_MENU_PORTAL_ID
	and
	[MENU_LANGUAGE_ID] = @P_MENU_LANGUAGE_ID
	and
	[MENU_IS_DELETED] = 0
	order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuGetParentObjByCategory]...';


GO
CREATE PROCEDURE [SETUP].[MenuGetParentObjByCategory]
	@P_MENU_CATEGORY_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	M.[MENU_ID],
	M.[MENU_NAME],
	M.[MENU_DESCRIPTION],
	M.[MENU_KEYWORDS],
	M.[MENU_SEO_NAME],
	M.[MENU_DETAILS],
	M.[MENU_URL],
	M.[MENU_IMAGE],
	M.[MENU_PAGE_ID],
	M.[MENU_CATEGORY_ID],
	M.[MENU_PARENT_ID],
	M.[MENU_CREATION_DAY],
	M.[MENU_CREATION_SEC],
	M.[MENU_IS_DELETED],
	M.[MENU_PORTAL_ID],
	M.[MENU_LANGUAGE_ID],
	M.[MENU_TYPE],
	M.[MENU_ORDER],
	M.[MENU_CREATED_BY],
	M.[MENU_PARENT_OBJ_ID],
	P.[PUBLISH_TYPE_ID] 
 from [SETUP].[MENU] AS M
  LEFT OUTER JOIN
      [SETUP].PUBLISH AS P
      ON 
      M.[MENU_ID]=P.[PUBLISH_OBJECT_ID] 
      AND
      M.[MENU_LANGUAGE_ID] = P.[PUBLISH_LANGUAGE_ID] 
      AND
      M.[MENU_PORTAL_ID] = P.[PUBLISH_PORTAL_ID]
      AND
      P.[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID 
	where
	[MENU_PARENT_OBJ_ID] = 0
	and
	[MENU_CATEGORY_ID] = @P_MENU_CATEGORY_ID
	and
	[MENU_IS_DELETED] = 0
	order by [MENU_ORDER]
END
GO
PRINT N'Creating [SETUP].[MenuUpdate]...';


GO
CREATE PROCEDURE [SETUP].[MenuUpdate]
	@P_MENU_ID int,
    @P_MENU_NAME nvarchar(500),
    @P_MENU_DESCRIPTION nvarchar(1000),
	@P_MENU_KEYWORDS nvarchar(1000),
	@P_MENU_SEO_NAME nvarchar(1000),
	@P_MENU_DETAILS ntext,
    @P_MENU_URL nvarchar(1000),
	@P_MENU_IMAGE nvarchar(500),
	@P_MENU_PAGE_ID int,
	@P_MENU_CATEGORY_ID int,
	@P_MENU_PARENT_ID int,
	@P_MENU_CREATION_DAY int,
	@P_MENU_CREATION_SEC int,
	@P_MENU_IS_DELETED bit,
	@P_MENU_PORTAL_ID int,
	@P_MENU_LANGUAGE_ID int,
	@P_MENU_TYPE int,
	@P_MENU_ORDER int,
	@P_MENU_CREATED_BY int,
	@P_MENU_PARENT_OBJ_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[MENU] SET
		[MENU_NAME]=@P_MENU_NAME
		,[MENU_DESCRIPTION]=@P_MENU_DESCRIPTION
		,[MENU_KEYWORDS]=@P_MENU_KEYWORDS
		,[MENU_SEO_NAME]=@P_MENU_SEO_NAME
		,[MENU_DETAILS]=@P_MENU_DETAILS
		,[MENU_URL]=@P_MENU_URL
		,[MENU_IMAGE]=@P_MENU_IMAGE
		,[MENU_PAGE_ID]=@P_MENU_PAGE_ID
		,[MENU_CATEGORY_ID]=@P_MENU_CATEGORY_ID
		,[MENU_PARENT_ID]=@P_MENU_PARENT_ID
		,[MENU_CREATION_DAY]=@P_MENU_CREATION_DAY
		,[MENU_CREATION_SEC]=@P_MENU_CREATION_SEC
		,[MENU_IS_DELETED]=@P_MENU_IS_DELETED
		,[MENU_PORTAL_ID]=@P_MENU_PORTAL_ID
		,[MENU_LANGUAGE_ID]=@P_MENU_LANGUAGE_ID
		,[MENU_TYPE]=@P_MENU_TYPE
		,[MENU_ORDER]=@P_MENU_ORDER
		,[MENU_CREATED_BY] = @P_MENU_CREATED_BY
		,[MENU_PARENT_OBJ_ID] = @P_MENU_PARENT_OBJ_ID
		Where MENU_ID=@P_MENU_ID
END
GO
PRINT N'Creating [SETUP].[ModuleGetAll]...';


GO
CREATE PROCEDURE [SETUP].[ModuleGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[MODULE_ID],
	[MODULE_NAME],
	[MODULE_DESCRIPTION],
	[MODULE_IMAGE],
	[MODULE_IS_DELETED],
	[MODULE_CREATION_DAY],
	[MODULE_CREATION_SEC],
	[MODULE_CREATED_BY],
	[MODULE_PARENT_ID]

	from [SETUP].[MODULE]
	where
	[MODULE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[ModuleGetByParent]...';


GO
CREATE PROCEDURE [SETUP].[ModuleGetByParent]
	@P_MODULE_PARENT_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[MODULE_ID],
	[MODULE_NAME],
	[MODULE_DESCRIPTION],
	[MODULE_IMAGE],
	[MODULE_IS_DELETED],
	[MODULE_CREATION_DAY],
	[MODULE_CREATION_SEC],
	[MODULE_CREATED_BY],
	[MODULE_PARENT_ID]

	from [SETUP].[MODULE]
	where
	[MODULE_IS_DELETED] = 0
	AND
	[MODULE_PARENT_ID] = @P_MODULE_PARENT_ID
END
GO
PRINT N'Creating [SETUP].[PageAdd]...';


GO
CREATE PROCEDURE [SETUP].[PageAdd]
	@P_PAGE_ID int output,
	@P_PAGE_NAME nvarchar(500),
	@P_PAGE_TITLE nvarchar(500),
	@P_PAGE_DESCRIPTION nvarchar(1000),
	@P_PAGE_KEYWORDS nvarchar(1000),
	@P_PAGE_SEO_NAME nvarchar(1000),
	@P_PAGE_ICON nvarchar(500),
	@P_PAGE_DETAILS ntext,
	@P_PAGE_CREATION_DAY int,
	@P_PAGE_CREATION_SEC int,
	@P_PAGE_IS_DELETED bit,
	@P_PAGE_TYPE int,
	@P_PAGE_TEMPLATE_ID int,
	@P_PAGE_LANGUAGE_ID int,
	@P_PAGE_PORTAL_ID int,
	@P_PAGE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[PAGE]
		(
		[PAGE_NAME]
		,[PAGE_TITLE]
		,[PAGE_DESCRIPTION]
		,[PAGE_KEYWORDS]
		,[PAGE_SEO_NAME]
		,[PAGE_ICON]
		,[PAGE_DETAILS]
		,[PAGE_CREATION_DAY]
		,[PAGE_CREATION_SEC]
		,[PAGE_IS_DELETED]
		,[PAGE_TYPE]
		,[PAGE_TEMPLATE_ID]
		,[PAGE_LANGUAGE_ID]
		,[PAGE_PORTAL_ID]
		,[PAGE_CREATED_BY]
		)
	VALUES
		(
		@P_PAGE_NAME
		,@P_PAGE_TITLE
		,@P_PAGE_DESCRIPTION
		,@P_PAGE_KEYWORDS
		,@P_PAGE_SEO_NAME
		,@P_PAGE_ICON
		,@P_PAGE_DETAILS
		,@P_PAGE_CREATION_DAY
		,@P_PAGE_CREATION_SEC
		,@P_PAGE_IS_DELETED
		,@P_PAGE_TYPE
		,@P_PAGE_TEMPLATE_ID
		,@P_PAGE_LANGUAGE_ID
		,@P_PAGE_PORTAL_ID
		,@P_PAGE_CREATED_BY
		)
		
		set @P_PAGE_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[PageDelete]...';


GO
CREATE PROCEDURE [SETUP].[PageDelete]
	@P_PAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[PAGE]
		Where [PAGE_ID] = @P_PAGE_ID
END
GO
PRINT N'Creating [SETUP].[PageDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[PageDeleteLogical]
	@P_PAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[PAGE] set
	[PAGE_IS_DELETED]=1
	Where [PAGE_ID] = @P_PAGE_ID
END
GO
PRINT N'Creating [SETUP].[PageGetAll]...';


GO
CREATE PROCEDURE [SETUP].[PageGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PAGE_ID]
	,[PAGE_NAME]
	,[PAGE_TITLE]
	,[PAGE_DESCRIPTION]
	,[PAGE_KEYWORDS]
	,[PAGE_SEO_NAME]
	,[PAGE_ICON]
	,[PAGE_DETAILS]
	,[PAGE_CREATION_DAY]
	,[PAGE_CREATION_SEC]
	,[PAGE_IS_DELETED]
	,[PAGE_TYPE]
	,[PAGE_TEMPLATE_ID]
	,[PAGE_LANGUAGE_ID]
	,[PAGE_PORTAL_ID]
	,[PAGE_CREATED_BY]
 from [SETUP].[PAGE]
 where [PAGE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[PageGetByID]...';


GO
CREATE PROCEDURE [SETUP].[PageGetByID]
	@P_PAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PAGE_ID]
	,[PAGE_NAME]
	,[PAGE_TITLE]
	,[PAGE_DESCRIPTION]
	,[PAGE_KEYWORDS]
	,[PAGE_SEO_NAME]
	,[PAGE_ICON]
	,[PAGE_DETAILS]
	,[PAGE_CREATION_DAY]
	,[PAGE_CREATION_SEC]
	,[PAGE_IS_DELETED]
	,[PAGE_TYPE]
	,[PAGE_TEMPLATE_ID]
	,[PAGE_LANGUAGE_ID]
	,[PAGE_PORTAL_ID]
	,[PAGE_CREATED_BY]
 from [SETUP].[PAGE]
 where 
	[PAGE_IS_DELETED] = 0
	and
	[PAGE_ID] = @P_PAGE_ID
END
GO
PRINT N'Creating [SETUP].[PageGetByName]...';


GO
CREATE PROCEDURE [SETUP].[PageGetByName]
	@P_PAGE_NAME nvarchar(500),
	@P_PAGE_PORTAL_ID int,
	@P_PAGE_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PAGE_ID]
	,[PAGE_NAME]
	,[PAGE_TITLE]
	,[PAGE_DESCRIPTION]
	,[PAGE_KEYWORDS]
	,[PAGE_SEO_NAME]
	,[PAGE_ICON]
	,[PAGE_DETAILS]
	,[PAGE_CREATION_DAY]
	,[PAGE_CREATION_SEC]
	,[PAGE_IS_DELETED]
	,[PAGE_TYPE]
	,[PAGE_TEMPLATE_ID]
	,[PAGE_LANGUAGE_ID]
	,[PAGE_PORTAL_ID]
	,[PAGE_CREATED_BY]
 from [SETUP].[PAGE]
 where
	[PAGE_IS_DELETED] = 0
	and
	[PAGE_NAME] = @P_PAGE_NAME
	and
	[PAGE_LANGUAGE_ID] = @P_PAGE_LANGUAGE_ID
	and
	[PAGE_PORTAL_ID] = @P_PAGE_PORTAL_ID
	
END
GO
PRINT N'Creating [SETUP].[PageGetByPortalLanguage]...';


GO
CREATE PROCEDURE [SETUP].[PageGetByPortalLanguage]
	@P_PAGE_PORTAL_ID int,
	@P_PAGE_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PAGE_ID]
	,[PAGE_NAME]
	,[PAGE_TITLE]
	,[PAGE_DESCRIPTION]
	,[PAGE_KEYWORDS]
	,[PAGE_SEO_NAME]
	,[PAGE_ICON]
	,[PAGE_DETAILS]
	,[PAGE_CREATION_DAY]
	,[PAGE_CREATION_SEC]
	,[PAGE_IS_DELETED]
	,[PAGE_TYPE]
	,[PAGE_TEMPLATE_ID]
	,[PAGE_LANGUAGE_ID]
	,[PAGE_PORTAL_ID]
	,[PAGE_CREATED_BY]
 from [SETUP].[PAGE]
 where
	[PAGE_IS_DELETED] = 0
	and
	[PAGE_LANGUAGE_ID] = @P_PAGE_LANGUAGE_ID
	and
	[PAGE_PORTAL_ID] = @P_PAGE_PORTAL_ID
	
END
GO
PRINT N'Creating [SETUP].[PageGetByTemplate]...';


GO
CREATE PROCEDURE [SETUP].[PageGetByTemplate]
	@P_PAGE_TEMPLATE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PAGE_ID]
	,[PAGE_NAME]
	,[PAGE_TITLE]
	,[PAGE_DESCRIPTION]
	,[PAGE_KEYWORDS]
	,[PAGE_SEO_NAME]
	,[PAGE_ICON]
	,[PAGE_DETAILS]
	,[PAGE_CREATION_DAY]
	,[PAGE_CREATION_SEC]
	,[PAGE_IS_DELETED]
	,[PAGE_TYPE]
	,[PAGE_TEMPLATE_ID]
	,[PAGE_LANGUAGE_ID]
	,[PAGE_PORTAL_ID]
	,[PAGE_CREATED_BY]
 from [SETUP].[PAGE]
 where 
	[PAGE_IS_DELETED] = 0
	and
	[PAGE_TEMPLATE_ID] = @P_PAGE_TEMPLATE_ID
END
GO
PRINT N'Creating [SETUP].[PageUpdate]...';


GO
CREATE PROCEDURE [SETUP].[PageUpdate]
	@P_PAGE_ID int,
	@P_PAGE_NAME nvarchar(500),
	@P_PAGE_TITLE nvarchar(500),
	@P_PAGE_DESCRIPTION nvarchar(1000),
	@P_PAGE_KEYWORDS nvarchar(1000),
	@P_PAGE_SEO_NAME nvarchar(1000),
	@P_PAGE_ICON nvarchar(500),
	@P_PAGE_DETAILS ntext,
	@P_PAGE_CREATION_DAY int,
	@P_PAGE_CREATION_SEC int,
	@P_PAGE_IS_DELETED bit,
	@P_PAGE_TYPE int,
	@P_PAGE_TEMPLATE_ID int,
	@P_PAGE_PORTAL_ID int,
	@P_PAGE_LANGUAGE_ID int,
	@P_PAGE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[PAGE] SET
		[PAGE_NAME] = @P_PAGE_NAME
		,[PAGE_TITLE] = @P_PAGE_TITLE
		,[PAGE_DESCRIPTION] = @P_PAGE_DESCRIPTION
		,[PAGE_KEYWORDS] = @P_PAGE_KEYWORDS
		,[PAGE_SEO_NAME] = @P_PAGE_SEO_NAME
		,[PAGE_ICON] = @P_PAGE_ICON
		,[PAGE_DETAILS] = @P_PAGE_DETAILS
		,[PAGE_CREATION_DAY] = @P_PAGE_CREATION_DAY
		,[PAGE_CREATION_SEC] = @P_PAGE_CREATION_SEC
		,[PAGE_IS_DELETED] = @P_PAGE_IS_DELETED
		,[PAGE_TYPE] = @P_PAGE_TYPE
		,[PAGE_TEMPLATE_ID] = @P_PAGE_TEMPLATE_ID
		,[PAGE_LANGUAGE_ID] = @P_PAGE_LANGUAGE_ID
		,[PAGE_PORTAL_ID] = @P_PAGE_PORTAL_ID
		,[PAGE_CREATED_BY] = @P_PAGE_CREATED_BY
		Where PAGE_ID = @P_PAGE_ID
END
GO
PRINT N'Creating [SETUP].[PublishAdd]...';


GO
CREATE PROCEDURE [SETUP].[PublishAdd]
	@P_PUBLISH_ID int output,
	@P_PUBLISH_MODULE_ID int,
	@P_PUBLISH_OBJECT_ID int,
	@P_PUBLISH_TYPE_ID int,
	@P_PUBLISH_FROM_DAY int,
	@P_PUBLISH_FROM_SEC bit,
	@P_PUBLISH_TO_DAY int,
	@P_PUBLISH_TO_SEC int,
	@P_PUBLISH_CREATED_BY int,
	@P_PUBLISH_PORTAL_ID int,
	@P_PUBLISH_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @COUNT INT;
	
	SELECT @COUNT = COUNT(1) FROM [SETUP].[PUBLISH] WHERE 
	[PUBLISH_OBJECT_ID] = @P_PUBLISH_OBJECT_ID
	and 
	[PUBLISH_LANGUAGE_ID] = @P_PUBLISH_LANGUAGE_ID
	and
	[PUBLISH_PORTAL_ID] = @P_PUBLISH_PORTAL_ID
	and
	[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
	
	IF @COUNT <= 0 
	BEGIN
	INSERT INTO [SETUP].[PUBLISH]
		(
		[PUBLISH_MODULE_ID]
		,[PUBLISH_OBJECT_ID]
		,[PUBLISH_TYPE_ID]
		,[PUBLISH_FROM_DAY]
		,[PUBLISH_FROM_SEC]
		,[PUBLISH_TO_DAY]
		,[PUBLISH_TO_SEC]
		,[PUBLISH_CREATED_BY]
		,[PUBLISH_PORTAL_ID]
		,[PUBLISH_LANGUAGE_ID]
		)
	VALUES
		(
		@P_PUBLISH_MODULE_ID,
		@P_PUBLISH_OBJECT_ID,
		@P_PUBLISH_TYPE_ID,
		@P_PUBLISH_FROM_DAY,
		@P_PUBLISH_FROM_SEC,
		@P_PUBLISH_TO_DAY,
		@P_PUBLISH_TO_SEC,
		@P_PUBLISH_CREATED_BY,
		@P_PUBLISH_PORTAL_ID,
		@P_PUBLISH_LANGUAGE_ID
		)
		set @P_PUBLISH_ID=SCOPE_IDENTITY()
		END
END
GO
PRINT N'Creating [SETUP].[PublishDelete]...';


GO
CREATE PROCEDURE [SETUP].[PublishDelete]
	@P_PUBLISH_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[PUBLISH]
		Where [PUBLISH_ID] = @P_PUBLISH_ID
END
GO
PRINT N'Creating [SETUP].[PublishDeleteByObjID]...';


GO
CREATE PROCEDURE [SETUP].[PublishDeleteByObjID]
	@P_PUBLISH_OBJECT_ID int,
	@P_PUBLISH_MODULE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[PUBLISH]
		Where [PUBLISH_OBJECT_ID] = @P_PUBLISH_OBJECT_ID and
		  PUBLISH_MODULE_ID = @P_PUBLISH_MODULE_ID   
END
GO
PRINT N'Creating [SETUP].[PublishGetAll]...';


GO
CREATE PROCEDURE [SETUP].[PublishGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PUBLISH_ID]
	,[PUBLISH_MODULE_ID]
	,[PUBLISH_OBJECT_ID]
	,[PUBLISH_TYPE_ID]
	,[PUBLISH_FROM_DAY]
	,[PUBLISH_FROM_SEC]
	,[PUBLISH_TO_DAY]
	,[PUBLISH_TO_SEC]
	,[PUBLISH_CREATED_BY]
	,[PUBLISH_PORTAL_ID]
	,[PUBLISH_LANGUAGE_ID]
 from [SETUP].[PUBLISH]
END
GO
PRINT N'Creating [SETUP].[PublishGetByID]...';


GO
CREATE PROCEDURE [SETUP].[PublishGetByID]
	@P_PUBLISH_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PUBLISH_ID]
	,[PUBLISH_MODULE_ID]
	,[PUBLISH_OBJECT_ID]
	,[PUBLISH_TYPE_ID]
	,[PUBLISH_FROM_DAY]
	,[PUBLISH_FROM_SEC]
	,[PUBLISH_TO_DAY]
	,[PUBLISH_TO_SEC]
	,[PUBLISH_CREATED_BY]
	,[PUBLISH_PORTAL_ID]
	,[PUBLISH_LANGUAGE_ID]
 from [SETUP].[PUBLISH]
		Where [PUBLISH_ID] = @P_PUBLISH_ID
END
GO
PRINT N'Creating [SETUP].[PublishGetByModuleID]...';


GO
CREATE PROCEDURE [SETUP].[PublishGetByModuleID]
	@P_PUBLISH_MODULE_ID int,
	@P_PUBLISH_PORTAL_ID int,
	@P_PUBLISH_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[PUBLISH_ID]
	,[PUBLISH_MODULE_ID]
	,[PUBLISH_OBJECT_ID]
	,[PUBLISH_TYPE_ID]
	,[PUBLISH_FROM_DAY]
	,[PUBLISH_FROM_SEC]
	,[PUBLISH_TO_DAY]
	,[PUBLISH_TO_SEC]
	,[PUBLISH_CREATED_BY]
	,[PUBLISH_PORTAL_ID]
	,[PUBLISH_LANGUAGE_ID]
 from [SETUP].[PUBLISH]
	where 
	(@P_PUBLISH_MODULE_ID = -1 or [PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID)
	and
	[PUBLISH_PORTAL_ID] = @P_PUBLISH_PORTAL_ID
	and
	(@P_PUBLISH_LANGUAGE_ID = -1 or [PUBLISH_LANGUAGE_ID] = @P_PUBLISH_LANGUAGE_ID)
END
GO
PRINT N'Creating [SETUP].[PublishUpdate]...';


GO
CREATE PROCEDURE [SETUP].[PublishUpdate]
	@P_PUBLISH_ID int,
	@P_PUBLISH_MODULE_ID int,
	@P_PUBLISH_OBJECT_ID int,
	@P_PUBLISH_TYPE_ID int,
	@P_PUBLISH_FROM_DAY int,
	@P_PUBLISH_FROM_SEC bit,
	@P_PUBLISH_TO_DAY int,
	@P_PUBLISH_TO_SEC int,
	@P_PUBLISH_CREATED_BY int,
	@P_PUBLISH_PORTAL_ID int,
	@P_PUBLISH_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[PUBLISH] SET
		[PUBLISH_MODULE_ID] = @P_PUBLISH_MODULE_ID
		,[PUBLISH_OBJECT_ID] = @P_PUBLISH_OBJECT_ID
		,[PUBLISH_TYPE_ID] = @P_PUBLISH_TYPE_ID
		,[PUBLISH_FROM_DAY] = @P_PUBLISH_FROM_DAY
		,[PUBLISH_FROM_SEC] = @P_PUBLISH_FROM_SEC
		,[PUBLISH_TO_DAY] = @P_PUBLISH_TO_DAY
		,[PUBLISH_TO_SEC] = @P_PUBLISH_TO_SEC
		,[PUBLISH_CREATED_BY] = @P_PUBLISH_CREATED_BY
		,[PUBLISH_PORTAL_ID] = @P_PUBLISH_PORTAL_ID
		,[PUBLISH_LANGUAGE_ID] = @P_PUBLISH_LANGUAGE_ID
		Where [PUBLISH_ID] = @P_PUBLISH_ID
END
GO
PRINT N'Creating [SETUP].[StyleAdd]...';


GO
CREATE PROCEDURE [SETUP].[StyleAdd]
	@P_STYLE_ID int output,
	@P_STYLE_NAME nvarchar(500),
	@P_STYLE_FILE_NAME nvarchar(1000),
	@P_STYLE_DETAILS ntext,
	@P_STYLE_IS_DELETED bit,
	@P_STYLE_PORTAL_ID int,
	@P_STYLE_LANGUAGE_ID int,
	@P_STYLE_CREATION_DAY int,
	@P_STYLE_CREATION_SEC int,
	@P_STYLE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[STYLE]
		(
		[STYLE_NAME]
		,[STYLE_FILE_NAME]
		,[STYLE_DETAILS]
		,[STYLE_IS_DELETED]
		,[STYLE_PORTAL_ID]
		,[STYLE_LANGUAGE_ID]
		,[STYLE_CREATION_DAY]
		,[STYLE_CREATION_SEC]
		,[STYLE_CREATED_BY]
		)
	VALUES
		(
		@P_STYLE_NAME,
		@P_STYLE_FILE_NAME,
		@P_STYLE_DETAILS,
		@P_STYLE_IS_DELETED,
		@P_STYLE_PORTAL_ID,
		@P_STYLE_LANGUAGE_ID,
		@P_STYLE_CREATION_DAY,
		@P_STYLE_CREATION_SEC,
		@P_STYLE_CREATED_BY
		)
		
		set @P_STYLE_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[StyleDelete]...';


GO
CREATE PROCEDURE [SETUP].[StyleDelete]
	@P_STYLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[STYLE]
		Where [STYLE_ID] = @P_STYLE_ID
END
GO
PRINT N'Creating [SETUP].[StyleDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[StyleDeleteLogical]
	@P_STYLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[STYLE] set
	[STYLE_IS_DELETED] = 1
	Where [STYLE_ID] = @P_STYLE_ID
END
GO
PRINT N'Creating [SETUP].[StyleGetAll]...';


GO
CREATE PROCEDURE [SETUP].[StyleGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[STYLE_ID]
	,[STYLE_NAME]
	,[STYLE_FILE_NAME]
	,[STYLE_DETAILS]
	,[STYLE_IS_DELETED]
	,[STYLE_PORTAL_ID]
	,[STYLE_LANGUAGE_ID]
	,[STYLE_CREATION_DAY]
	,[STYLE_CREATION_SEC]
	,[STYLE_CREATED_BY]
 from [SETUP].[STYLE]
 where [STYLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[StyleGetByID]...';


GO
CREATE PROCEDURE [SETUP].[StyleGetByID]
	@P_STYLE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[STYLE_ID]
	,[STYLE_NAME]
	,[STYLE_FILE_NAME]
	,[STYLE_DETAILS]
	,[STYLE_IS_DELETED]
	,[STYLE_PORTAL_ID]
	,[STYLE_LANGUAGE_ID]
	,[STYLE_CREATION_DAY]
	,[STYLE_CREATION_SEC]
	,[STYLE_CREATED_BY]
 from [SETUP].[STYLE]
		Where [STYLE_ID] = @P_STYLE_ID
		and
		[STYLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[StyleGetByPortalLanguage]...';


GO
CREATE PROCEDURE [SETUP].[StyleGetByPortalLanguage]
	@P_STYLE_PORTAL_ID int,
	@P_STYLE_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[STYLE_ID]
	,[STYLE_NAME]
	,[STYLE_FILE_NAME]
	,[STYLE_DETAILS]
	,[STYLE_IS_DELETED]
	,[STYLE_PORTAL_ID]
	,[STYLE_LANGUAGE_ID]
	,[STYLE_CREATION_DAY]
	,[STYLE_CREATION_SEC]
	,[STYLE_CREATED_BY]
 from [SETUP].[STYLE]
	where 
	[STYLE_PORTAL_ID] = @P_STYLE_PORTAL_ID
	and
	[STYLE_LANGUAGE_ID] = @P_STYLE_LANGUAGE_ID
	and
	[STYLE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[StyleUpdate]...';


GO
CREATE PROCEDURE [SETUP].[StyleUpdate]
	@P_STYLE_ID int,
	@P_STYLE_NAME nvarchar(500),
	@P_STYLE_FILE_NAME nvarchar(1000),
	@P_STYLE_DETAILS ntext,
	@P_STYLE_IS_DELETED bit,
	@P_STYLE_PORTAL_ID int,
	@P_STYLE_LANGUAGE_ID int,
	@P_STYLE_CREATION_DAY int,
	@P_STYLE_CREATION_SEC int,
	@P_STYLE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[STYLE] SET
		[STYLE_NAME] = @P_STYLE_NAME
		,[STYLE_FILE_NAME] = @P_STYLE_FILE_NAME
		,[STYLE_DETAILS] = @P_STYLE_DETAILS
		,[STYLE_IS_DELETED] = @P_STYLE_IS_DELETED
		,[STYLE_PORTAL_ID] = @P_STYLE_PORTAL_ID
		,[STYLE_LANGUAGE_ID] = @P_STYLE_LANGUAGE_ID
		,[STYLE_CREATION_DAY] = @P_STYLE_CREATION_DAY
		,[STYLE_CREATION_SEC] = @P_STYLE_CREATION_SEC
		,[STYLE_CREATED_BY] = @P_STYLE_CREATED_BY
		Where [STYLE_ID] = @P_STYLE_ID
END
GO
PRINT N'Creating [SETUP].[TemplateAdd]...';


GO
CREATE PROCEDURE [SETUP].[TemplateAdd]
	@P_TEMPLATE_ID int output,
	@P_TEMPLATE_NAME nvarchar(500),
	@P_TEMPLATE_DESCRIPTION nvarchar(1000),
	@P_TEMPLATE_IMAGE nvarchar(500),
	@P_TEMPLATE_DETAILS ntext,
	@P_TEMPLATE_CREATION_DAY int,
	@P_TEMPLATE_CREATION_SEC int,
	@P_TEMPLATE_IS_DELETED bit,
	@P_TEMPLATE_LANGUAGE_ID int,
	@P_TEMPLATE_PORTAL_ID int,
	@P_TEMPLATE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[TEMPLATE]
		(
		[TEMPLATE_NAME]
		,[TEMPLATE_DESCRIPTION]
		,[TEMPLATE_IMAGE]
		,[TEMPLATE_DETAILS]
		,[TEMPLATE_CREATION_DAY]
		,[TEMPLATE_CREATION_SEC]
		,[TEMPLATE_IS_DELETED]
		,[TEMPLATE_LANGUAGE_ID]
		,[TEMPLATE_PORTAL_ID]
		,[TEMPLATE_CREATED_BY]
		)
	VALUES
		(
		@P_TEMPLATE_NAME
		,@P_TEMPLATE_DESCRIPTION
		,@P_TEMPLATE_IMAGE
		,@P_TEMPLATE_DETAILS
		,@P_TEMPLATE_CREATION_DAY
		,@P_TEMPLATE_CREATION_SEC
		,@P_TEMPLATE_IS_DELETED
		,@P_TEMPLATE_LANGUAGE_ID
		,@P_TEMPLATE_PORTAL_ID
		,@P_TEMPLATE_CREATED_BY
		)
		
		set @P_TEMPLATE_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[TemplateDelete]...';


GO
CREATE PROCEDURE [SETUP].[TemplateDelete]
	@P_TEMPLATE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[TEMPLATE]
		Where [TEMPLATE_ID] = @P_TEMPLATE_ID
END
GO
PRINT N'Creating [SETUP].[TemplateDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[TemplateDeleteLogical]
	@P_TEMPLATE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[TEMPLATE] set
	[TEMPLATE_IS_DELETED]=1
	Where [TEMPLATE_ID] = @P_TEMPLATE_ID
END
GO
PRINT N'Creating [SETUP].[TemplateGetAll]...';


GO
CREATE PROCEDURE [SETUP].[TemplateGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[TEMPLATE_ID]
	,[TEMPLATE_NAME]
	,[TEMPLATE_DESCRIPTION]
	,[TEMPLATE_IMAGE]
	,[TEMPLATE_DETAILS]
	,[TEMPLATE_CREATION_DAY]
	,[TEMPLATE_CREATION_SEC]
	,[TEMPLATE_IS_DELETED]
	,[TEMPLATE_LANGUAGE_ID]
	,[TEMPLATE_PORTAL_ID]
	,[TEMPLATE_CREATED_BY]
 from [SETUP].[TEMPLATE]
 where [TEMPLATE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[TemplateGetByID]...';


GO
CREATE PROCEDURE [SETUP].[TemplateGetByID]
	@P_TEMPLATE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[TEMPLATE_ID]
	,[TEMPLATE_NAME]
	,[TEMPLATE_DESCRIPTION]
	,[TEMPLATE_IMAGE]
	,[TEMPLATE_DETAILS]
	,[TEMPLATE_CREATION_DAY]
	,[TEMPLATE_CREATION_SEC]
	,[TEMPLATE_IS_DELETED]
	,[TEMPLATE_LANGUAGE_ID]
	,[TEMPLATE_PORTAL_ID]
	,[TEMPLATE_CREATED_BY]
from [SETUP].[TEMPLATE]
 where 
	[TEMPLATE_IS_DELETED] = 0
	and
	[TEMPLATE_ID] = @P_TEMPLATE_ID
END
GO
PRINT N'Creating [SETUP].[TemplateGetByPortalLanguage]...';


GO
CREATE PROCEDURE [SETUP].[TemplateGetByPortalLanguage]
	@P_TEMPLATE_PORTAL_ID int,
	@P_TEMPLATE_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[TEMPLATE_ID]
	,[TEMPLATE_NAME]
	,[TEMPLATE_DESCRIPTION]
	,[TEMPLATE_IMAGE]
	,[TEMPLATE_DETAILS]
	,[TEMPLATE_CREATION_DAY]
	,[TEMPLATE_CREATION_SEC]
	,[TEMPLATE_IS_DELETED]
	,[TEMPLATE_LANGUAGE_ID]
	,[TEMPLATE_PORTAL_ID]
	,[TEMPLATE_CREATED_BY]
from [SETUP].[TEMPLATE]
 where 
	[TEMPLATE_IS_DELETED] = 0
	and
	[TEMPLATE_LANGUAGE_ID] = @P_TEMPLATE_LANGUAGE_ID
	and
	[TEMPLATE_PORTAL_ID] = @P_TEMPLATE_PORTAL_ID
	
END
GO
PRINT N'Creating [SETUP].[TemplateUpdate]...';


GO
CREATE PROCEDURE [SETUP].[TemplateUpdate]
	@P_TEMPLATE_ID int,
	@P_TEMPLATE_NAME nvarchar(500),
	@P_TEMPLATE_DESCRIPTION nvarchar(1000),
	@P_TEMPLATE_IMAGE nvarchar(500),
	@P_TEMPLATE_DETAILS ntext,
	@P_TEMPLATE_CREATION_DAY int,
	@P_TEMPLATE_CREATION_SEC int,
	@P_TEMPLATE_IS_DELETED bit,
	@P_TEMPLATE_LANGUAGE_ID int,
	@P_TEMPLATE_PORTAL_ID int,
	@P_TEMPLATE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[TEMPLATE] SET
		[TEMPLATE_NAME] = @P_TEMPLATE_NAME
		,[TEMPLATE_DESCRIPTION] = @P_TEMPLATE_DESCRIPTION
		,[TEMPLATE_IMAGE] = @P_TEMPLATE_IMAGE
		,[TEMPLATE_DETAILS] = @P_TEMPLATE_DETAILS
		,[TEMPLATE_CREATION_DAY] = @P_TEMPLATE_CREATION_DAY
		,[TEMPLATE_CREATION_SEC] = @P_TEMPLATE_CREATION_SEC
		,[TEMPLATE_IS_DELETED] = @P_TEMPLATE_IS_DELETED
		,[TEMPLATE_LANGUAGE_ID] = @P_TEMPLATE_LANGUAGE_ID
		,[TEMPLATE_PORTAL_ID] = @P_TEMPLATE_PORTAL_ID
		,[TEMPLATE_CREATED_BY] = @P_TEMPLATE_CREATED_BY
		Where [TEMPLATE_ID] = @P_TEMPLATE_ID
END
GO
PRINT N'Creating [SETUP].[XSLTemplateAdd]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateAdd]
	@P_XSLTEMPLATE_ID int output,
	@P_XSLTEMPLATE_NAME nvarchar(500),
	@P_XSLTEMPLATE_DESCRIPTION nvarchar(1000),
	@P_XSLTEMPLATE_DETAILS ntext,
	@P_XSLTEMPLATE_MODULE_ID int,
	@P_XSLTEMPLATE_IS_DELETED bit,
	@P_XSLTEMPLATE_PORTAL_ID int,
	@P_XSLTEMPLATE_LANGUAGE_ID int,
	@P_XSLTEMPLATE_CREATION_DAY int,
	@P_XSLTEMPLATE_CREATION_SEC int,
	@P_XSLTEMPLATE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	INSERT INTO [SETUP].[XSLTEMPLATE]
		(
		[XSLTEMPLATE_NAME]
		,[XSLTEMPLATE_DESCRIPTION]
		,[XSLTEMPLATE_DETAILS]
		,[XSLTEMPLATE_MODULE_ID]
		,[XSLTEMPLATE_IS_DELETED]
		,[XSLTEMPLATE_PORTAL_ID]
		,[XSLTEMPLATE_LANGUAGE_ID]
		,[XSLTEMPLATE_CREATION_DAY]
		,[XSLTEMPLATE_CREATION_SEC]
		,[XSLTEMPLATE_CREATED_BY]
		)
	VALUES
		(
		@P_XSLTEMPLATE_NAME,
		@P_XSLTEMPLATE_DESCRIPTION,
		@P_XSLTEMPLATE_DETAILS,
		@P_XSLTEMPLATE_MODULE_ID,
		@P_XSLTEMPLATE_IS_DELETED,
		@P_XSLTEMPLATE_PORTAL_ID,
		@P_XSLTEMPLATE_LANGUAGE_ID,
		@P_XSLTEMPLATE_CREATION_DAY,
		@P_XSLTEMPLATE_CREATION_SEC,
		@P_XSLTEMPLATE_CREATED_BY
		)
		
		set @P_XSLTEMPLATE_ID=SCOPE_IDENTITY()
END
GO
PRINT N'Creating [SETUP].[XSLTemplateDelete]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateDelete]
	@P_XSLTEMPLATE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Delete from [SETUP].[XSLTEMPLATE]
		Where [XSLTEMPLATE_ID] = @P_XSLTEMPLATE_ID
END
GO
PRINT N'Creating [SETUP].[XSLTemplateDeleteLogical]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateDeleteLogical]
	@P_XSLTEMPLATE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[XSLTEMPLATE] set
	[XSLTEMPLATE_IS_DELETED] = 1
	Where [XSLTEMPLATE_ID] = @P_XSLTEMPLATE_ID
END
GO
PRINT N'Creating [SETUP].[XSLTemplateGetAll]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateGetAll]
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[XSLTEMPLATE_ID]
	,[XSLTEMPLATE_NAME]
	,[XSLTEMPLATE_DESCRIPTION]
	,[XSLTEMPLATE_DETAILS]
	,[XSLTEMPLATE_MODULE_ID]
	,[XSLTEMPLATE_IS_DELETED]
	,[XSLTEMPLATE_PORTAL_ID]
	,[XSLTEMPLATE_LANGUAGE_ID]
	,[XSLTEMPLATE_CREATION_DAY]
	,[XSLTEMPLATE_CREATION_SEC]
	,[XSLTEMPLATE_CREATED_BY]
 from [SETUP].[XSLTEMPLATE]
 where [XSLTEMPLATE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[XSLTemplateGetByID]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateGetByID]
	@P_XSLTEMPLATE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[XSLTEMPLATE_ID]
	,[XSLTEMPLATE_NAME]
	,[XSLTEMPLATE_DESCRIPTION]
	,[XSLTEMPLATE_DETAILS]
	,[XSLTEMPLATE_MODULE_ID]
	,[XSLTEMPLATE_IS_DELETED]
	,[XSLTEMPLATE_PORTAL_ID]
	,[XSLTEMPLATE_LANGUAGE_ID]
	,[XSLTEMPLATE_CREATION_DAY]
	,[XSLTEMPLATE_CREATION_SEC]
	,[XSLTEMPLATE_CREATED_BY]
 from [SETUP].[XSLTEMPLATE]
		Where [XSLTEMPLATE_ID] = @P_XSLTEMPLATE_ID
		and
		[XSLTEMPLATE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[XSLTemplateGetByModuleID]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateGetByModuleID]
	@P_XSLTEMPLATE_MODULE_ID int,
	@P_XSLTEMPLATE_PORTAL_ID int,
	@P_XSLTEMPLATE_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[XSLTEMPLATE_ID]
	,[XSLTEMPLATE_NAME]
	,[XSLTEMPLATE_DESCRIPTION]
	,[XSLTEMPLATE_DETAILS]
	,[XSLTEMPLATE_MODULE_ID]
	,[XSLTEMPLATE_IS_DELETED]
	,[XSLTEMPLATE_PORTAL_ID]
	,[XSLTEMPLATE_LANGUAGE_ID]
	,[XSLTEMPLATE_CREATION_DAY]
	,[XSLTEMPLATE_CREATION_SEC]
	,[XSLTEMPLATE_CREATED_BY]
 from [SETUP].[XSLTEMPLATE]
	where 
	[XSLTEMPLATE_MODULE_ID] = @P_XSLTEMPLATE_MODULE_ID
	and
	[XSLTEMPLATE_PORTAL_ID] = @P_XSLTEMPLATE_PORTAL_ID
	and
	[XSLTEMPLATE_LANGUAGE_ID] = @P_XSLTEMPLATE_LANGUAGE_ID
	and
		[XSLTEMPLATE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[XSLTemplateGetByPortalLanguage]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateGetByPortalLanguage]
	@P_XSLTEMPLATE_PORTAL_ID int,
	@P_XSLTEMPLATE_LANGUAGE_ID int
AS
BEGIN
	SET NOCOUNT ON;
	Select 
	[XSLTEMPLATE_ID]
	,[XSLTEMPLATE_NAME]
	,[XSLTEMPLATE_DESCRIPTION]
	,[XSLTEMPLATE_DETAILS]
	,[XSLTEMPLATE_MODULE_ID]
	,[XSLTEMPLATE_IS_DELETED]
	,[XSLTEMPLATE_PORTAL_ID]
	,[XSLTEMPLATE_LANGUAGE_ID]
	,[XSLTEMPLATE_CREATION_DAY]
	,[XSLTEMPLATE_CREATION_SEC]
	,[XSLTEMPLATE_CREATED_BY]
 from [SETUP].[XSLTEMPLATE]
	where 
	[XSLTEMPLATE_PORTAL_ID] = @P_XSLTEMPLATE_PORTAL_ID
	and
	[XSLTEMPLATE_LANGUAGE_ID] = @P_XSLTEMPLATE_LANGUAGE_ID
	and
	[XSLTEMPLATE_IS_DELETED] = 0
END
GO
PRINT N'Creating [SETUP].[XSLTemplateUpdate]...';


GO
CREATE PROCEDURE [SETUP].[XSLTemplateUpdate]
	@P_XSLTEMPLATE_ID int,
	@P_XSLTEMPLATE_NAME nvarchar(500),
	@P_XSLTEMPLATE_DESCRIPTION nvarchar(1000),
	@P_XSLTEMPLATE_DETAILS ntext,
	@P_XSLTEMPLATE_MODULE_ID int,
	@P_XSLTEMPLATE_IS_DELETED bit,
	@P_XSLTEMPLATE_PORTAL_ID int,
	@P_XSLTEMPLATE_LANGUAGE_ID int,
	@P_XSLTEMPLATE_CREATION_DAY int,
	@P_XSLTEMPLATE_CREATION_SEC int,
	@P_XSLTEMPLATE_CREATED_BY int
AS
BEGIN
	SET NOCOUNT ON;
	Update [SETUP].[XSLTEMPLATE] SET
		[XSLTEMPLATE_NAME] = @P_XSLTEMPLATE_NAME
		,[XSLTEMPLATE_DESCRIPTION] = @P_XSLTEMPLATE_DESCRIPTION
		,[XSLTEMPLATE_DETAILS] = @P_XSLTEMPLATE_DETAILS
		,[XSLTEMPLATE_MODULE_ID] = @P_XSLTEMPLATE_MODULE_ID
		,[XSLTEMPLATE_IS_DELETED] = @P_XSLTEMPLATE_IS_DELETED
		,[XSLTEMPLATE_PORTAL_ID] = @P_XSLTEMPLATE_PORTAL_ID
		,[XSLTEMPLATE_LANGUAGE_ID] = @P_XSLTEMPLATE_LANGUAGE_ID
		,[XSLTEMPLATE_CREATION_DAY] = @P_XSLTEMPLATE_CREATION_DAY
		,[XSLTEMPLATE_CREATION_SEC] = @P_XSLTEMPLATE_CREATION_SEC
		,[XSLTEMPLATE_CREATED_BY] = @P_XSLTEMPLATE_CREATED_BY
		Where [XSLTEMPLATE_ID] = @P_XSLTEMPLATE_ID
END
GO
-- Refactoring step to update target server with deployed transaction logs
CREATE TABLE  [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
GO
sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO

GO
ALTER TABLE [ECOMMERCE].[ATTRIBUTE] WITH CHECK CHECK CONSTRAINT [FK_ATTRIBUTE_GROUP];

ALTER TABLE [ECOMMERCE].[CATALOG] WITH CHECK CHECK CONSTRAINT [FK_CATALOG_CATALOG];

ALTER TABLE [ECOMMERCE].[CATALOG] WITH CHECK CHECK CONSTRAINT [FK_CATALOG_CATALOG1];

ALTER TABLE [ECOMMERCE].[COMBINATION_ATTRIBUTE] WITH CHECK CHECK CONSTRAINT [FK_COMBINATION_ATTRIBUTE_ATTRIBUTE];

ALTER TABLE [ECOMMERCE].[COMBINATION_ATTRIBUTE] WITH CHECK CHECK CONSTRAINT [FK_COMBINATION_ATTRIBUTE_PRODUCT_COMBINATION];

ALTER TABLE [ECOMMERCE].[COMBINATION_IMAGE] WITH CHECK CHECK CONSTRAINT [FK_COMBINATION_IMAGE_PRODUCT_COMBINATION];

ALTER TABLE [ECOMMERCE].[COMBINATION_IMAGE] WITH CHECK CHECK CONSTRAINT [FK_COMBINATION_IMAGE_PRODUCT_IMAGE];

ALTER TABLE [ECOMMERCE].[COMBINATION_PRODUCT] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_COMBINATION_PRODUCT];

ALTER TABLE [ECOMMERCE].[PRODUCT] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_MANUFACTURARE];

ALTER TABLE [ECOMMERCE].[PRODUCT] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_SUPPLIER];

ALTER TABLE [ECOMMERCE].[PRODUCT] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_TAX];

ALTER TABLE [ECOMMERCE].[PRODUCT_CATALOG] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_CATALOG_CATALOG];

ALTER TABLE [ECOMMERCE].[PRODUCT_CATALOG] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_CATALOG_PRODUCT];

ALTER TABLE [ECOMMERCE].[PRODUCT_FEATURE] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_FEATURE_FEATURE];

ALTER TABLE [ECOMMERCE].[PRODUCT_FEATURE] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_FEATURE_PRODUCT];

ALTER TABLE [ECOMMERCE].[PRODUCT_IMAGE] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_IMAGE_PRODUCT];

ALTER TABLE [ECOMMERCE].[PRODUCT_PRICE] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_PRICE_PRODUCT];